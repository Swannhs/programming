{"expireTime":9007200883718621000,"key":"gatsby-plugin-mdx-entire-payload-8f45b5e2b783734fb7d132d2c1d98439--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"19. Write a C program to sort a string array in descending order.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":70,"offset":92},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":70,"offset":92},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to sort a string array in descending order.\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n  char a[100];\n  char temp;\n  int i,j;\n  gets(a);\n  for(i=0;i<strlen(a);i++)\n  {\n      for(j=i+1;j<strlen(a);j++)\n  {\n      if(a[i]<a[j]){\n        temp=a[i];\n        a[i]=a[j];\n        a[j]=temp;\n  }\n  }}\n  printf(\"descending order string is:%s\",a);\n  }","position":{"start":{"line":4,"column":1,"offset":94},"end":{"line":26,"column":4,"offset":494},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":27,"column":5,"offset":500},"end":{"line":27,"column":11,"offset":506},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":496},"end":{"line":27,"column":11,"offset":506},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a string:acky\nascending order string ykca","position":{"start":{"line":28,"column":1,"offset":508},"end":{"line":31,"column":4,"offset":566},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":32,"column":4,"offset":571},"end":{"line":32,"column":22,"offset":589},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":568},"end":{"line":32,"column":22,"offset":589},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"19. Write a C++ program to sort a string array in descending order.","position":{"start":{"line":33,"column":5,"offset":595},"end":{"line":33,"column":72,"offset":662},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":591},"end":{"line":33,"column":72,"offset":662},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to sort a string array in descending order.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint  main()\n{\n  char a[100];\n  char temp;\n  int i,j;\n  cin >> a;\n  for(i=0;i<strlen(a);i++)\n  {\n      for(j=i+1;j<strlen(a);j++)\n      {\n        if(a[i]<a[j]){\n          temp=a[i];\n          a[i]=a[j];\n          a[j]=temp;\n        }\n      }\n  }\n  cin >> \"descending order string is:\" << a;\n}","position":{"start":{"line":34,"column":1,"offset":664},"end":{"line":59,"column":4,"offset":1117},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":60,"column":5,"offset":1123},"end":{"line":60,"column":11,"offset":1129},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1119},"end":{"line":60,"column":11,"offset":1129},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a string:acky\nascending order string ykca","position":{"start":{"line":61,"column":1,"offset":1131},"end":{"line":64,"column":4,"offset":1189},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":66,"column":4,"offset":1196},"end":{"line":66,"column":23,"offset":1215},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1193},"end":{"line":66,"column":23,"offset":1215},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"19. Write a Java program to sort a string array in descending order.","position":{"start":{"line":67,"column":5,"offset":1221},"end":{"line":67,"column":73,"offset":1289},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1217},"end":{"line":67,"column":73,"offset":1289},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to sort a string array in descending order.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        System.out.println(\"Enter a string: \");\n        String str, dec=\"\";\n        int i;\n        str = z.nextLine();\n        char[] charArray = str.toCharArray();\n        String word = new String(charArray);\n        for (i=word.length()-1; i >= 0; i--){\n            dec += word.charAt(i);\n        }\n        System.out.println(\"ascending order string \" + dec);\n    }\n}","position":{"start":{"line":68,"column":1,"offset":1291},"end":{"line":86,"column":4,"offset":1892},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":87,"column":5,"offset":1898},"end":{"line":87,"column":11,"offset":1904},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":1894},"end":{"line":87,"column":11,"offset":1904},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a string:acky\nascending order string ykca","position":{"start":{"line":88,"column":1,"offset":1906},"end":{"line":91,"column":4,"offset":1964},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to sort a string array in descending order.\",\"category\":\"String Index\",\"tags\":[\"string\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":94,"column":1,"offset":1968},"end":{"line":94,"column":213,"offset":2180},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":94,"column":213,"offset":2180}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to sort a string array in descending order.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"19. Write a C program to sort a string array in descending order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to sort a string array in descending order.\\n#include <stdio.h>\\n#include <string.h>\\nint main()\\n{\\n  char a[100];\\n  char temp;\\n  int i,j;\\n  gets(a);\\n  for(i=0;i<strlen(a);i++)\\n  {\\n      for(j=i+1;j<strlen(a);j++)\\n  {\\n      if(a[i]<a[j]){\\n        temp=a[i];\\n        a[i]=a[j];\\n        a[j]=temp;\\n  }\\n  }}\\n  printf(\\\"descending order string is:%s\\\",a);\\n  }\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a string:acky\\nascending order string ykca\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"19. Write a C++ program to sort a string array in descending order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to sort a string array in descending order.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint  main()\\n{\\n  char a[100];\\n  char temp;\\n  int i,j;\\n  cin >> a;\\n  for(i=0;i<strlen(a);i++)\\n  {\\n      for(j=i+1;j<strlen(a);j++)\\n      {\\n        if(a[i]<a[j]){\\n          temp=a[i];\\n          a[i]=a[j];\\n          a[j]=temp;\\n        }\\n      }\\n  }\\n  cin >> \\\"descending order string is:\\\" << a;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a string:acky\\nascending order string ykca\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"19. Write a Java program to sort a string array in descending order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to sort a string array in descending order.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z=new Scanner(System.in);\\n        System.out.println(\\\"Enter a string: \\\");\\n        String str, dec=\\\"\\\";\\n        int i;\\n        str = z.nextLine();\\n        char[] charArray = str.toCharArray();\\n        String word = new String(charArray);\\n        for (i=word.length()-1; i >= 0; i--){\\n            dec += word.charAt(i);\\n        }\\n        System.out.println(\\\"ascending order string \\\" + dec);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a string:acky\\nascending order string ykca\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to sort a string array in descending order.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`19. Write a C program to sort a string array in descending order.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to sort a string array in descending order.\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n  char a[100];\n  char temp;\n  int i,j;\n  gets(a);\n  for(i=0;i<strlen(a);i++)\n  {\n      for(j=i+1;j<strlen(a);j++)\n  {\n      if(a[i]<a[j]){\n        temp=a[i];\n        a[i]=a[j];\n        a[j]=temp;\n  }\n  }}\n  printf(\"descending order string is:%s\",a);\n  }\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a string:acky\nascending order string ykca\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`19. Write a C++ program to sort a string array in descending order.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to sort a string array in descending order.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint  main()\n{\n  char a[100];\n  char temp;\n  int i,j;\n  cin >> a;\n  for(i=0;i<strlen(a);i++)\n  {\n      for(j=i+1;j<strlen(a);j++)\n      {\n        if(a[i]<a[j]){\n          temp=a[i];\n          a[i]=a[j];\n          a[j]=temp;\n        }\n      }\n  }\n  cin >> \"descending order string is:\" << a;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a string:acky\nascending order string ykca\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`19. Write a Java program to sort a string array in descending order.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to sort a string array in descending order.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        System.out.println(\"Enter a string: \");\n        String str, dec=\"\";\n        int i;\n        str = z.nextLine();\n        char[] charArray = str.toCharArray();\n        String word = new String(charArray);\n        for (i=word.length()-1; i >= 0; i--){\n            dec += word.charAt(i);\n        }\n        System.out.println(\"ascending order string \" + dec);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a string:acky\nascending order string ykca\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}