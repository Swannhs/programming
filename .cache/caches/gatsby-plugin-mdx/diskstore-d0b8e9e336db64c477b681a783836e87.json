{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-565b4cbeb6f464cf7e295c3531de19fb--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a C program to concatenate two strings.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":53,"offset":75},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":53,"offset":75},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to concatenate two strings.\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str1[50], str2[50];\n    printf(\"Enter first string: \");\n    gets(str1);\n    printf(\"Enter second string: \");\n    gets(str2);\n    strcat(str1, str2);\n      printf(\"sum of string is string = %s\", str1);\n\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":77},"end":{"line":20,"column":4,"offset":428},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":21,"column":5,"offset":434},"end":{"line":21,"column":11,"offset":440},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":430},"end":{"line":21,"column":11,"offset":440},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter first string: hello\nEnter second string:  funycode\nsum of string is string = hello funycode","position":{"start":{"line":22,"column":1,"offset":442},"end":{"line":26,"column":4,"offset":551},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":27,"column":4,"offset":556},"end":{"line":27,"column":22,"offset":574},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":553},"end":{"line":27,"column":22,"offset":574},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a C++ program to concatenate two strings.","position":{"start":{"line":28,"column":5,"offset":580},"end":{"line":28,"column":55,"offset":630},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":576},"end":{"line":28,"column":55,"offset":630},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to concatenate two strings.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    char str1[50], str2[50];\n    cout << \"Enter first string: \";\n    gets(str1);\n    cout << \"Enter second string: \";\n    gets(str2);\n    strcat(str1, str2);\n      cout << \"sum of string is string = \" << str1;\n}","position":{"start":{"line":29,"column":1,"offset":632},"end":{"line":44,"column":4,"offset":973},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":45,"column":5,"offset":979},"end":{"line":45,"column":11,"offset":985},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":975},"end":{"line":45,"column":11,"offset":985},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter first string: hello\nEnter second string:  funycode\nsum of string is string = hello funycode","position":{"start":{"line":46,"column":1,"offset":987},"end":{"line":50,"column":4,"offset":1096},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":52,"column":4,"offset":1103},"end":{"line":52,"column":23,"offset":1122},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1100},"end":{"line":52,"column":23,"offset":1122},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a Java program to concatenate two strings.","position":{"start":{"line":53,"column":5,"offset":1128},"end":{"line":53,"column":56,"offset":1179},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1124},"end":{"line":53,"column":56,"offset":1179},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to concatenate two strings.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z=new Scanner(System.in);\n          String str1, str2;\n          System.out.println(\"Enter first string: \")\n          str1 = z.nextLine();\n          System.out.println(\"Enter second string: \");\n          str2 = z.nextLine();\n          str1 = str1 + str2;\n          System.out.println(\"sum of string is string = \" + str1);\n      }\n}","position":{"start":{"line":54,"column":1,"offset":1181},"end":{"line":69,"column":4,"offset":1701},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":70,"column":5,"offset":1707},"end":{"line":70,"column":11,"offset":1713},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1703},"end":{"line":70,"column":11,"offset":1713},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter first string: hello\nEnter second string:  funycode\nsum of string is string = hello funycode","position":{"start":{"line":71,"column":1,"offset":1715},"end":{"line":75,"column":4,"offset":1824},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to concatenate two strings.\",\"category\":\"String Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":78,"column":1,"offset":1828},"end":{"line":78,"column":220,"offset":2047},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":78,"column":220,"offset":2047}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to concatenate two strings.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"7. Write a C program to concatenate two strings.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to concatenate two strings.\\n#include <stdio.h>\\n#include <string.h>\\nint main()\\n{\\n    char str1[50], str2[50];\\n    printf(\\\"Enter first string: \\\");\\n    gets(str1);\\n    printf(\\\"Enter second string: \\\");\\n    gets(str2);\\n    strcat(str1, str2);\\n      printf(\\\"sum of string is string = %s\\\", str1);\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter first string: hello\\nEnter second string:  funycode\\nsum of string is string = hello funycode\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"7. Write a C++ program to concatenate two strings.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to concatenate two strings.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n    char str1[50], str2[50];\\n    cout << \\\"Enter first string: \\\";\\n    gets(str1);\\n    cout << \\\"Enter second string: \\\";\\n    gets(str2);\\n    strcat(str1, str2);\\n      cout << \\\"sum of string is string = \\\" << str1;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter first string: hello\\nEnter second string:  funycode\\nsum of string is string = hello funycode\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"7. Write a Java program to concatenate two strings.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to concatenate two strings.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n          Scanner z=new Scanner(System.in);\\n          String str1, str2;\\n          System.out.println(\\\"Enter first string: \\\")\\n          str1 = z.nextLine();\\n          System.out.println(\\\"Enter second string: \\\");\\n          str2 = z.nextLine();\\n          str1 = str1 + str2;\\n          System.out.println(\\\"sum of string is string = \\\" + str1);\\n      }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter first string: hello\\nEnter second string:  funycode\\nsum of string is string = hello funycode\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to concatenate two strings.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`7. Write a C program to concatenate two strings.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to concatenate two strings.\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str1[50], str2[50];\n    printf(\"Enter first string: \");\n    gets(str1);\n    printf(\"Enter second string: \");\n    gets(str2);\n    strcat(str1, str2);\n      printf(\"sum of string is string = %s\", str1);\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter first string: hello\nEnter second string:  funycode\nsum of string is string = hello funycode\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`7. Write a C++ program to concatenate two strings.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to concatenate two strings.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    char str1[50], str2[50];\n    cout << \"Enter first string: \";\n    gets(str1);\n    cout << \"Enter second string: \";\n    gets(str2);\n    strcat(str1, str2);\n      cout << \"sum of string is string = \" << str1;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter first string: hello\nEnter second string:  funycode\nsum of string is string = hello funycode\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`7. Write a Java program to concatenate two strings.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to concatenate two strings.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z=new Scanner(System.in);\n          String str1, str2;\n          System.out.println(\"Enter first string: \")\n          str1 = z.nextLine();\n          System.out.println(\"Enter second string: \");\n          str2 = z.nextLine();\n          str1 = str1 + str2;\n          System.out.println(\"sum of string is string = \" + str1);\n      }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter first string: hello\nEnter second string:  funycode\nsum of string is string = hello funycode\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}