{"expireTime":9007200883706344000,"key":"gatsby-plugin-mdx-entire-payload-f1ac77c3aa0d2437ba91771b002bd93f--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"26. Write a C program to find LCM of two numbers.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":54,"offset":76},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":54,"offset":76},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to find LCM of two numbers.\n//Using for loop\n#include<stdio.h>\nvoid main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    scanf(\"%d%d\",&n1,&n2);\n    j = (n1<n2) ? n1 : n2;\n    for(i=1; i<=j; i++)\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n    }\n    gcd=n1*n2/hcf;\n    printf(\"\\nGCD of %d and %d is : %d\\n\\n\", n1, n2, gcd);\n}\n//Using while loop\n#include<stdio.h>\nvoid main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    scanf(\"%d%d\",&n1,&n2);\n    j = (n1<n2) ? n1 : n2;\n    i=1;\n    while(i<=j)\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n         i++;\n    }\n    gcd =n1*n2/hcf;\n    printf(\"\\nGCD of %d and %d is : %d\\n\\n\", n1, n2, gcd);\n}\n//Using do while loop\n#include<stdio.h>\nvoid main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    scanf(\"%d%d\",&n1,&n2);\n    j = (n1<n2) ? n1 : n2;\n    i=1;\n    do\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n         i++;\n    }\n    while(i<=j);\n    gcd =n1*n2/hcf;\n    printf(\"\\nGCD of %d and %d is : %d\\n\\n\", n1, n2, gcd);\n}","position":{"start":{"line":4,"column":1,"offset":78},"end":{"line":62,"column":4,"offset":1211},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":63,"column":5,"offset":1217},"end":{"line":63,"column":11,"offset":1223},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1213},"end":{"line":63,"column":11,"offset":1223},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"2 4\nGCD of 2 and 4 is : 4","position":{"start":{"line":64,"column":1,"offset":1225},"end":{"line":67,"column":4,"offset":1261},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":69,"column":4,"offset":1268},"end":{"line":69,"column":22,"offset":1286},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1265},"end":{"line":69,"column":22,"offset":1286},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"26. Write a C++ program to find LCM of two numbers.","position":{"start":{"line":70,"column":5,"offset":1292},"end":{"line":70,"column":56,"offset":1343},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1288},"end":{"line":70,"column":56,"offset":1343},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to find LCM of two numbers.\n\n//Using for loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    cin >> n1 >> n2;\n    j = (n1<n2) ? n1 : n2;\n    for(i=1; i<=j; i++)\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n    }\n    gcd=n1*n2/hcf;\n    cout << \"\\nGCD of \" << n1 << \" and \" << n2 << \" is : \" << gcd;\n}\n//Using while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    cin >> n1 >> n2;\n    j = (n1<n2) ? n1 : n2;\n    i=1;\n    while(i<=j)\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n         i++;\n    }\n    gcd =n1*n2/hcf;\n    cout << \"\\nGCD of \" << n1 << \" and \" << n2 << \" is : \" << gcd;\n}\n//Using do while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    cin >> n1 >> n2;\n    j = (n1<n2) ? n1 : n2;\n    i=1;\n    do\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n         i++;\n    }\n    while(i<=j);\n    gcd =n1*n2/hcf;\n    cout << \"\\nGCD of \" << n1 << \" and \" << n2 << \" is : \" << gcd;\n}","position":{"start":{"line":71,"column":1,"offset":1345},"end":{"line":133,"column":4,"offset":2554},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":134,"column":5,"offset":2560},"end":{"line":134,"column":11,"offset":2566},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":2556},"end":{"line":134,"column":11,"offset":2566},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"2 4\nGCD of 2 and 4 is : 4","position":{"start":{"line":135,"column":1,"offset":2568},"end":{"line":138,"column":4,"offset":2604},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":140,"column":4,"offset":2611},"end":{"line":140,"column":23,"offset":2630},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":2608},"end":{"line":140,"column":23,"offset":2630},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"26. Write a Java program to find LCM of two numbers.","position":{"start":{"line":141,"column":5,"offset":2636},"end":{"line":141,"column":57,"offset":2688},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":2632},"end":{"line":141,"column":57,"offset":2688},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to find LCM of two numbers.\n//Using for loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i, n1, n2, j, hcf=1,gcd;\n        n1 = z.nextInt();\n        n2 = z.nextInt();\n        j = (n1<n2) ? n1 : n2;\n        for(i=1; i<=j; i++)\n        {\n            if(n1%i==0 && n2%i==0)\n            {\n                hcf = i;\n            }\n        }\n        gcd=n1*n2/hcf;\n        System.out.println(\"\\nGCD of \" + n1 + \" and \" + n2 +\" is : \" +gcd);\n    }\n}\n//Using while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i, n1, n2, j, hcf=1,gcd;\n        n1 = z.nextInt();\n        n2 = z.nextInt();\n        j = (n1<n2) ? n1 : n2;\n        i=1;\n        while(i<=j)\n        {\n            if(n1%i==0 && n2%i==0)\n            {\n                hcf = i;\n            }\n             i++;\n        }\n        gcd =n1*n2/hcf;\n        System.out.println(\"\\nGCD of \" + n1 + \" and \" + n2 +\" is : \" +gcd);\n    }\n}\n//Using do while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i, n1, n2, j, hcf=1,gcd;\n        n1 = z.nextInt();\n        n2 = z.nextInt();\n        j = (n1<n2) ? n1 : n2;\n        i=1;\n        do\n        {\n            if(n1%i==0 && n2%i==0)\n            {\n                hcf = i;\n            }\n             i++;\n        }\n        while(i<=j);\n        gcd =n1*n2/hcf;\n        System.out.println(\"\\nGCD of \" + n1 + \" and \" + n2 +\" is : \" +gcd);\n    }\n}","position":{"start":{"line":142,"column":1,"offset":2690},"end":{"line":209,"column":4,"offset":4441},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":210,"column":5,"offset":4447},"end":{"line":210,"column":11,"offset":4453},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":4443},"end":{"line":210,"column":11,"offset":4453},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"2 4\nGCD of 2 and 4 is : 4","position":{"start":{"line":211,"column":1,"offset":4455},"end":{"line":214,"column":4,"offset":4491},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to find LCM of two numbers.\",\"category\":\"Loop(For,While,Do-While)Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":217,"column":1,"offset":4495},"end":{"line":217,"column":237,"offset":4731},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":217,"column":237,"offset":4731}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find LCM of two numbers.\",\n  \"category\": \"Loop(For,While,Do-While)Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"26. Write a C program to find LCM of two numbers.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to find LCM of two numbers.\\n//Using for loop\\n#include<stdio.h>\\nvoid main()\\n{\\n    int i, n1, n2, j, hcf=1,gcd;\\n    scanf(\\\"%d%d\\\",&n1,&n2);\\n    j = (n1<n2) ? n1 : n2;\\n    for(i=1; i<=j; i++)\\n    {\\n        if(n1%i==0 && n2%i==0)\\n        {\\n            hcf = i;\\n        }\\n    }\\n    gcd=n1*n2/hcf;\\n    printf(\\\"\\\\nGCD of %d and %d is : %d\\\\n\\\\n\\\", n1, n2, gcd);\\n}\\n//Using while loop\\n#include<stdio.h>\\nvoid main()\\n{\\n    int i, n1, n2, j, hcf=1,gcd;\\n    scanf(\\\"%d%d\\\",&n1,&n2);\\n    j = (n1<n2) ? n1 : n2;\\n    i=1;\\n    while(i<=j)\\n    {\\n        if(n1%i==0 && n2%i==0)\\n        {\\n            hcf = i;\\n        }\\n         i++;\\n    }\\n    gcd =n1*n2/hcf;\\n    printf(\\\"\\\\nGCD of %d and %d is : %d\\\\n\\\\n\\\", n1, n2, gcd);\\n}\\n//Using do while loop\\n#include<stdio.h>\\nvoid main()\\n{\\n    int i, n1, n2, j, hcf=1,gcd;\\n    scanf(\\\"%d%d\\\",&n1,&n2);\\n    j = (n1<n2) ? n1 : n2;\\n    i=1;\\n    do\\n    {\\n        if(n1%i==0 && n2%i==0)\\n        {\\n            hcf = i;\\n        }\\n         i++;\\n    }\\n    while(i<=j);\\n    gcd =n1*n2/hcf;\\n    printf(\\\"\\\\nGCD of %d and %d is : %d\\\\n\\\\n\\\", n1, n2, gcd);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"2 4\\nGCD of 2 and 4 is : 4\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"26. Write a C++ program to find LCM of two numbers.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find LCM of two numbers.\\n\\n//Using for loop\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int i, n1, n2, j, hcf=1,gcd;\\n    cin >> n1 >> n2;\\n    j = (n1<n2) ? n1 : n2;\\n    for(i=1; i<=j; i++)\\n    {\\n        if(n1%i==0 && n2%i==0)\\n        {\\n            hcf = i;\\n        }\\n    }\\n    gcd=n1*n2/hcf;\\n    cout << \\\"\\\\nGCD of \\\" << n1 << \\\" and \\\" << n2 << \\\" is : \\\" << gcd;\\n}\\n//Using while loop\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int i, n1, n2, j, hcf=1,gcd;\\n    cin >> n1 >> n2;\\n    j = (n1<n2) ? n1 : n2;\\n    i=1;\\n    while(i<=j)\\n    {\\n        if(n1%i==0 && n2%i==0)\\n        {\\n            hcf = i;\\n        }\\n         i++;\\n    }\\n    gcd =n1*n2/hcf;\\n    cout << \\\"\\\\nGCD of \\\" << n1 << \\\" and \\\" << n2 << \\\" is : \\\" << gcd;\\n}\\n//Using do while loop\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int i, n1, n2, j, hcf=1,gcd;\\n    cin >> n1 >> n2;\\n    j = (n1<n2) ? n1 : n2;\\n    i=1;\\n    do\\n    {\\n        if(n1%i==0 && n2%i==0)\\n        {\\n            hcf = i;\\n        }\\n         i++;\\n    }\\n    while(i<=j);\\n    gcd =n1*n2/hcf;\\n    cout << \\\"\\\\nGCD of \\\" << n1 << \\\" and \\\" << n2 << \\\" is : \\\" << gcd;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"2 4\\nGCD of 2 and 4 is : 4\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"26. Write a Java program to find LCM of two numbers.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to find LCM of two numbers.\\n//Using for loop\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int i, n1, n2, j, hcf=1,gcd;\\n        n1 = z.nextInt();\\n        n2 = z.nextInt();\\n        j = (n1<n2) ? n1 : n2;\\n        for(i=1; i<=j; i++)\\n        {\\n            if(n1%i==0 && n2%i==0)\\n            {\\n                hcf = i;\\n            }\\n        }\\n        gcd=n1*n2/hcf;\\n        System.out.println(\\\"\\\\nGCD of \\\" + n1 + \\\" and \\\" + n2 +\\\" is : \\\" +gcd);\\n    }\\n}\\n//Using while loop\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int i, n1, n2, j, hcf=1,gcd;\\n        n1 = z.nextInt();\\n        n2 = z.nextInt();\\n        j = (n1<n2) ? n1 : n2;\\n        i=1;\\n        while(i<=j)\\n        {\\n            if(n1%i==0 && n2%i==0)\\n            {\\n                hcf = i;\\n            }\\n             i++;\\n        }\\n        gcd =n1*n2/hcf;\\n        System.out.println(\\\"\\\\nGCD of \\\" + n1 + \\\" and \\\" + n2 +\\\" is : \\\" +gcd);\\n    }\\n}\\n//Using do while loop\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int i, n1, n2, j, hcf=1,gcd;\\n        n1 = z.nextInt();\\n        n2 = z.nextInt();\\n        j = (n1<n2) ? n1 : n2;\\n        i=1;\\n        do\\n        {\\n            if(n1%i==0 && n2%i==0)\\n            {\\n                hcf = i;\\n            }\\n             i++;\\n        }\\n        while(i<=j);\\n        gcd =n1*n2/hcf;\\n        System.out.println(\\\"\\\\nGCD of \\\" + n1 + \\\" and \\\" + n2 +\\\" is : \\\" +gcd);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"2 4\\nGCD of 2 and 4 is : 4\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find LCM of two numbers.\",\n  \"category\": \"Loop(For,While,Do-While)Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`26. Write a C program to find LCM of two numbers.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to find LCM of two numbers.\n//Using for loop\n#include<stdio.h>\nvoid main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    scanf(\"%d%d\",&n1,&n2);\n    j = (n1<n2) ? n1 : n2;\n    for(i=1; i<=j; i++)\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n    }\n    gcd=n1*n2/hcf;\n    printf(\"\\\\nGCD of %d and %d is : %d\\\\n\\\\n\", n1, n2, gcd);\n}\n//Using while loop\n#include<stdio.h>\nvoid main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    scanf(\"%d%d\",&n1,&n2);\n    j = (n1<n2) ? n1 : n2;\n    i=1;\n    while(i<=j)\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n         i++;\n    }\n    gcd =n1*n2/hcf;\n    printf(\"\\\\nGCD of %d and %d is : %d\\\\n\\\\n\", n1, n2, gcd);\n}\n//Using do while loop\n#include<stdio.h>\nvoid main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    scanf(\"%d%d\",&n1,&n2);\n    j = (n1<n2) ? n1 : n2;\n    i=1;\n    do\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n         i++;\n    }\n    while(i<=j);\n    gcd =n1*n2/hcf;\n    printf(\"\\\\nGCD of %d and %d is : %d\\\\n\\\\n\", n1, n2, gcd);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`2 4\nGCD of 2 and 4 is : 4\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`26. Write a C++ program to find LCM of two numbers.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to find LCM of two numbers.\n\n//Using for loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    cin >> n1 >> n2;\n    j = (n1<n2) ? n1 : n2;\n    for(i=1; i<=j; i++)\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n    }\n    gcd=n1*n2/hcf;\n    cout << \"\\\\nGCD of \" << n1 << \" and \" << n2 << \" is : \" << gcd;\n}\n//Using while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    cin >> n1 >> n2;\n    j = (n1<n2) ? n1 : n2;\n    i=1;\n    while(i<=j)\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n         i++;\n    }\n    gcd =n1*n2/hcf;\n    cout << \"\\\\nGCD of \" << n1 << \" and \" << n2 << \" is : \" << gcd;\n}\n//Using do while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i, n1, n2, j, hcf=1,gcd;\n    cin >> n1 >> n2;\n    j = (n1<n2) ? n1 : n2;\n    i=1;\n    do\n    {\n        if(n1%i==0 && n2%i==0)\n        {\n            hcf = i;\n        }\n         i++;\n    }\n    while(i<=j);\n    gcd =n1*n2/hcf;\n    cout << \"\\\\nGCD of \" << n1 << \" and \" << n2 << \" is : \" << gcd;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`2 4\nGCD of 2 and 4 is : 4\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`26. Write a Java program to find LCM of two numbers.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to find LCM of two numbers.\n//Using for loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i, n1, n2, j, hcf=1,gcd;\n        n1 = z.nextInt();\n        n2 = z.nextInt();\n        j = (n1<n2) ? n1 : n2;\n        for(i=1; i<=j; i++)\n        {\n            if(n1%i==0 && n2%i==0)\n            {\n                hcf = i;\n            }\n        }\n        gcd=n1*n2/hcf;\n        System.out.println(\"\\\\nGCD of \" + n1 + \" and \" + n2 +\" is : \" +gcd);\n    }\n}\n//Using while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i, n1, n2, j, hcf=1,gcd;\n        n1 = z.nextInt();\n        n2 = z.nextInt();\n        j = (n1<n2) ? n1 : n2;\n        i=1;\n        while(i<=j)\n        {\n            if(n1%i==0 && n2%i==0)\n            {\n                hcf = i;\n            }\n             i++;\n        }\n        gcd =n1*n2/hcf;\n        System.out.println(\"\\\\nGCD of \" + n1 + \" and \" + n2 +\" is : \" +gcd);\n    }\n}\n//Using do while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i, n1, n2, j, hcf=1,gcd;\n        n1 = z.nextInt();\n        n2 = z.nextInt();\n        j = (n1<n2) ? n1 : n2;\n        i=1;\n        do\n        {\n            if(n1%i==0 && n2%i==0)\n            {\n                hcf = i;\n            }\n             i++;\n        }\n        while(i<=j);\n        gcd =n1*n2/hcf;\n        System.out.println(\"\\\\nGCD of \" + n1 + \" and \" + n2 +\" is : \" +gcd);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`2 4\nGCD of 2 and 4 is : 4\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}