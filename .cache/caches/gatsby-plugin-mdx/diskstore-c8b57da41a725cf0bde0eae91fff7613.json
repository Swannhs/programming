{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-430a89f591e871fcc760b0662eb0f00b--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"6. Write a C program to copy one string to another string.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":63,"offset":85},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":63,"offset":85},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to copy one string to another string.\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n  char str1[100],str2[100];\n\n  printf(\"Enter string \");\n  gets(str1);\n  strcpy(str2, str1);\n  printf(\"str1 string: %s\\n\", str1);\n  printf(\"str2 string: %s\\n\", str2);\n\n  return 0;\n}","position":{"start":{"line":4,"column":1,"offset":87},"end":{"line":20,"column":4,"offset":402},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":21,"column":5,"offset":408},"end":{"line":21,"column":11,"offset":414},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":404},"end":{"line":21,"column":11,"offset":414},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter string hello\nstr1 string: hello\nstr2 string: hello","position":{"start":{"line":22,"column":1,"offset":416},"end":{"line":26,"column":4,"offset":484},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":27,"column":4,"offset":489},"end":{"line":27,"column":22,"offset":507},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":486},"end":{"line":27,"column":22,"offset":507},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"6. Write a C++ program to copy one string to another string.","position":{"start":{"line":28,"column":5,"offset":513},"end":{"line":28,"column":65,"offset":573},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":509},"end":{"line":28,"column":65,"offset":573},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to copy one string to another string.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    char str1[100],str2[100];\n    cout << \"Enter string \");\n    gets(str1);\n    strcpy(str2, str1);\n    cout << \"str1 string: \"<< str1 << endl;\n    cout << \"str2 string: \"<< str2);\n}","position":{"start":{"line":29,"column":1,"offset":575},"end":{"line":43,"column":4,"offset":896},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":44,"column":5,"offset":902},"end":{"line":44,"column":11,"offset":908},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":898},"end":{"line":44,"column":11,"offset":908},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter string hello\nstr1 string: hello\nstr2 string: hello","position":{"start":{"line":45,"column":1,"offset":910},"end":{"line":49,"column":4,"offset":978},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":51,"column":4,"offset":985},"end":{"line":51,"column":23,"offset":1004},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":982},"end":{"line":51,"column":23,"offset":1004},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"6. Write a Java program to copy one string to another string.","position":{"start":{"line":52,"column":5,"offset":1010},"end":{"line":52,"column":66,"offset":1071},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1006},"end":{"line":52,"column":66,"offset":1071},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to copy one string to another string.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z=new Scanner(System.in);\n          System.out.println(\"Enter a string\");\n          String str1, str2;\n          str1 = z.nextLine();\n          str2 = str1;\n          System.out.println(\"str1 String is \" + str1);\n          System.out.println(\"str2 copy String is \" + str2);\n      }\n}","position":{"start":{"line":53,"column":1,"offset":1073},"end":{"line":67,"column":4,"offset":1554},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":68,"column":5,"offset":1560},"end":{"line":68,"column":11,"offset":1566},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1556},"end":{"line":68,"column":11,"offset":1566},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter string hello\nstr1 string: hello\nstr2 string: hello","position":{"start":{"line":69,"column":1,"offset":1568},"end":{"line":73,"column":4,"offset":1636},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to copy one string to another string.\",\"category\":\"String Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":76,"column":1,"offset":1640},"end":{"line":76,"column":230,"offset":1869},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":76,"column":230,"offset":1869}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to copy one string to another string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"6. Write a C program to copy one string to another string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to copy one string to another string.\\n#include <stdio.h>\\n#include <string.h>\\nint main()\\n{\\n  char str1[100],str2[100];\\n\\n  printf(\\\"Enter string \\\");\\n  gets(str1);\\n  strcpy(str2, str1);\\n  printf(\\\"str1 string: %s\\\\n\\\", str1);\\n  printf(\\\"str2 string: %s\\\\n\\\", str2);\\n\\n  return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter string hello\\nstr1 string: hello\\nstr2 string: hello\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"6. Write a C++ program to copy one string to another string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to copy one string to another string.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n    char str1[100],str2[100];\\n    cout << \\\"Enter string \\\");\\n    gets(str1);\\n    strcpy(str2, str1);\\n    cout << \\\"str1 string: \\\"<< str1 << endl;\\n    cout << \\\"str2 string: \\\"<< str2);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter string hello\\nstr1 string: hello\\nstr2 string: hello\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"6. Write a Java program to copy one string to another string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to copy one string to another string.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n          Scanner z=new Scanner(System.in);\\n          System.out.println(\\\"Enter a string\\\");\\n          String str1, str2;\\n          str1 = z.nextLine();\\n          str2 = str1;\\n          System.out.println(\\\"str1 String is \\\" + str1);\\n          System.out.println(\\\"str2 copy String is \\\" + str2);\\n      }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter string hello\\nstr1 string: hello\\nstr2 string: hello\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to copy one string to another string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`6. Write a C program to copy one string to another string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to copy one string to another string.\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n  char str1[100],str2[100];\n\n  printf(\"Enter string \");\n  gets(str1);\n  strcpy(str2, str1);\n  printf(\"str1 string: %s\\\\n\", str1);\n  printf(\"str2 string: %s\\\\n\", str2);\n\n  return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter string hello\nstr1 string: hello\nstr2 string: hello\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`6. Write a C++ program to copy one string to another string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to copy one string to another string.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    char str1[100],str2[100];\n    cout << \"Enter string \");\n    gets(str1);\n    strcpy(str2, str1);\n    cout << \"str1 string: \"<< str1 << endl;\n    cout << \"str2 string: \"<< str2);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter string hello\nstr1 string: hello\nstr2 string: hello\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`6. Write a Java program to copy one string to another string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to copy one string to another string.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z=new Scanner(System.in);\n          System.out.println(\"Enter a string\");\n          String str1, str2;\n          str1 = z.nextLine();\n          str2 = str1;\n          System.out.println(\"str1 String is \" + str1);\n          System.out.println(\"str2 copy String is \" + str2);\n      }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter string hello\nstr1 string: hello\nstr2 string: hello\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}