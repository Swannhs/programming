{"expireTime":9007200883706343000,"key":"gatsby-plugin-mdx-entire-payload-c341966799d4efb77808928a73f9c4ef--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"17. Write a C program to find power of any number using functions","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":70,"offset":92},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":70,"offset":92},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to find power of any number using functions\n#include<stdio.h>\n\nint power(int a,int b)\n{\n    int total=1;\n    while(b!=0)\n    {\n        total*=a;\n        b--;\n    }\n    return total;\n}\n\nint main()\n{\n    int base,exp;\n    printf(\"Enter base: \");\n    scanf(\"%d\",&base);\n    printf(\"Enter exponent: \");\n    scanf(\"%d\",&exp);\n\n    int ans=power(base,exp);\n\n    printf(\"Ans is: %d\\n\",ans);\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":94},"end":{"line":32,"column":4,"offset":550},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":33,"column":5,"offset":556},"end":{"line":33,"column":11,"offset":562},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":552},"end":{"line":33,"column":11,"offset":562},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter base: 1\nEnter exponent: 5\nAns is: 1","position":{"start":{"line":34,"column":1,"offset":564},"end":{"line":38,"column":4,"offset":617},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":40,"column":4,"offset":624},"end":{"line":40,"column":22,"offset":642},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":621},"end":{"line":40,"column":22,"offset":642},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"17. Write a C++ program to find power of any number using functions","position":{"start":{"line":41,"column":5,"offset":648},"end":{"line":41,"column":72,"offset":715},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":644},"end":{"line":41,"column":72,"offset":715},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to find power of any number using functions\n\n#include<iostream>\nusing namespace std;\n\nint power(int a,int b)\n{\n    int total=1;\n    while(b!=0)\n    {\n        total*=a;\n        b--;\n    }\n    return total;\n}\n\nint main()\n{\n    int base,exp;\n    cout << \"Enter base: \";\n    cin >> base;\n    cout << \"Enter exponent: \";\n    cin >> exp;\n\n    int ans=power(base,exp);\n\n    cout << \"Ans is: \" << ans;\n    return 0;\n}","position":{"start":{"line":42,"column":1,"offset":717},"end":{"line":72,"column":4,"offset":1187},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":73,"column":5,"offset":1193},"end":{"line":73,"column":11,"offset":1199},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1189},"end":{"line":73,"column":11,"offset":1199},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter base: 1\nEnter exponent: 5\nAns is: 1","position":{"start":{"line":74,"column":1,"offset":1201},"end":{"line":78,"column":4,"offset":1254},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":80,"column":4,"offset":1261},"end":{"line":80,"column":23,"offset":1280},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1258},"end":{"line":80,"column":23,"offset":1280},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"17. Write a Java program to find power of any number using functions","position":{"start":{"line":81,"column":5,"offset":1286},"end":{"line":81,"column":73,"offset":1354},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1282},"end":{"line":81,"column":73,"offset":1354},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to find power of any number using functions\nimport java.util.Scanner;\npublic class Funycode {\n    static int power(int a,int b)\n    {\n        int total=1;\n        while(b!=0)\n        {\n            total*=a;\n            b--;\n        }\n        return total;\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int base,exp;\n        System.out.println(\"Enter base: \");\n        base = z.nextInt();\n        System.out.println(\"Enter exponent: \");\n        exp = z.nextInt();\n\n        int ans=power(base,exp);\n        System.out.println(\"Ans is: \"+ans);\n    }\n}","position":{"start":{"line":82,"column":1,"offset":1356},"end":{"line":109,"column":4,"offset":2022},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":110,"column":5,"offset":2028},"end":{"line":110,"column":11,"offset":2034},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":2024},"end":{"line":110,"column":11,"offset":2034},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter base: 1\nEnter exponent: 5\nAns is: 1","position":{"start":{"line":111,"column":1,"offset":2036},"end":{"line":115,"column":4,"offset":2089},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to find power of any number using functions\",\"category\":\"Function Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":118,"column":1,"offset":2093},"end":{"line":118,"column":246,"offset":2338},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":118,"column":246,"offset":2338}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find power of any number using functions\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"17. Write a C program to find power of any number using functions\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to find power of any number using functions\\n#include<stdio.h>\\n\\nint power(int a,int b)\\n{\\n    int total=1;\\n    while(b!=0)\\n    {\\n        total*=a;\\n        b--;\\n    }\\n    return total;\\n}\\n\\nint main()\\n{\\n    int base,exp;\\n    printf(\\\"Enter base: \\\");\\n    scanf(\\\"%d\\\",&base);\\n    printf(\\\"Enter exponent: \\\");\\n    scanf(\\\"%d\\\",&exp);\\n\\n    int ans=power(base,exp);\\n\\n    printf(\\\"Ans is: %d\\\\n\\\",ans);\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter base: 1\\nEnter exponent: 5\\nAns is: 1\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"17. Write a C++ program to find power of any number using functions\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find power of any number using functions\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint power(int a,int b)\\n{\\n    int total=1;\\n    while(b!=0)\\n    {\\n        total*=a;\\n        b--;\\n    }\\n    return total;\\n}\\n\\nint main()\\n{\\n    int base,exp;\\n    cout << \\\"Enter base: \\\";\\n    cin >> base;\\n    cout << \\\"Enter exponent: \\\";\\n    cin >> exp;\\n\\n    int ans=power(base,exp);\\n\\n    cout << \\\"Ans is: \\\" << ans;\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter base: 1\\nEnter exponent: 5\\nAns is: 1\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"17. Write a Java program to find power of any number using functions\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to find power of any number using functions\\nimport java.util.Scanner;\\npublic class Funycode {\\n    static int power(int a,int b)\\n    {\\n        int total=1;\\n        while(b!=0)\\n        {\\n            total*=a;\\n            b--;\\n        }\\n        return total;\\n    }\\n\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int base,exp;\\n        System.out.println(\\\"Enter base: \\\");\\n        base = z.nextInt();\\n        System.out.println(\\\"Enter exponent: \\\");\\n        exp = z.nextInt();\\n\\n        int ans=power(base,exp);\\n        System.out.println(\\\"Ans is: \\\"+ans);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter base: 1\\nEnter exponent: 5\\nAns is: 1\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find power of any number using functions\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`17. Write a C program to find power of any number using functions`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to find power of any number using functions\n#include<stdio.h>\n\nint power(int a,int b)\n{\n    int total=1;\n    while(b!=0)\n    {\n        total*=a;\n        b--;\n    }\n    return total;\n}\n\nint main()\n{\n    int base,exp;\n    printf(\"Enter base: \");\n    scanf(\"%d\",&base);\n    printf(\"Enter exponent: \");\n    scanf(\"%d\",&exp);\n\n    int ans=power(base,exp);\n\n    printf(\"Ans is: %d\\\\n\",ans);\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter base: 1\nEnter exponent: 5\nAns is: 1\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`17. Write a C++ program to find power of any number using functions`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to find power of any number using functions\n\n#include<iostream>\nusing namespace std;\n\nint power(int a,int b)\n{\n    int total=1;\n    while(b!=0)\n    {\n        total*=a;\n        b--;\n    }\n    return total;\n}\n\nint main()\n{\n    int base,exp;\n    cout << \"Enter base: \";\n    cin >> base;\n    cout << \"Enter exponent: \";\n    cin >> exp;\n\n    int ans=power(base,exp);\n\n    cout << \"Ans is: \" << ans;\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter base: 1\nEnter exponent: 5\nAns is: 1\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`17. Write a Java program to find power of any number using functions`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to find power of any number using functions\nimport java.util.Scanner;\npublic class Funycode {\n    static int power(int a,int b)\n    {\n        int total=1;\n        while(b!=0)\n        {\n            total*=a;\n            b--;\n        }\n        return total;\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int base,exp;\n        System.out.println(\"Enter base: \");\n        base = z.nextInt();\n        System.out.println(\"Enter exponent: \");\n        exp = z.nextInt();\n\n        int ans=power(base,exp);\n        System.out.println(\"Ans is: \"+ans);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter base: 1\nEnter exponent: 5\nAns is: 1\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}