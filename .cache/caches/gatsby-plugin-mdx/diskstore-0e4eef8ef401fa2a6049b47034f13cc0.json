{"expireTime":9007200883706346000,"key":"gatsby-plugin-mdx-entire-payload-f75994b0430b4d381d19a6c9a5c9ec76--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Program-7: Write a C program to check whether a character is an alphabet or not using the switch.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":102,"offset":124},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":102,"offset":124},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"/*Write a C program to check whether a character is an alphabet or not using the switch.*/\n#include<stdio.h>\nint main()\n{\n    char ch;\n    printf(\"Enter a character: \");\n    scanf(\"%d\",&ch);\n    switch((ch>='a'&&ch<='z') || (ch>='A'&&ch<='Z'))\n    {\n    case 0:\n        printf(\"Alphabet\");\n        break;\n    case 1:\n        printf(\"not Alphabet\");\n        break;\n    default:\n        printf(\"Invalid input\");\n    }\n}","position":{"start":{"line":4,"column":1,"offset":126},"end":{"line":24,"column":4,"offset":572},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":25,"column":5,"offset":578},"end":{"line":25,"column":11,"offset":584},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":574},"end":{"line":25,"column":11,"offset":584},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: a\nOutput: Alphabet","position":{"start":{"line":26,"column":1,"offset":586},"end":{"line":29,"column":4,"offset":622},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":31,"column":4,"offset":629},"end":{"line":31,"column":22,"offset":647},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":626},"end":{"line":31,"column":22,"offset":647},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Program-7: Write a C++ program to check whether a character is an alphabet or not using the switch.","position":{"start":{"line":32,"column":5,"offset":653},"end":{"line":32,"column":104,"offset":752},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":649},"end":{"line":32,"column":104,"offset":752},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"/*Write a C++ program to check whether a character is an alphabet or not using the switch.*/\n#include<iostream>\nusing namespace std;\nint main()\n{\n    char ch;\n    cout << \"Enter a character: \";\n    cin >> ch;\n    switch((ch>='a'&&ch<='z') || (ch>='A'&&ch<='Z'))\n    {\n        case 0:\n            cout << \"Alphabet\";\n            break;\n        case 1:\n            cout << \"not Alphabet\";\n            break;\n        default:\n            cout << \"Invalid input\";\n    }\n}","position":{"start":{"line":33,"column":1,"offset":754},"end":{"line":54,"column":4,"offset":1251},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":55,"column":5,"offset":1257},"end":{"line":55,"column":11,"offset":1263},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1253},"end":{"line":55,"column":11,"offset":1263},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: a\nOutput: Alphabet","position":{"start":{"line":56,"column":1,"offset":1265},"end":{"line":59,"column":4,"offset":1301},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":61,"column":4,"offset":1308},"end":{"line":61,"column":23,"offset":1327},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1305},"end":{"line":61,"column":23,"offset":1327},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Program-9: Write a Java program to check whether a character is an alphabet or not using the switch.","position":{"start":{"line":62,"column":5,"offset":1333},"end":{"line":62,"column":105,"offset":1433},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1329},"end":{"line":62,"column":105,"offset":1433},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/*Write a Java program to check whether a character is an alphabet or not using the switch.*/\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        char ch;\n        System.out.println(\"Enter a character: \");\n        char ch = z.next().charAt(0);\n        switch((ch>='a'&&ch<='z') || (ch>='A'&&ch<='Z'))\n        {\n            case 0:\n                System.out.println(\"Alphabet\");\n                break;\n            case 1:\n                System.out.println(\"not Alphabet\");\n                break;\n            default:\n                System.out.println(\"Invalid input\");\n        }\n    }\n}","position":{"start":{"line":63,"column":1,"offset":1435},"end":{"line":86,"column":4,"offset":2150},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":87,"column":5,"offset":2156},"end":{"line":87,"column":11,"offset":2162},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2152},"end":{"line":87,"column":11,"offset":2162},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: a\nOutput: Alphabet","position":{"start":{"line":88,"column":1,"offset":2164},"end":{"line":91,"column":4,"offset":2200},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to check whether a character is an alphabet or not using the switch.\",\"category\":\"Switch Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":94,"column":1,"offset":2204},"end":{"line":94,"column":261,"offset":2464},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":94,"column":261,"offset":2464}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether a character is an alphabet or not using the switch.\",\n  \"category\": \"Switch Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"Program-7: Write a C program to check whether a character is an alphabet or not using the switch.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"/*Write a C program to check whether a character is an alphabet or not using the switch.*/\\n#include<stdio.h>\\nint main()\\n{\\n    char ch;\\n    printf(\\\"Enter a character: \\\");\\n    scanf(\\\"%d\\\",&ch);\\n    switch((ch>='a'&&ch<='z') || (ch>='A'&&ch<='Z'))\\n    {\\n    case 0:\\n        printf(\\\"Alphabet\\\");\\n        break;\\n    case 1:\\n        printf(\\\"not Alphabet\\\");\\n        break;\\n    default:\\n        printf(\\\"Invalid input\\\");\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input: a\\nOutput: Alphabet\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"Program-7: Write a C++ program to check whether a character is an alphabet or not using the switch.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"/*Write a C++ program to check whether a character is an alphabet or not using the switch.*/\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    char ch;\\n    cout << \\\"Enter a character: \\\";\\n    cin >> ch;\\n    switch((ch>='a'&&ch<='z') || (ch>='A'&&ch<='Z'))\\n    {\\n        case 0:\\n            cout << \\\"Alphabet\\\";\\n            break;\\n        case 1:\\n            cout << \\\"not Alphabet\\\";\\n            break;\\n        default:\\n            cout << \\\"Invalid input\\\";\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input: a\\nOutput: Alphabet\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"Program-9: Write a Java program to check whether a character is an alphabet or not using the switch.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"/*Write a Java program to check whether a character is an alphabet or not using the switch.*/\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        char ch;\\n        System.out.println(\\\"Enter a character: \\\");\\n        char ch = z.next().charAt(0);\\n        switch((ch>='a'&&ch<='z') || (ch>='A'&&ch<='Z'))\\n        {\\n            case 0:\\n                System.out.println(\\\"Alphabet\\\");\\n                break;\\n            case 1:\\n                System.out.println(\\\"not Alphabet\\\");\\n                break;\\n            default:\\n                System.out.println(\\\"Invalid input\\\");\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input: a\\nOutput: Alphabet\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether a character is an alphabet or not using the switch.\",\n  \"category\": \"Switch Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`Program-7: Write a C program to check whether a character is an alphabet or not using the switch.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`/*Write a C program to check whether a character is an alphabet or not using the switch.*/\n#include<stdio.h>\nint main()\n{\n    char ch;\n    printf(\"Enter a character: \");\n    scanf(\"%d\",&ch);\n    switch((ch>='a'&&ch<='z') || (ch>='A'&&ch<='Z'))\n    {\n    case 0:\n        printf(\"Alphabet\");\n        break;\n    case 1:\n        printf(\"not Alphabet\");\n        break;\n    default:\n        printf(\"Invalid input\");\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input: a\nOutput: Alphabet\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`Program-7: Write a C++ program to check whether a character is an alphabet or not using the switch.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`/*Write a C++ program to check whether a character is an alphabet or not using the switch.*/\n#include<iostream>\nusing namespace std;\nint main()\n{\n    char ch;\n    cout << \"Enter a character: \";\n    cin >> ch;\n    switch((ch>='a'&&ch<='z') || (ch>='A'&&ch<='Z'))\n    {\n        case 0:\n            cout << \"Alphabet\";\n            break;\n        case 1:\n            cout << \"not Alphabet\";\n            break;\n        default:\n            cout << \"Invalid input\";\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input: a\nOutput: Alphabet\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`Program-9: Write a Java program to check whether a character is an alphabet or not using the switch.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/*Write a Java program to check whether a character is an alphabet or not using the switch.*/\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        char ch;\n        System.out.println(\"Enter a character: \");\n        char ch = z.next().charAt(0);\n        switch((ch>='a'&&ch<='z') || (ch>='A'&&ch<='Z'))\n        {\n            case 0:\n                System.out.println(\"Alphabet\");\n                break;\n            case 1:\n                System.out.println(\"not Alphabet\");\n                break;\n            default:\n                System.out.println(\"Invalid input\");\n        }\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input: a\nOutput: Alphabet\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}