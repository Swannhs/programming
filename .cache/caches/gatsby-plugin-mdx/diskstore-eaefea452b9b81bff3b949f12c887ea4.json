{"expireTime":9007200883706949000,"key":"gatsby-plugin-mdx-entire-payload-674d86817e567c75d0b5d6970e08d3da--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"15. Write a C program to print all Armstrong numbers between given interval using functions.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":97,"offset":119},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":97,"offset":119},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to print all Armstrong numbers between given interval using functions.\n#include<stdio.h>\n\nvoid Armstrong(int a,int b)\n{\n    for(int i=a;i<=b;i++)\n    {\n        int k=i;\n        int count=0;\n        while(k>0)\n        {\n            ++count;\n            k/=10;\n        }\n        int number=0;\n        k=i;\n        while(k)\n        {\n            int x=k%10;\n            int p=1;\n            for (int i = 1; i <= count; ++i)\n            {\n                p*=x;\n            }\n            number+=p;\n            k/=10;\n        }\n        if(i==number)\n            printf(\"%d is Armstrong Number\\n\",i);\n        else\n            printf(\"%d is Not Armstrong Number\\n\",i);\n    }\n}\n\n\nint main()\n{\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n\n    Armstrong(a,b);\n\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":121},"end":{"line":49,"column":4,"offset":955},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":50,"column":5,"offset":961},"end":{"line":50,"column":11,"offset":967},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":957},"end":{"line":50,"column":11,"offset":967},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a range: 1 5\n1 is Armstrong Number\n2 is Armstrong Number\n3 is Armstrong Number\n4 is Armstrong Number\n5 is Armstrong Number","position":{"start":{"line":51,"column":1,"offset":969},"end":{"line":58,"column":4,"offset":1112},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":60,"column":4,"offset":1119},"end":{"line":60,"column":22,"offset":1137},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1116},"end":{"line":60,"column":22,"offset":1137},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"15. Write a C++ program to print all Armstrong numbers between given interval using functions.","position":{"start":{"line":61,"column":5,"offset":1143},"end":{"line":61,"column":99,"offset":1237},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1139},"end":{"line":61,"column":99,"offset":1237},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to print all Armstrong numbers between given interval using functions.\n\n#include<iostream>\nusing namespace std;\n\nvoid Armstrong(int a,int b)\n{\n    for(int i=a;i<=b;i++)\n    {\n        int k=i;\n        int count=0;\n        while(k>0)\n        {\n            ++count;\n            k/=10;\n        }\n        int number=0;\n        k=i;\n        while(k)\n        {\n            int x=k%10;\n            int p=1;\n            for (int i = 1; i <= count; ++i)\n            {\n                p*=x;\n            }\n            number+=p;\n            k/=10;\n        }\n        if(i==number)\n            cout << i << \" is Armstrong Number\\n\";\n        else\n            cout << i << \" is not Armstrong Number\\n\";\n    }\n}\n\n\nint main()\n{\n    int a,b;\n    cin >> a >> b;\n\n    Armstrong(a,b);\n\n    return 0;\n}","position":{"start":{"line":62,"column":1,"offset":1239},"end":{"line":109,"column":4,"offset":2096},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":110,"column":5,"offset":2102},"end":{"line":110,"column":11,"offset":2108},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":2098},"end":{"line":110,"column":11,"offset":2108},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a range: 1 5\n1 is Armstrong Number\n2 is Armstrong Number\n3 is Armstrong Number\n4 is Armstrong Number\n5 is Armstrong Number","position":{"start":{"line":111,"column":1,"offset":2110},"end":{"line":118,"column":4,"offset":2253},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":120,"column":4,"offset":2260},"end":{"line":120,"column":23,"offset":2279},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":2257},"end":{"line":120,"column":23,"offset":2279},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"15. Write a Java program to print all Armstrong numbers between given interval using functions.","position":{"start":{"line":121,"column":5,"offset":2285},"end":{"line":121,"column":100,"offset":2380},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":2281},"end":{"line":121,"column":100,"offset":2380},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to show the simple structure of a function.\nimport java.util.Scanner;\npublic class Funycode {\n    static void Armstrong(int a,int b)\n    {\n        for(int i=a;i<=b;i++)\n        {\n            int k=i;\n            int count=0;\n            while(k>0)\n            {\n                ++count;\n                k/=10;\n            }\n            int number=0;\n            k=i;\n            while(k > 0)\n            {\n                int x=k%10;\n                int p=1;\n                for (int i = 1; i <= count; ++i)\n                {\n                    p*=x;\n                }\n                number+=p;\n                k/=10;\n            }\n            if(i==number)\n                System.out.println( i + \" is Armstrong Number\\n\");\n            else\n                System.out.println( i + \" is not Armstrong Number\\n\");\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int a,b;\n        System.out.printf(\"Enter a range: \");\n        a = z.nextInt();\n        b = z.nextInt();\n        Armstrong(a,b);\n    }\n}","position":{"start":{"line":122,"column":1,"offset":2382},"end":{"line":166,"column":4,"offset":3524},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":167,"column":5,"offset":3530},"end":{"line":167,"column":11,"offset":3536},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":3526},"end":{"line":167,"column":11,"offset":3536},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a range: 1 5\n1 is Armstrong Number\n2 is Armstrong Number\n3 is Armstrong Number\n4 is Armstrong Number\n5 is Armstrong Number","position":{"start":{"line":168,"column":1,"offset":3538},"end":{"line":175,"column":4,"offset":3681},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to print all Armstrong numbers between given interval using functions.\",\"category\":\"Function Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":178,"column":1,"offset":3685},"end":{"line":178,"column":273,"offset":3957},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":178,"column":273,"offset":3957}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print all Armstrong numbers between given interval using functions.\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"15. Write a C program to print all Armstrong numbers between given interval using functions.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to print all Armstrong numbers between given interval using functions.\\n#include<stdio.h>\\n\\nvoid Armstrong(int a,int b)\\n{\\n    for(int i=a;i<=b;i++)\\n    {\\n        int k=i;\\n        int count=0;\\n        while(k>0)\\n        {\\n            ++count;\\n            k/=10;\\n        }\\n        int number=0;\\n        k=i;\\n        while(k)\\n        {\\n            int x=k%10;\\n            int p=1;\\n            for (int i = 1; i <= count; ++i)\\n            {\\n                p*=x;\\n            }\\n            number+=p;\\n            k/=10;\\n        }\\n        if(i==number)\\n            printf(\\\"%d is Armstrong Number\\\\n\\\",i);\\n        else\\n            printf(\\\"%d is Not Armstrong Number\\\\n\\\",i);\\n    }\\n}\\n\\n\\nint main()\\n{\\n    int a,b;\\n    scanf(\\\"%d%d\\\",&a,&b);\\n\\n    Armstrong(a,b);\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a range: 1 5\\n1 is Armstrong Number\\n2 is Armstrong Number\\n3 is Armstrong Number\\n4 is Armstrong Number\\n5 is Armstrong Number\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"15. Write a C++ program to print all Armstrong numbers between given interval using functions.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to print all Armstrong numbers between given interval using functions.\\n\\n#include<iostream>\\nusing namespace std;\\n\\nvoid Armstrong(int a,int b)\\n{\\n    for(int i=a;i<=b;i++)\\n    {\\n        int k=i;\\n        int count=0;\\n        while(k>0)\\n        {\\n            ++count;\\n            k/=10;\\n        }\\n        int number=0;\\n        k=i;\\n        while(k)\\n        {\\n            int x=k%10;\\n            int p=1;\\n            for (int i = 1; i <= count; ++i)\\n            {\\n                p*=x;\\n            }\\n            number+=p;\\n            k/=10;\\n        }\\n        if(i==number)\\n            cout << i << \\\" is Armstrong Number\\\\n\\\";\\n        else\\n            cout << i << \\\" is not Armstrong Number\\\\n\\\";\\n    }\\n}\\n\\n\\nint main()\\n{\\n    int a,b;\\n    cin >> a >> b;\\n\\n    Armstrong(a,b);\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a range: 1 5\\n1 is Armstrong Number\\n2 is Armstrong Number\\n3 is Armstrong Number\\n4 is Armstrong Number\\n5 is Armstrong Number\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"15. Write a Java program to print all Armstrong numbers between given interval using functions.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to show the simple structure of a function.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    static void Armstrong(int a,int b)\\n    {\\n        for(int i=a;i<=b;i++)\\n        {\\n            int k=i;\\n            int count=0;\\n            while(k>0)\\n            {\\n                ++count;\\n                k/=10;\\n            }\\n            int number=0;\\n            k=i;\\n            while(k > 0)\\n            {\\n                int x=k%10;\\n                int p=1;\\n                for (int i = 1; i <= count; ++i)\\n                {\\n                    p*=x;\\n                }\\n                number+=p;\\n                k/=10;\\n            }\\n            if(i==number)\\n                System.out.println( i + \\\" is Armstrong Number\\\\n\\\");\\n            else\\n                System.out.println( i + \\\" is not Armstrong Number\\\\n\\\");\\n        }\\n    }\\n\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int a,b;\\n        System.out.printf(\\\"Enter a range: \\\");\\n        a = z.nextInt();\\n        b = z.nextInt();\\n        Armstrong(a,b);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a range: 1 5\\n1 is Armstrong Number\\n2 is Armstrong Number\\n3 is Armstrong Number\\n4 is Armstrong Number\\n5 is Armstrong Number\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print all Armstrong numbers between given interval using functions.\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`15. Write a C program to print all Armstrong numbers between given interval using functions.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to print all Armstrong numbers between given interval using functions.\n#include<stdio.h>\n\nvoid Armstrong(int a,int b)\n{\n    for(int i=a;i<=b;i++)\n    {\n        int k=i;\n        int count=0;\n        while(k>0)\n        {\n            ++count;\n            k/=10;\n        }\n        int number=0;\n        k=i;\n        while(k)\n        {\n            int x=k%10;\n            int p=1;\n            for (int i = 1; i <= count; ++i)\n            {\n                p*=x;\n            }\n            number+=p;\n            k/=10;\n        }\n        if(i==number)\n            printf(\"%d is Armstrong Number\\\\n\",i);\n        else\n            printf(\"%d is Not Armstrong Number\\\\n\",i);\n    }\n}\n\n\nint main()\n{\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n\n    Armstrong(a,b);\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a range: 1 5\n1 is Armstrong Number\n2 is Armstrong Number\n3 is Armstrong Number\n4 is Armstrong Number\n5 is Armstrong Number\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`15. Write a C++ program to print all Armstrong numbers between given interval using functions.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to print all Armstrong numbers between given interval using functions.\n\n#include<iostream>\nusing namespace std;\n\nvoid Armstrong(int a,int b)\n{\n    for(int i=a;i<=b;i++)\n    {\n        int k=i;\n        int count=0;\n        while(k>0)\n        {\n            ++count;\n            k/=10;\n        }\n        int number=0;\n        k=i;\n        while(k)\n        {\n            int x=k%10;\n            int p=1;\n            for (int i = 1; i <= count; ++i)\n            {\n                p*=x;\n            }\n            number+=p;\n            k/=10;\n        }\n        if(i==number)\n            cout << i << \" is Armstrong Number\\\\n\";\n        else\n            cout << i << \" is not Armstrong Number\\\\n\";\n    }\n}\n\n\nint main()\n{\n    int a,b;\n    cin >> a >> b;\n\n    Armstrong(a,b);\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a range: 1 5\n1 is Armstrong Number\n2 is Armstrong Number\n3 is Armstrong Number\n4 is Armstrong Number\n5 is Armstrong Number\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`15. Write a Java program to print all Armstrong numbers between given interval using functions.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to show the simple structure of a function.\nimport java.util.Scanner;\npublic class Funycode {\n    static void Armstrong(int a,int b)\n    {\n        for(int i=a;i<=b;i++)\n        {\n            int k=i;\n            int count=0;\n            while(k>0)\n            {\n                ++count;\n                k/=10;\n            }\n            int number=0;\n            k=i;\n            while(k > 0)\n            {\n                int x=k%10;\n                int p=1;\n                for (int i = 1; i <= count; ++i)\n                {\n                    p*=x;\n                }\n                number+=p;\n                k/=10;\n            }\n            if(i==number)\n                System.out.println( i + \" is Armstrong Number\\\\n\");\n            else\n                System.out.println( i + \" is not Armstrong Number\\\\n\");\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int a,b;\n        System.out.printf(\"Enter a range: \");\n        a = z.nextInt();\n        b = z.nextInt();\n        Armstrong(a,b);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a range: 1 5\n1 is Armstrong Number\n2 is Armstrong Number\n3 is Armstrong Number\n4 is Armstrong Number\n5 is Armstrong Number\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}