{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-87772bf9c7ba84a5cdc51cc689b07d47--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Write a C program to print first 50 natural numbers using recursion.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":76,"offset":98},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":76,"offset":98},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to print first 50 natural numbers using recursion.\n#include<stdio.h>\nstruct student{\n    char name[100];\n    int id;\n};\nint main(){\n    struct student sakib;\n    strcpy(sakib.name, \"Ahosanul Hasan\");\n    sakib.id=16105001;\n    printf(\"%s\\n\",sakib.name);\n    printf(\"%d\",sakib.id);\n}","position":{"start":{"line":4,"column":1,"offset":100},"end":{"line":18,"column":4,"offset":425},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":19,"column":5,"offset":431},"end":{"line":19,"column":11,"offset":437},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":427},"end":{"line":19,"column":11,"offset":437},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Ahosanul Hasan\n16105001","position":{"start":{"line":20,"column":1,"offset":439},"end":{"line":23,"column":4,"offset":473},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":25,"column":4,"offset":480},"end":{"line":25,"column":22,"offset":498},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":477},"end":{"line":25,"column":22,"offset":498},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Write a C++ program to print first 50 natural numbers using recursion.","position":{"start":{"line":26,"column":5,"offset":504},"end":{"line":26,"column":78,"offset":577},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":500},"end":{"line":26,"column":78,"offset":577},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to print first 50 natural numbers using recursion.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nstruct student{\n    char name[100];\n    int id;\n};\nint main(){\n    struct student sakib;\n    strcpy(sakib.name, \"Ahosanul Hasan\");\n    sakib.id=16105001;\n    cout << sakib.name << endl;\n    cout << sakib.id;\n}","position":{"start":{"line":27,"column":1,"offset":579},"end":{"line":44,"column":4,"offset":948},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":45,"column":5,"offset":954},"end":{"line":45,"column":11,"offset":960},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":950},"end":{"line":45,"column":11,"offset":960},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Ahosanul Hasan\n16105001","position":{"start":{"line":46,"column":1,"offset":962},"end":{"line":49,"column":4,"offset":996},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to print first 50 natural numbers using recursion.\",\"category\":\"Structure And Union Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":52,"column":1,"offset":1000},"end":{"line":52,"column":256,"offset":1255},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":52,"column":256,"offset":1255}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print first 50 natural numbers using recursion.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"1. Write a C program to print first 50 natural numbers using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to print first 50 natural numbers using recursion.\\n#include<stdio.h>\\nstruct student{\\n    char name[100];\\n    int id;\\n};\\nint main(){\\n    struct student sakib;\\n    strcpy(sakib.name, \\\"Ahosanul Hasan\\\");\\n    sakib.id=16105001;\\n    printf(\\\"%s\\\\n\\\",sakib.name);\\n    printf(\\\"%d\\\",sakib.id);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Ahosanul Hasan\\n16105001\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"1. Write a C++ program to print first 50 natural numbers using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to print first 50 natural numbers using recursion.\\n\\n#include<iostream>\\n#include <string.h>\\nusing namespace std;\\nstruct student{\\n    char name[100];\\n    int id;\\n};\\nint main(){\\n    struct student sakib;\\n    strcpy(sakib.name, \\\"Ahosanul Hasan\\\");\\n    sakib.id=16105001;\\n    cout << sakib.name << endl;\\n    cout << sakib.id;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Ahosanul Hasan\\n16105001\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print first 50 natural numbers using recursion.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`1. Write a C program to print first 50 natural numbers using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to print first 50 natural numbers using recursion.\n#include<stdio.h>\nstruct student{\n    char name[100];\n    int id;\n};\nint main(){\n    struct student sakib;\n    strcpy(sakib.name, \"Ahosanul Hasan\");\n    sakib.id=16105001;\n    printf(\"%s\\\\n\",sakib.name);\n    printf(\"%d\",sakib.id);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Ahosanul Hasan\n16105001\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`1. Write a C++ program to print first 50 natural numbers using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to print first 50 natural numbers using recursion.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nstruct student{\n    char name[100];\n    int id;\n};\nint main(){\n    struct student sakib;\n    strcpy(sakib.name, \"Ahosanul Hasan\");\n    sakib.id=16105001;\n    cout << sakib.name << endl;\n    cout << sakib.id;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Ahosanul Hasan\n16105001\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}