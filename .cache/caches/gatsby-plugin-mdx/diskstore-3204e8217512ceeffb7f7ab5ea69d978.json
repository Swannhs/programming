{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-3440085f86b2238e135385089c34bcb4--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"29. Write a C program to count occurrences of a word in a given string.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":76,"offset":98},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":76,"offset":98},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to count occurrences of a word in a given string.\n#include<stdio.h>\n#include <string.h>\n\nint main()\n{\n    char s[1000],w[1000];\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\n\n    printf(\"Enter  the string : \");\n    gets(s);\n    printf(\"Enter word to be searched: \");\n    gets(w);\n    for(i=0;s[i];i++)\n    {\n        if(s[i]==' ')\n        {\n            a[k++]=i;\n        }\n    }\n    a[k++]=i;\n    j=0;\n    for(i=0;i<k;i++)\n    {\n        n=a[i]-j;\n        if(n==strlen(w))\n        {\n            t=0;\n            for(l=0;w[l];l++)\n            {\n                if(s[l+j]==w[l])\n                {\n                    t++;\n                }\n            }\n            if(t==strlen(w))\n            {\n                found++;\n\n            }\n        }\n\n        j=a[i]+1;\n    }\n\n     printf(\"word '%s' is occurred count=%d \",w,found);\n\n\n}","position":{"start":{"line":4,"column":1,"offset":100},"end":{"line":54,"column":4,"offset":1002},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":55,"column":5,"offset":1008},"end":{"line":55,"column":11,"offset":1014},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1004},"end":{"line":55,"column":11,"offset":1014},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter a character: a\nThis is an alphabet","position":{"start":{"line":56,"column":1,"offset":1016},"end":{"line":59,"column":4,"offset":1067},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":60,"column":4,"offset":1072},"end":{"line":60,"column":22,"offset":1090},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1069},"end":{"line":60,"column":22,"offset":1090},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"29. Write a C++ program to count occurrences of a word in a given string.","position":{"start":{"line":61,"column":5,"offset":1096},"end":{"line":61,"column":78,"offset":1169},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1092},"end":{"line":61,"column":78,"offset":1169},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to count occurrences of a word in a given string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char s[1000],w[1000];\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\n    printf(\"Enter  the string : \");\n    gets(s);\n    printf(\"Enter word to be searched: \");\n    gets(w);\n    for(i=0;s[i];i++)\n    {\n        if(s[i]==' ')\n        {\n            a[k++]=i;\n        }\n    }\n    a[k++]=i;\n    j=0;\n    for(i=0;i<k;i++)\n    {\n        n=a[i]-j;\n        if(n==strlen(w))\n        {\n            t=0;\n            for(l=0;w[l];l++)\n            {\n                if(s[l+j]==w[l])\n                {\n                    t++;\n                }\n            }\n            if(t==strlen(w))\n            {\n                found++;\n            }\n        }\n        j=a[i]+1;\n    }\n     printf(\"word '%s' is occurred count=%d \",w,found);\n}","position":{"start":{"line":62,"column":1,"offset":1171},"end":{"line":107,"column":4,"offset":2087},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":108,"column":5,"offset":2093},"end":{"line":108,"column":11,"offset":2099},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":2089},"end":{"line":108,"column":11,"offset":2099},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter a character: a\nThis is an alphabet","position":{"start":{"line":109,"column":1,"offset":2101},"end":{"line":112,"column":4,"offset":2152},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":114,"column":4,"offset":2159},"end":{"line":114,"column":23,"offset":2178},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":2156},"end":{"line":114,"column":23,"offset":2178},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"29. Write a Java program to count occurrences of a word in a given string.","position":{"start":{"line":115,"column":5,"offset":2184},"end":{"line":115,"column":79,"offset":2258},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":2180},"end":{"line":115,"column":79,"offset":2258},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to count occurrences of a word in a given string.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        char s[1000],w[1000];\n        int n,a[1000],i,j,k=0,l,found=0,t=0;\n        System.out.println(\"Enter  the string : \");\n        s = z.nextLine();\n        System.out.println(\"Enter word to be searched: \");\n        w = z.nextLine();\n        for(i=0;s[i];i++)\n        {\n            if(s[i]==' ')\n            {\n                a[k++]=i;\n            }\n        }\n        a[k++]=i;\n        j=0;\n        for(i=0;i<k;i++)\n        {\n            n=a[i]-j;\n            if(n==w.length())\n            {\n                t=0;\n                for(l=0;w[l];l++)\n                {\n                    if(s[l+j]==w[l])\n                    {\n                        t++;\n                    }\n                }\n                if(t==.length())\n                {\n                    found++;\n                }\n            }\n            j=a[i]+1;\n        }\n         System.out.println(\"word \" + w +\" is occurred count= \"+found);\n    }\n}","position":{"start":{"line":116,"column":1,"offset":2260},"end":{"line":160,"column":4,"offset":3444},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":161,"column":5,"offset":3450},"end":{"line":161,"column":11,"offset":3456},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":3446},"end":{"line":161,"column":11,"offset":3456},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter a character: a\nThis is an alphabet","position":{"start":{"line":162,"column":1,"offset":3458},"end":{"line":165,"column":4,"offset":3509},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to count occurrences of a word in a given string.\",\"category\":\"String Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":168,"column":1,"offset":3513},"end":{"line":168,"column":242,"offset":3754},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":168,"column":242,"offset":3754}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to count occurrences of a word in a given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"29. Write a C program to count occurrences of a word in a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to count occurrences of a word in a given string.\\n#include<stdio.h>\\n#include <string.h>\\n\\nint main()\\n{\\n    char s[1000],w[1000];\\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\\n\\n    printf(\\\"Enter  the string : \\\");\\n    gets(s);\\n    printf(\\\"Enter word to be searched: \\\");\\n    gets(w);\\n    for(i=0;s[i];i++)\\n    {\\n        if(s[i]==' ')\\n        {\\n            a[k++]=i;\\n        }\\n    }\\n    a[k++]=i;\\n    j=0;\\n    for(i=0;i<k;i++)\\n    {\\n        n=a[i]-j;\\n        if(n==strlen(w))\\n        {\\n            t=0;\\n            for(l=0;w[l];l++)\\n            {\\n                if(s[l+j]==w[l])\\n                {\\n                    t++;\\n                }\\n            }\\n            if(t==strlen(w))\\n            {\\n                found++;\\n\\n            }\\n        }\\n\\n        j=a[i]+1;\\n    }\\n\\n     printf(\\\"word '%s' is occurred count=%d \\\",w,found);\\n\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter a character: a\\nThis is an alphabet\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"29. Write a C++ program to count occurrences of a word in a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to count occurrences of a word in a given string.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint main()\\n{\\n    char s[1000],w[1000];\\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\\n    printf(\\\"Enter  the string : \\\");\\n    gets(s);\\n    printf(\\\"Enter word to be searched: \\\");\\n    gets(w);\\n    for(i=0;s[i];i++)\\n    {\\n        if(s[i]==' ')\\n        {\\n            a[k++]=i;\\n        }\\n    }\\n    a[k++]=i;\\n    j=0;\\n    for(i=0;i<k;i++)\\n    {\\n        n=a[i]-j;\\n        if(n==strlen(w))\\n        {\\n            t=0;\\n            for(l=0;w[l];l++)\\n            {\\n                if(s[l+j]==w[l])\\n                {\\n                    t++;\\n                }\\n            }\\n            if(t==strlen(w))\\n            {\\n                found++;\\n            }\\n        }\\n        j=a[i]+1;\\n    }\\n     printf(\\\"word '%s' is occurred count=%d \\\",w,found);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter a character: a\\nThis is an alphabet\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"29. Write a Java program to count occurrences of a word in a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to count occurrences of a word in a given string.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z=new Scanner(System.in);\\n        char s[1000],w[1000];\\n        int n,a[1000],i,j,k=0,l,found=0,t=0;\\n        System.out.println(\\\"Enter  the string : \\\");\\n        s = z.nextLine();\\n        System.out.println(\\\"Enter word to be searched: \\\");\\n        w = z.nextLine();\\n        for(i=0;s[i];i++)\\n        {\\n            if(s[i]==' ')\\n            {\\n                a[k++]=i;\\n            }\\n        }\\n        a[k++]=i;\\n        j=0;\\n        for(i=0;i<k;i++)\\n        {\\n            n=a[i]-j;\\n            if(n==w.length())\\n            {\\n                t=0;\\n                for(l=0;w[l];l++)\\n                {\\n                    if(s[l+j]==w[l])\\n                    {\\n                        t++;\\n                    }\\n                }\\n                if(t==.length())\\n                {\\n                    found++;\\n                }\\n            }\\n            j=a[i]+1;\\n        }\\n         System.out.println(\\\"word \\\" + w +\\\" is occurred count= \\\"+found);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter a character: a\\nThis is an alphabet\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to count occurrences of a word in a given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`29. Write a C program to count occurrences of a word in a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to count occurrences of a word in a given string.\n#include<stdio.h>\n#include <string.h>\n\nint main()\n{\n    char s[1000],w[1000];\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\n\n    printf(\"Enter  the string : \");\n    gets(s);\n    printf(\"Enter word to be searched: \");\n    gets(w);\n    for(i=0;s[i];i++)\n    {\n        if(s[i]==' ')\n        {\n            a[k++]=i;\n        }\n    }\n    a[k++]=i;\n    j=0;\n    for(i=0;i<k;i++)\n    {\n        n=a[i]-j;\n        if(n==strlen(w))\n        {\n            t=0;\n            for(l=0;w[l];l++)\n            {\n                if(s[l+j]==w[l])\n                {\n                    t++;\n                }\n            }\n            if(t==strlen(w))\n            {\n                found++;\n\n            }\n        }\n\n        j=a[i]+1;\n    }\n\n     printf(\"word '%s' is occurred count=%d \",w,found);\n\n\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter a character: a\nThis is an alphabet\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`29. Write a C++ program to count occurrences of a word in a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to count occurrences of a word in a given string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char s[1000],w[1000];\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\n    printf(\"Enter  the string : \");\n    gets(s);\n    printf(\"Enter word to be searched: \");\n    gets(w);\n    for(i=0;s[i];i++)\n    {\n        if(s[i]==' ')\n        {\n            a[k++]=i;\n        }\n    }\n    a[k++]=i;\n    j=0;\n    for(i=0;i<k;i++)\n    {\n        n=a[i]-j;\n        if(n==strlen(w))\n        {\n            t=0;\n            for(l=0;w[l];l++)\n            {\n                if(s[l+j]==w[l])\n                {\n                    t++;\n                }\n            }\n            if(t==strlen(w))\n            {\n                found++;\n            }\n        }\n        j=a[i]+1;\n    }\n     printf(\"word '%s' is occurred count=%d \",w,found);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter a character: a\nThis is an alphabet\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`29. Write a Java program to count occurrences of a word in a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to count occurrences of a word in a given string.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        char s[1000],w[1000];\n        int n,a[1000],i,j,k=0,l,found=0,t=0;\n        System.out.println(\"Enter  the string : \");\n        s = z.nextLine();\n        System.out.println(\"Enter word to be searched: \");\n        w = z.nextLine();\n        for(i=0;s[i];i++)\n        {\n            if(s[i]==' ')\n            {\n                a[k++]=i;\n            }\n        }\n        a[k++]=i;\n        j=0;\n        for(i=0;i<k;i++)\n        {\n            n=a[i]-j;\n            if(n==w.length())\n            {\n                t=0;\n                for(l=0;w[l];l++)\n                {\n                    if(s[l+j]==w[l])\n                    {\n                        t++;\n                    }\n                }\n                if(t==.length())\n                {\n                    found++;\n                }\n            }\n            j=a[i]+1;\n        }\n         System.out.println(\"word \" + w +\" is occurred count= \"+found);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter a character: a\nThis is an alphabet\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}