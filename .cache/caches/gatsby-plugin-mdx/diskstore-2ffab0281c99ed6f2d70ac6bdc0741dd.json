{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-d2571c7351d1724c1b53a09ff1695803--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"36. Write a C program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":164,"offset":186},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":164,"offset":186},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[200];\n    printf(\"Input a Full name: \");\n    gets(str);\n    int len = strlen(str);\n    int i,p=0,flag;\n    for(i=0;i<len;i++){\n        if(str[i]==' ' && str[i+1]!=' ')\n            p++;\n    }\n    printf(\"The abbrivated form of the name is: \");\n    flag==0;\n    for(i=0;i<len;i++){\n        if(p>0)\n        {\n            if(i==0){\n                printf(\"%c \",str[i]);\n                p--;}\n           else if(str[i-1]==' '&& str[i]!=' ')\n            {printf(\"%c \",str[i]);\n            p--;}\n        }\n        else {\n            if(flag==0 && str[i-1]==' ')\n                flag=1;\n            if(flag==1)\n                printf(\"%c\",str[i]);\n        }\n\n    }\n}","position":{"start":{"line":4,"column":1,"offset":188},"end":{"line":40,"column":4,"offset":1112},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":41,"column":5,"offset":1118},"end":{"line":41,"column":11,"offset":1124},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1114},"end":{"line":41,"column":11,"offset":1124},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input a Full name: Farzan Akter\nThe abbrivated form of the name is: F Akter","position":{"start":{"line":42,"column":1,"offset":1126},"end":{"line":45,"column":4,"offset":1212},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":46,"column":4,"offset":1217},"end":{"line":46,"column":22,"offset":1235},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1214},"end":{"line":46,"column":22,"offset":1235},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"36. Write a C++ program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.","position":{"start":{"line":47,"column":5,"offset":1241},"end":{"line":47,"column":166,"offset":1402},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1237},"end":{"line":47,"column":166,"offset":1402},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char str[200];\n    cout << \"Input a Full name: \";\n    cin >> str;\n    int len = strlen(str);\n    int i,p=0,flag;\n    for(i=0;i<len;i++){\n        if(str[i]==' ' && str[i+1]!=' ')\n            p++;\n    }\n    cout << \"The abbrivated form of the name is: \";\n    flag==0;\n    for(i=0;i<len;i++){\n        if(p>0)\n        {\n            if(i==0){\n                printf(\"%c \",str[i]);\n                p--;}\n            else if(str[i-1]==' '&& str[i]!=' ')\n            {\n              cout << \" \" << str[i];\n              p--;}\n        }\n        else {\n            if(flag==0 && str[i-1]==' ')\n                flag=1;\n            if(flag==1)\n                cout << \" \" << str[i];\n        }\n    }\n}","position":{"start":{"line":48,"column":1,"offset":1404},"end":{"line":86,"column":4,"offset":2378},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":87,"column":5,"offset":2384},"end":{"line":87,"column":11,"offset":2390},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2380},"end":{"line":87,"column":11,"offset":2390},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input a Full name: Farzan Akter\nThe abbrivated form of the name is: F Akter","position":{"start":{"line":88,"column":1,"offset":2392},"end":{"line":91,"column":4,"offset":2478},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":93,"column":4,"offset":2485},"end":{"line":93,"column":23,"offset":2504},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2482},"end":{"line":93,"column":23,"offset":2504},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"36. Write a Java program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.","position":{"start":{"line":94,"column":5,"offset":2510},"end":{"line":94,"column":167,"offset":2672},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2506},"end":{"line":94,"column":167,"offset":2672},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\nimport java.util.Scanner;\n\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        char[] str = new char[200];\n        System.out.println(\"Input a Full name: \");\n        str = z.nextLine().toCharArray();\n        int len = str.length;\n        int i, p = 0, flag;\n        for (i = 0; i < len; i++) {\n            if (str[i] == ' ' && str[i + 1] != ' ')\n                p++;\n        }\n        System.out.println(\"The abbreviated form of the name is: \");\n        flag = 0;\n        for (i = 0; i < len; i++) {\n            if (p > 0) {\n                if (i == 0) {\n                    System.out.println(str[i]);\n                    p--;\n                } else if (str[i - 1] == ' ' && str[i] != ' ') {\n                    System.out.println(str[i]);\n                    p--;\n                }\n            } else {\n                if (flag == 0 && str[i - 1] == ' ')\n                    flag = 1;\n                if (flag == 1)\n                    System.out.print(str[i]);\n            }\n        }\n    }\n}","position":{"start":{"line":95,"column":1,"offset":2674},"end":{"line":131,"column":4,"offset":3945},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":132,"column":5,"offset":3951},"end":{"line":132,"column":11,"offset":3957},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":3947},"end":{"line":132,"column":11,"offset":3957},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter  the string : hello world\nEnter character: o\nhell wrld","position":{"start":{"line":133,"column":1,"offset":3959},"end":{"line":137,"column":4,"offset":4031},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\",\"category\":\"String Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":140,"column":1,"offset":4035},"end":{"line":140,"column":330,"offset":4364},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":140,"column":330,"offset":4364}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"36. Write a C program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\\n#include<stdio.h>\\n#include<string.h>\\nint main()\\n{\\n    char str[200];\\n    printf(\\\"Input a Full name: \\\");\\n    gets(str);\\n    int len = strlen(str);\\n    int i,p=0,flag;\\n    for(i=0;i<len;i++){\\n        if(str[i]==' ' && str[i+1]!=' ')\\n            p++;\\n    }\\n    printf(\\\"The abbrivated form of the name is: \\\");\\n    flag==0;\\n    for(i=0;i<len;i++){\\n        if(p>0)\\n        {\\n            if(i==0){\\n                printf(\\\"%c \\\",str[i]);\\n                p--;}\\n           else if(str[i-1]==' '&& str[i]!=' ')\\n            {printf(\\\"%c \\\",str[i]);\\n            p--;}\\n        }\\n        else {\\n            if(flag==0 && str[i-1]==' ')\\n                flag=1;\\n            if(flag==1)\\n                printf(\\\"%c\\\",str[i]);\\n        }\\n\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input a Full name: Farzan Akter\\nThe abbrivated form of the name is: F Akter\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"36. Write a C++ program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint main()\\n{\\n    char str[200];\\n    cout << \\\"Input a Full name: \\\";\\n    cin >> str;\\n    int len = strlen(str);\\n    int i,p=0,flag;\\n    for(i=0;i<len;i++){\\n        if(str[i]==' ' && str[i+1]!=' ')\\n            p++;\\n    }\\n    cout << \\\"The abbrivated form of the name is: \\\";\\n    flag==0;\\n    for(i=0;i<len;i++){\\n        if(p>0)\\n        {\\n            if(i==0){\\n                printf(\\\"%c \\\",str[i]);\\n                p--;}\\n            else if(str[i-1]==' '&& str[i]!=' ')\\n            {\\n              cout << \\\" \\\" << str[i];\\n              p--;}\\n        }\\n        else {\\n            if(flag==0 && str[i-1]==' ')\\n                flag=1;\\n            if(flag==1)\\n                cout << \\\" \\\" << str[i];\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input a Full name: Farzan Akter\\nThe abbrivated form of the name is: F Akter\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"36. Write a Java program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\\nimport java.util.Scanner;\\n\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        char[] str = new char[200];\\n        System.out.println(\\\"Input a Full name: \\\");\\n        str = z.nextLine().toCharArray();\\n        int len = str.length;\\n        int i, p = 0, flag;\\n        for (i = 0; i < len; i++) {\\n            if (str[i] == ' ' && str[i + 1] != ' ')\\n                p++;\\n        }\\n        System.out.println(\\\"The abbreviated form of the name is: \\\");\\n        flag = 0;\\n        for (i = 0; i < len; i++) {\\n            if (p > 0) {\\n                if (i == 0) {\\n                    System.out.println(str[i]);\\n                    p--;\\n                } else if (str[i - 1] == ' ' && str[i] != ' ') {\\n                    System.out.println(str[i]);\\n                    p--;\\n                }\\n            } else {\\n                if (flag == 0 && str[i - 1] == ' ')\\n                    flag = 1;\\n                if (flag == 1)\\n                    System.out.print(str[i]);\\n            }\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter  the string : hello world\\nEnter character: o\\nhell wrld\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`36. Write a C program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n    char str[200];\n    printf(\"Input a Full name: \");\n    gets(str);\n    int len = strlen(str);\n    int i,p=0,flag;\n    for(i=0;i<len;i++){\n        if(str[i]==' ' && str[i+1]!=' ')\n            p++;\n    }\n    printf(\"The abbrivated form of the name is: \");\n    flag==0;\n    for(i=0;i<len;i++){\n        if(p>0)\n        {\n            if(i==0){\n                printf(\"%c \",str[i]);\n                p--;}\n           else if(str[i-1]==' '&& str[i]!=' ')\n            {printf(\"%c \",str[i]);\n            p--;}\n        }\n        else {\n            if(flag==0 && str[i-1]==' ')\n                flag=1;\n            if(flag==1)\n                printf(\"%c\",str[i]);\n        }\n\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input a Full name: Farzan Akter\nThe abbrivated form of the name is: F Akter\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`36. Write a C++ program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char str[200];\n    cout << \"Input a Full name: \";\n    cin >> str;\n    int len = strlen(str);\n    int i,p=0,flag;\n    for(i=0;i<len;i++){\n        if(str[i]==' ' && str[i+1]!=' ')\n            p++;\n    }\n    cout << \"The abbrivated form of the name is: \";\n    flag==0;\n    for(i=0;i<len;i++){\n        if(p>0)\n        {\n            if(i==0){\n                printf(\"%c \",str[i]);\n                p--;}\n            else if(str[i-1]==' '&& str[i]!=' ')\n            {\n              cout << \" \" << str[i];\n              p--;}\n        }\n        else {\n            if(flag==0 && str[i-1]==' ')\n                flag=1;\n            if(flag==1)\n                cout << \" \" << str[i];\n        }\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input a Full name: Farzan Akter\nThe abbrivated form of the name is: F Akter\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`36. Write a Java program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to that takes a set of names of individuals and abbreviates the first, middle and other names except the last name by their first letter.\nimport java.util.Scanner;\n\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        char[] str = new char[200];\n        System.out.println(\"Input a Full name: \");\n        str = z.nextLine().toCharArray();\n        int len = str.length;\n        int i, p = 0, flag;\n        for (i = 0; i < len; i++) {\n            if (str[i] == ' ' && str[i + 1] != ' ')\n                p++;\n        }\n        System.out.println(\"The abbreviated form of the name is: \");\n        flag = 0;\n        for (i = 0; i < len; i++) {\n            if (p > 0) {\n                if (i == 0) {\n                    System.out.println(str[i]);\n                    p--;\n                } else if (str[i - 1] == ' ' && str[i] != ' ') {\n                    System.out.println(str[i]);\n                    p--;\n                }\n            } else {\n                if (flag == 0 && str[i - 1] == ' ')\n                    flag = 1;\n                if (flag == 1)\n                    System.out.print(str[i]);\n            }\n        }\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter  the string : hello world\nEnter character: o\nhell wrld\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}