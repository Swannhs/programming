{"expireTime":9007200883710394000,"key":"gatsby-plugin-mdx-entire-payload-d5719261d186114508d855c8dc59d7b4--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"10. Write a C program to Calculate the length of the string using a pointer.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":81,"offset":103},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":81,"offset":103},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to Calculate the length of the string using a pointer.\n#include<stdio.h>\nvoid main() {\n  char s[1000], *p;\n  int count = 0;\n  printf(\"Enter Any string = \");\n  scanf(\"%s\",s);\n  p= s;\n  while (*p != '\\0') {\n    count++;\n    p++;\n  }\n  printf(\"Length of String : %d\", count);\n}","position":{"start":{"line":4,"column":1,"offset":105},"end":{"line":19,"column":4,"offset":423},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":20,"column":5,"offset":429},"end":{"line":20,"column":11,"offset":435},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":425},"end":{"line":20,"column":11,"offset":435},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter Any string = hello\nLength of String : 5","position":{"start":{"line":21,"column":1,"offset":437},"end":{"line":24,"column":4,"offset":493},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":25,"column":4,"offset":498},"end":{"line":25,"column":22,"offset":516},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":495},"end":{"line":25,"column":22,"offset":516},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"10. Write a C++ program to Calculate the length of the string using a pointer.","position":{"start":{"line":26,"column":5,"offset":522},"end":{"line":26,"column":83,"offset":600},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":518},"end":{"line":26,"column":83,"offset":600},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to Calculate the length of the string using a pointer.\n#include <iostream>\nusing namespace std;\nint main() {\n  char s[1000], *p;\n  int count = 0;\n  cout<<(\"Enter Any string = \");\n  cin>>s;\n  p= s;\n  while (*p != '\\0') {\n    count++;\n    p++;\n  }\n  cout<<\"Length of String :\"<< count;\n}","position":{"start":{"line":27,"column":1,"offset":602},"end":{"line":43,"column":4,"offset":934},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":44,"column":5,"offset":940},"end":{"line":44,"column":11,"offset":946},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":936},"end":{"line":44,"column":11,"offset":946},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter Any string = hello\nLength of String : 5","position":{"start":{"line":45,"column":1,"offset":948},"end":{"line":48,"column":4,"offset":1004},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to Calculate the length of the string using a pointer.\",\"category\":\"Pointer Program Index\",\"tags\":[\"#c\",\"#c++\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":51,"column":1,"offset":1008},"end":{"line":51,"column":248,"offset":1255},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":51,"column":248,"offset":1255}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to Calculate the length of the string using a pointer.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"10. Write a C program to Calculate the length of the string using a pointer.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to Calculate the length of the string using a pointer.\\n#include<stdio.h>\\nvoid main() {\\n  char s[1000], *p;\\n  int count = 0;\\n  printf(\\\"Enter Any string = \\\");\\n  scanf(\\\"%s\\\",s);\\n  p= s;\\n  while (*p != '\\\\0') {\\n    count++;\\n    p++;\\n  }\\n  printf(\\\"Length of String : %d\\\", count);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter Any string = hello\\nLength of String : 5\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"10. Write a C++ program to Calculate the length of the string using a pointer.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to Calculate the length of the string using a pointer.\\n#include <iostream>\\nusing namespace std;\\nint main() {\\n  char s[1000], *p;\\n  int count = 0;\\n  cout<<(\\\"Enter Any string = \\\");\\n  cin>>s;\\n  p= s;\\n  while (*p != '\\\\0') {\\n    count++;\\n    p++;\\n  }\\n  cout<<\\\"Length of String :\\\"<< count;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter Any string = hello\\nLength of String : 5\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to Calculate the length of the string using a pointer.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`10. Write a C program to Calculate the length of the string using a pointer.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to Calculate the length of the string using a pointer.\n#include<stdio.h>\nvoid main() {\n  char s[1000], *p;\n  int count = 0;\n  printf(\"Enter Any string = \");\n  scanf(\"%s\",s);\n  p= s;\n  while (*p != '\\\\0') {\n    count++;\n    p++;\n  }\n  printf(\"Length of String : %d\", count);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter Any string = hello\nLength of String : 5\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`10. Write a C++ program to Calculate the length of the string using a pointer.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to Calculate the length of the string using a pointer.\n#include <iostream>\nusing namespace std;\nint main() {\n  char s[1000], *p;\n  int count = 0;\n  cout<<(\"Enter Any string = \");\n  cin>>s;\n  p= s;\n  while (*p != '\\\\0') {\n    count++;\n    p++;\n  }\n  cout<<\"Length of String :\"<< count;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter Any string = hello\nLength of String : 5\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}