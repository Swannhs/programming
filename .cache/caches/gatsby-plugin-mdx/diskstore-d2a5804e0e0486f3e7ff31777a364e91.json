{"expireTime":9007200883706341000,"key":"gatsby-plugin-mdx-entire-payload-1cc6a4681087153d6e976cc243455973--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"25. Write a C program to enter 3×3 matrix and print it.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":60,"offset":82},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":60,"offset":82},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to enter 3×3 matrix and print it.\n#include <stdio.h>\nvoid main()\n{\n  int arr[3][3],i,j;\n  printf(\"Input elements in the matrix :\\n\");\n  for(i=0;i<3;i++)\n  {\n      for(j=0;j<3;j++)\n      {\n          printf(\"element - [%d],[%d] : \",i,j);\n          scanf(\"%d\",&arr[i][j]);\n      }\n  }\n printf(\"\\nThe matrix is : \\n\");\n  for(i=0;i<3;i++)\n  {\n      printf(\"\\n\");\n      for(j=0;j<3;j++)\n           printf(\"%d\\t\",arr[i][j]);\n  }\n}","position":{"start":{"line":4,"column":1,"offset":84},"end":{"line":27,"column":4,"offset":559},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":28,"column":5,"offset":565},"end":{"line":28,"column":11,"offset":571},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":561},"end":{"line":28,"column":11,"offset":571},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input Rows and Columns of the matrix :\n3 3\nInput elements in the matrix :\nelement -0 0 : 1\nelement -0 1 : 2\nelement -0 2 : 3\nelement -1 0 : 4\nelement -1 1 : 5\nelement -1 2 : 6\nelement -2 0 : 7\nelement -2 1 : 8\nelement -2 2 : 9\n\nThe matrix is :\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two rows to be exchanged\n2\n2\nThe matrix after interchanging the two rows(in the original matrix)\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two columns to be exchanged\n3\n3\nThe matrix after interchanging the two columns(in the original matrix)\n1 2 3\n4 5 6\n7 8 9","position":{"start":{"line":29,"column":1,"offset":573},"end":{"line":61,"column":4,"offset":1152},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":62,"column":4,"offset":1157},"end":{"line":62,"column":22,"offset":1175},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1154},"end":{"line":62,"column":22,"offset":1175},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"25. Write a C++ program to enter 3×3 matrix and print it.","position":{"start":{"line":63,"column":5,"offset":1181},"end":{"line":63,"column":62,"offset":1238},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1177},"end":{"line":63,"column":62,"offset":1238},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to enter 3×3 matrix and print it.\n\n#include <iostream>\nusing namespace std;\nint main()\n{\n    int arr1[50][50], arr2[50][50],i,j,a,b,c,p,q,t,r1,c1,r;\n    cout<<\"Input Rows and Columns of the  matrix :\\n\";\n    cin>>r1>>c1;\n    cout<<\"\\nInput elements in the  matrix :\\n\";\n    for(i=0; i<r1; i++)\n    {\n        for(j=0; j<c1; j++)\n        {\n            cout<<\"element -\"<<i<<\" \"<<j<<\" : \";\n            cin>>arr1[i][j];\n            arr2[i][j] = arr1[i][j];\n        }\n    }\n    cout<<\"\\nThe  matrix is :\\n\";\n    for(i=0; i<r1; i++)\n    {\n        for(j=0; j<c1 ; j++)\n            cout<<arr1[i][j]<<\"\\t\";\n        cout<<\"\\n\";\n    }\n    cout<<\"Enter the numbers of two rows to be exchanged \\n\";\n    cin>>a>>b;\n    for (i = 0; i < r1; ++i)\n    {\n        c = arr1[a - 1][i];\n        arr1[a - 1][i] = arr1[b - 1][i];\n        arr1[b - 1][i] = c;\n    }\n    cout<<\"The matrix after interchanging the two rows(in the original matrix) \\n\";\n    for (i = 0; i < r1; ++i)\n    {\n        for (j = 0; j < r1; ++j)\n        {\n            cout<<\" \"<< arr1[i][j]<<\"\\t\";\n        }\n        cout<<\"\\n\";\n    }\n    cout<<\"Enter the numbers of two columns to be exchanged \\n\";\n    cin>>p>>q;\n    for (i = 0; i < c1; ++i)\n    {\n        r = arr2[i][p - 1];\n        arr2[i][p - 1] = arr2[i][q - 1];\n        arr2[i][q - 1] = r;\n    }\n    cout<<\"The matrix after interchanging the two columns(in the original matrix)\\n \";\n    for (i = 0; i < c1; ++i)\n    {\n        for (j = 0; j < c1; ++j)\n        {\n            cout<<\"  \"<< arr2[i][j]<<\"\\t\";\n        }\n        cout<<\"\\n\";\n    }\n}","position":{"start":{"line":64,"column":1,"offset":1240},"end":{"line":126,"column":4,"offset":2875},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":127,"column":5,"offset":2881},"end":{"line":127,"column":11,"offset":2887},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":2877},"end":{"line":127,"column":11,"offset":2887},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input Rows and Columns of the matrix :\n3 3\nInput elements in the matrix :\nelement -0 0 : 1\nelement -0 1 : 2\nelement -0 2 : 3\nelement -1 0 : 4\nelement -1 1 : 5\nelement -1 2 : 6\nelement -2 0 : 7\nelement -2 1 : 8\nelement -2 2 : 9\n\nThe matrix is :\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two rows to be exchanged\n2\n2\nThe matrix after interchanging the two rows(in the original matrix)\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two columns to be exchanged\n3\n3\nThe matrix after interchanging the two columns(in the original matrix)\n1 2 3\n4 5 6\n7 8 9","position":{"start":{"line":128,"column":1,"offset":2889},"end":{"line":160,"column":4,"offset":3468},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":162,"column":4,"offset":3475},"end":{"line":162,"column":23,"offset":3494},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":3472},"end":{"line":162,"column":23,"offset":3494},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"25. Write a Java program to enter 3×3 matrix and print it.","position":{"start":{"line":163,"column":5,"offset":3500},"end":{"line":163,"column":63,"offset":3558},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":3496},"end":{"line":163,"column":63,"offset":3558},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to enter 3×3 matrix and print it.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        int arr1[][]=new int [50][50], arr2[][]=new int [50][50],i,j,a,b,c,p,q,t,r1,c1,r;\n        System.out.println(\"Input Rows and Columns of the  matrix :\\n\");\n        r1=z.nextInt();\n        c1=z.nextInt();\n        System.out.println(\"\\nInput elements in the  matrix :\\n\");\n        for(i=0; i<r1; i++)\n        {\n            for(j=0; j<c1; j++)\n            {\n                System.out.println(\"element -\"+i+\" \"+j+\" : \");\n                arr1[i][j]=z.nextInt();\n                arr2[i][j] = arr1[i][j];\n            }\n        }\n        System.out.println(\"\\nThe  matrix is :\\n\");\n        for(i=0; i<r1; i++)\n        {\n            for(j=0; j<c1 ; j++)\n                System.out.println(arr1[i][j]+\"\\t\");\n                System.out.println(\"\\n\");\n        }\n        System.out.println(\"Enter the numbers of two rows to be exchanged \\n\");\n        a=z.nextInt();\n        b=z.nextInt();\n        for (i = 0; i < r1; ++i)\n        {\n            c = arr1[a - 1][i];\n            arr1[a - 1][i] = arr1[b - 1][i];\n            arr1[b - 1][i] = c;\n        }\n        System.out.println(\"The matrix after interchanging the two rows(in the original matrix) \\n\");\n        for (i = 0; i < r1; ++i)\n        {\n            for (j = 0; j < r1; ++j)\n            {\n                System.out.println(\" \"+ arr1[i][j]+\"\\t\");\n            }\n            System.out.println(\"\\n\");\n        }\n        System.out.println(\"Enter the numbers of two columns to be exchanged \\n\");\n        p=z.nextInt();\n        q=z.nextInt();\n        for (i = 0; i < c1; ++i)\n        {\n            r = arr2[i][p - 1];\n            arr2[i][p - 1] = arr2[i][q - 1];\n            arr2[i][q - 1] = r;\n        }\n        System.out.println(\"The matrix after interchanging the two columns(in the original matrix)\\n \");\n        for (i = 0; i < c1; ++i)\n        {\n            for (j = 0; j < c1; ++j)\n            {\n                System.out.println(\"  \"+ arr2[i][j]+\"\\t\");\n            }\n            System.out.println(\"\\n\");\n        }\n    }\n}","position":{"start":{"line":164,"column":1,"offset":3560},"end":{"line":230,"column":4,"offset":5811},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":231,"column":5,"offset":5817},"end":{"line":231,"column":11,"offset":5823},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":5813},"end":{"line":231,"column":11,"offset":5823},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input Rows and Columns of the matrix :\n3 3\nInput elements in the matrix :\nelement -0 0 : 1\nelement -0 1 : 2\nelement -0 2 : 3\nelement -1 0 : 4\nelement -1 1 : 5\nelement -1 2 : 6\nelement -2 0 : 7\nelement -2 1 : 8\nelement -2 2 : 9\n\nThe matrix is :\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two rows to be exchanged\n2\n2\nThe matrix after interchanging the two rows(in the original matrix)\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two columns to be exchanged\n3\n3\nThe matrix after interchanging the two columns(in the original matrix)\n1 2 3\n4 5 6\n7 8 9","position":{"start":{"line":232,"column":1,"offset":5825},"end":{"line":264,"column":4,"offset":6404},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to enter 3×3 matrix and print it.\",\"category\":\"Array Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":267,"column":1,"offset":6408},"end":{"line":267,"column":233,"offset":6640},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":267,"column":233,"offset":6640}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to enter 3×3 matrix and print it.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"25. Write a C program to enter 3\\xD73 matrix and print it.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to enter 3\\xD73 matrix and print it.\\n#include <stdio.h>\\nvoid main()\\n{\\n  int arr[3][3],i,j;\\n  printf(\\\"Input elements in the matrix :\\\\n\\\");\\n  for(i=0;i<3;i++)\\n  {\\n      for(j=0;j<3;j++)\\n      {\\n          printf(\\\"element - [%d],[%d] : \\\",i,j);\\n          scanf(\\\"%d\\\",&arr[i][j]);\\n      }\\n  }\\n printf(\\\"\\\\nThe matrix is : \\\\n\\\");\\n  for(i=0;i<3;i++)\\n  {\\n      printf(\\\"\\\\n\\\");\\n      for(j=0;j<3;j++)\\n           printf(\\\"%d\\\\t\\\",arr[i][j]);\\n  }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input Rows and Columns of the matrix :\\n3 3\\nInput elements in the matrix :\\nelement -0 0 : 1\\nelement -0 1 : 2\\nelement -0 2 : 3\\nelement -1 0 : 4\\nelement -1 1 : 5\\nelement -1 2 : 6\\nelement -2 0 : 7\\nelement -2 1 : 8\\nelement -2 2 : 9\\n\\nThe matrix is :\\n1 2 3\\n4 5 6\\n7 8 9\\nEnter the numbers of two rows to be exchanged\\n2\\n2\\nThe matrix after interchanging the two rows(in the original matrix)\\n1 2 3\\n4 5 6\\n7 8 9\\nEnter the numbers of two columns to be exchanged\\n3\\n3\\nThe matrix after interchanging the two columns(in the original matrix)\\n1 2 3\\n4 5 6\\n7 8 9\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"25. Write a C++ program to enter 3\\xD73 matrix and print it.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to enter 3\\xD73 matrix and print it.\\n\\n#include <iostream>\\nusing namespace std;\\nint main()\\n{\\n    int arr1[50][50], arr2[50][50],i,j,a,b,c,p,q,t,r1,c1,r;\\n    cout<<\\\"Input Rows and Columns of the  matrix :\\\\n\\\";\\n    cin>>r1>>c1;\\n    cout<<\\\"\\\\nInput elements in the  matrix :\\\\n\\\";\\n    for(i=0; i<r1; i++)\\n    {\\n        for(j=0; j<c1; j++)\\n        {\\n            cout<<\\\"element -\\\"<<i<<\\\" \\\"<<j<<\\\" : \\\";\\n            cin>>arr1[i][j];\\n            arr2[i][j] = arr1[i][j];\\n        }\\n    }\\n    cout<<\\\"\\\\nThe  matrix is :\\\\n\\\";\\n    for(i=0; i<r1; i++)\\n    {\\n        for(j=0; j<c1 ; j++)\\n            cout<<arr1[i][j]<<\\\"\\\\t\\\";\\n        cout<<\\\"\\\\n\\\";\\n    }\\n    cout<<\\\"Enter the numbers of two rows to be exchanged \\\\n\\\";\\n    cin>>a>>b;\\n    for (i = 0; i < r1; ++i)\\n    {\\n        c = arr1[a - 1][i];\\n        arr1[a - 1][i] = arr1[b - 1][i];\\n        arr1[b - 1][i] = c;\\n    }\\n    cout<<\\\"The matrix after interchanging the two rows(in the original matrix) \\\\n\\\";\\n    for (i = 0; i < r1; ++i)\\n    {\\n        for (j = 0; j < r1; ++j)\\n        {\\n            cout<<\\\" \\\"<< arr1[i][j]<<\\\"\\\\t\\\";\\n        }\\n        cout<<\\\"\\\\n\\\";\\n    }\\n    cout<<\\\"Enter the numbers of two columns to be exchanged \\\\n\\\";\\n    cin>>p>>q;\\n    for (i = 0; i < c1; ++i)\\n    {\\n        r = arr2[i][p - 1];\\n        arr2[i][p - 1] = arr2[i][q - 1];\\n        arr2[i][q - 1] = r;\\n    }\\n    cout<<\\\"The matrix after interchanging the two columns(in the original matrix)\\\\n \\\";\\n    for (i = 0; i < c1; ++i)\\n    {\\n        for (j = 0; j < c1; ++j)\\n        {\\n            cout<<\\\"  \\\"<< arr2[i][j]<<\\\"\\\\t\\\";\\n        }\\n        cout<<\\\"\\\\n\\\";\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input Rows and Columns of the matrix :\\n3 3\\nInput elements in the matrix :\\nelement -0 0 : 1\\nelement -0 1 : 2\\nelement -0 2 : 3\\nelement -1 0 : 4\\nelement -1 1 : 5\\nelement -1 2 : 6\\nelement -2 0 : 7\\nelement -2 1 : 8\\nelement -2 2 : 9\\n\\nThe matrix is :\\n1 2 3\\n4 5 6\\n7 8 9\\nEnter the numbers of two rows to be exchanged\\n2\\n2\\nThe matrix after interchanging the two rows(in the original matrix)\\n1 2 3\\n4 5 6\\n7 8 9\\nEnter the numbers of two columns to be exchanged\\n3\\n3\\nThe matrix after interchanging the two columns(in the original matrix)\\n1 2 3\\n4 5 6\\n7 8 9\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"25. Write a Java program to enter 3\\xD73 matrix and print it.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to enter 3\\xD73 matrix and print it.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        int arr1[][]=new int [50][50], arr2[][]=new int [50][50],i,j,a,b,c,p,q,t,r1,c1,r;\\n        System.out.println(\\\"Input Rows and Columns of the  matrix :\\\\n\\\");\\n        r1=z.nextInt();\\n        c1=z.nextInt();\\n        System.out.println(\\\"\\\\nInput elements in the  matrix :\\\\n\\\");\\n        for(i=0; i<r1; i++)\\n        {\\n            for(j=0; j<c1; j++)\\n            {\\n                System.out.println(\\\"element -\\\"+i+\\\" \\\"+j+\\\" : \\\");\\n                arr1[i][j]=z.nextInt();\\n                arr2[i][j] = arr1[i][j];\\n            }\\n        }\\n        System.out.println(\\\"\\\\nThe  matrix is :\\\\n\\\");\\n        for(i=0; i<r1; i++)\\n        {\\n            for(j=0; j<c1 ; j++)\\n                System.out.println(arr1[i][j]+\\\"\\\\t\\\");\\n                System.out.println(\\\"\\\\n\\\");\\n        }\\n        System.out.println(\\\"Enter the numbers of two rows to be exchanged \\\\n\\\");\\n        a=z.nextInt();\\n        b=z.nextInt();\\n        for (i = 0; i < r1; ++i)\\n        {\\n            c = arr1[a - 1][i];\\n            arr1[a - 1][i] = arr1[b - 1][i];\\n            arr1[b - 1][i] = c;\\n        }\\n        System.out.println(\\\"The matrix after interchanging the two rows(in the original matrix) \\\\n\\\");\\n        for (i = 0; i < r1; ++i)\\n        {\\n            for (j = 0; j < r1; ++j)\\n            {\\n                System.out.println(\\\" \\\"+ arr1[i][j]+\\\"\\\\t\\\");\\n            }\\n            System.out.println(\\\"\\\\n\\\");\\n        }\\n        System.out.println(\\\"Enter the numbers of two columns to be exchanged \\\\n\\\");\\n        p=z.nextInt();\\n        q=z.nextInt();\\n        for (i = 0; i < c1; ++i)\\n        {\\n            r = arr2[i][p - 1];\\n            arr2[i][p - 1] = arr2[i][q - 1];\\n            arr2[i][q - 1] = r;\\n        }\\n        System.out.println(\\\"The matrix after interchanging the two columns(in the original matrix)\\\\n \\\");\\n        for (i = 0; i < c1; ++i)\\n        {\\n            for (j = 0; j < c1; ++j)\\n            {\\n                System.out.println(\\\"  \\\"+ arr2[i][j]+\\\"\\\\t\\\");\\n            }\\n            System.out.println(\\\"\\\\n\\\");\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input Rows and Columns of the matrix :\\n3 3\\nInput elements in the matrix :\\nelement -0 0 : 1\\nelement -0 1 : 2\\nelement -0 2 : 3\\nelement -1 0 : 4\\nelement -1 1 : 5\\nelement -1 2 : 6\\nelement -2 0 : 7\\nelement -2 1 : 8\\nelement -2 2 : 9\\n\\nThe matrix is :\\n1 2 3\\n4 5 6\\n7 8 9\\nEnter the numbers of two rows to be exchanged\\n2\\n2\\nThe matrix after interchanging the two rows(in the original matrix)\\n1 2 3\\n4 5 6\\n7 8 9\\nEnter the numbers of two columns to be exchanged\\n3\\n3\\nThe matrix after interchanging the two columns(in the original matrix)\\n1 2 3\\n4 5 6\\n7 8 9\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to enter 3×3 matrix and print it.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`25. Write a C program to enter 3×3 matrix and print it.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to enter 3×3 matrix and print it.\n#include <stdio.h>\nvoid main()\n{\n  int arr[3][3],i,j;\n  printf(\"Input elements in the matrix :\\\\n\");\n  for(i=0;i<3;i++)\n  {\n      for(j=0;j<3;j++)\n      {\n          printf(\"element - [%d],[%d] : \",i,j);\n          scanf(\"%d\",&arr[i][j]);\n      }\n  }\n printf(\"\\\\nThe matrix is : \\\\n\");\n  for(i=0;i<3;i++)\n  {\n      printf(\"\\\\n\");\n      for(j=0;j<3;j++)\n           printf(\"%d\\\\t\",arr[i][j]);\n  }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input Rows and Columns of the matrix :\n3 3\nInput elements in the matrix :\nelement -0 0 : 1\nelement -0 1 : 2\nelement -0 2 : 3\nelement -1 0 : 4\nelement -1 1 : 5\nelement -1 2 : 6\nelement -2 0 : 7\nelement -2 1 : 8\nelement -2 2 : 9\n\nThe matrix is :\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two rows to be exchanged\n2\n2\nThe matrix after interchanging the two rows(in the original matrix)\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two columns to be exchanged\n3\n3\nThe matrix after interchanging the two columns(in the original matrix)\n1 2 3\n4 5 6\n7 8 9\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`25. Write a C++ program to enter 3×3 matrix and print it.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to enter 3×3 matrix and print it.\n\n#include <iostream>\nusing namespace std;\nint main()\n{\n    int arr1[50][50], arr2[50][50],i,j,a,b,c,p,q,t,r1,c1,r;\n    cout<<\"Input Rows and Columns of the  matrix :\\\\n\";\n    cin>>r1>>c1;\n    cout<<\"\\\\nInput elements in the  matrix :\\\\n\";\n    for(i=0; i<r1; i++)\n    {\n        for(j=0; j<c1; j++)\n        {\n            cout<<\"element -\"<<i<<\" \"<<j<<\" : \";\n            cin>>arr1[i][j];\n            arr2[i][j] = arr1[i][j];\n        }\n    }\n    cout<<\"\\\\nThe  matrix is :\\\\n\";\n    for(i=0; i<r1; i++)\n    {\n        for(j=0; j<c1 ; j++)\n            cout<<arr1[i][j]<<\"\\\\t\";\n        cout<<\"\\\\n\";\n    }\n    cout<<\"Enter the numbers of two rows to be exchanged \\\\n\";\n    cin>>a>>b;\n    for (i = 0; i < r1; ++i)\n    {\n        c = arr1[a - 1][i];\n        arr1[a - 1][i] = arr1[b - 1][i];\n        arr1[b - 1][i] = c;\n    }\n    cout<<\"The matrix after interchanging the two rows(in the original matrix) \\\\n\";\n    for (i = 0; i < r1; ++i)\n    {\n        for (j = 0; j < r1; ++j)\n        {\n            cout<<\" \"<< arr1[i][j]<<\"\\\\t\";\n        }\n        cout<<\"\\\\n\";\n    }\n    cout<<\"Enter the numbers of two columns to be exchanged \\\\n\";\n    cin>>p>>q;\n    for (i = 0; i < c1; ++i)\n    {\n        r = arr2[i][p - 1];\n        arr2[i][p - 1] = arr2[i][q - 1];\n        arr2[i][q - 1] = r;\n    }\n    cout<<\"The matrix after interchanging the two columns(in the original matrix)\\\\n \";\n    for (i = 0; i < c1; ++i)\n    {\n        for (j = 0; j < c1; ++j)\n        {\n            cout<<\"  \"<< arr2[i][j]<<\"\\\\t\";\n        }\n        cout<<\"\\\\n\";\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input Rows and Columns of the matrix :\n3 3\nInput elements in the matrix :\nelement -0 0 : 1\nelement -0 1 : 2\nelement -0 2 : 3\nelement -1 0 : 4\nelement -1 1 : 5\nelement -1 2 : 6\nelement -2 0 : 7\nelement -2 1 : 8\nelement -2 2 : 9\n\nThe matrix is :\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two rows to be exchanged\n2\n2\nThe matrix after interchanging the two rows(in the original matrix)\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two columns to be exchanged\n3\n3\nThe matrix after interchanging the two columns(in the original matrix)\n1 2 3\n4 5 6\n7 8 9\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`25. Write a Java program to enter 3×3 matrix and print it.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to enter 3×3 matrix and print it.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        int arr1[][]=new int [50][50], arr2[][]=new int [50][50],i,j,a,b,c,p,q,t,r1,c1,r;\n        System.out.println(\"Input Rows and Columns of the  matrix :\\\\n\");\n        r1=z.nextInt();\n        c1=z.nextInt();\n        System.out.println(\"\\\\nInput elements in the  matrix :\\\\n\");\n        for(i=0; i<r1; i++)\n        {\n            for(j=0; j<c1; j++)\n            {\n                System.out.println(\"element -\"+i+\" \"+j+\" : \");\n                arr1[i][j]=z.nextInt();\n                arr2[i][j] = arr1[i][j];\n            }\n        }\n        System.out.println(\"\\\\nThe  matrix is :\\\\n\");\n        for(i=0; i<r1; i++)\n        {\n            for(j=0; j<c1 ; j++)\n                System.out.println(arr1[i][j]+\"\\\\t\");\n                System.out.println(\"\\\\n\");\n        }\n        System.out.println(\"Enter the numbers of two rows to be exchanged \\\\n\");\n        a=z.nextInt();\n        b=z.nextInt();\n        for (i = 0; i < r1; ++i)\n        {\n            c = arr1[a - 1][i];\n            arr1[a - 1][i] = arr1[b - 1][i];\n            arr1[b - 1][i] = c;\n        }\n        System.out.println(\"The matrix after interchanging the two rows(in the original matrix) \\\\n\");\n        for (i = 0; i < r1; ++i)\n        {\n            for (j = 0; j < r1; ++j)\n            {\n                System.out.println(\" \"+ arr1[i][j]+\"\\\\t\");\n            }\n            System.out.println(\"\\\\n\");\n        }\n        System.out.println(\"Enter the numbers of two columns to be exchanged \\\\n\");\n        p=z.nextInt();\n        q=z.nextInt();\n        for (i = 0; i < c1; ++i)\n        {\n            r = arr2[i][p - 1];\n            arr2[i][p - 1] = arr2[i][q - 1];\n            arr2[i][q - 1] = r;\n        }\n        System.out.println(\"The matrix after interchanging the two columns(in the original matrix)\\\\n \");\n        for (i = 0; i < c1; ++i)\n        {\n            for (j = 0; j < c1; ++j)\n            {\n                System.out.println(\"  \"+ arr2[i][j]+\"\\\\t\");\n            }\n            System.out.println(\"\\\\n\");\n        }\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input Rows and Columns of the matrix :\n3 3\nInput elements in the matrix :\nelement -0 0 : 1\nelement -0 1 : 2\nelement -0 2 : 3\nelement -1 0 : 4\nelement -1 1 : 5\nelement -1 2 : 6\nelement -2 0 : 7\nelement -2 1 : 8\nelement -2 2 : 9\n\nThe matrix is :\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two rows to be exchanged\n2\n2\nThe matrix after interchanging the two rows(in the original matrix)\n1 2 3\n4 5 6\n7 8 9\nEnter the numbers of two columns to be exchanged\n3\n3\nThe matrix after interchanging the two columns(in the original matrix)\n1 2 3\n4 5 6\n7 8 9\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}