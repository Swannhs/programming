{"expireTime":9007200883718621000,"key":"gatsby-plugin-mdx-entire-payload-d8b9bd160a7c277e0e340af226d571bf--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4. Write a C program to print individual characters of string in reverse order.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":84,"offset":106},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":84,"offset":106},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to print individual characters of string in reverse order.\n#include <stdio.h>\nint main()\n{\n  char str[50];\n  int i,j=0;\n  printf(\"enter string \");\n  gets(str);\n  for(i=0 ;str[i] !='\\0'; i++)\n  j++;\n  for(i=j-1;i>=0;i--)\n    printf(\"%c \",str[i]);\n}","position":{"start":{"line":4,"column":1,"offset":108},"end":{"line":18,"column":4,"offset":398},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":19,"column":5,"offset":404},"end":{"line":19,"column":11,"offset":410},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":400},"end":{"line":19,"column":11,"offset":410},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter string hello\no l l e h","position":{"start":{"line":20,"column":1,"offset":412},"end":{"line":23,"column":4,"offset":451},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":24,"column":4,"offset":456},"end":{"line":24,"column":22,"offset":474},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":453},"end":{"line":24,"column":22,"offset":474},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4. Write a C++ program to print individual characters of string in reverse order.","position":{"start":{"line":25,"column":5,"offset":480},"end":{"line":25,"column":86,"offset":561},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":476},"end":{"line":25,"column":86,"offset":561},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to print individual characters of string in reverse order.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n  char str[50];\n  int i,j=0;\n  cout << \"enter string \";\n  gets(str);\n  for(i=0 ;str[i] !='\\0'; i++)\n  j++;\n  for(i=j-1;i>=0;i--)\n    cout << \" \" << str[i];\n}","position":{"start":{"line":26,"column":1,"offset":563},"end":{"line":42,"column":4,"offset":882},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":43,"column":5,"offset":888},"end":{"line":43,"column":11,"offset":894},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":884},"end":{"line":43,"column":11,"offset":894},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter string hello\no l l e h","position":{"start":{"line":44,"column":1,"offset":896},"end":{"line":47,"column":4,"offset":935},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":49,"column":4,"offset":942},"end":{"line":49,"column":23,"offset":961},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":939},"end":{"line":49,"column":23,"offset":961},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4. Write a Java program to print individual characters of string in reverse order.","position":{"start":{"line":50,"column":5,"offset":967},"end":{"line":50,"column":87,"offset":1049},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":963},"end":{"line":50,"column":87,"offset":1049},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to print individual characters of string in reverse order.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z=new Scanner(System.in);\n          System.out.println(\"Enter a string\");\n          int i, j;\n          String str;\n          str = z.nextLine();\n          for(i=str.length() - 1; i >= 0; i--){\n            System.out.printf(\" \" + str.charAt(i));\n          }\n      }\n}","position":{"start":{"line":51,"column":1,"offset":1051},"end":{"line":66,"column":4,"offset":1538},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":67,"column":5,"offset":1544},"end":{"line":67,"column":11,"offset":1550},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1540},"end":{"line":67,"column":11,"offset":1550},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter string hello\no l l e h","position":{"start":{"line":68,"column":1,"offset":1552},"end":{"line":71,"column":4,"offset":1591},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to print individual characters of string in reverse order.\",\"category\":\"String Index\",\"tags\":[\"string\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":74,"column":1,"offset":1595},"end":{"line":74,"column":228,"offset":1822},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":74,"column":228,"offset":1822}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print individual characters of string in reverse order.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"4. Write a C program to print individual characters of string in reverse order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to print individual characters of string in reverse order.\\n#include <stdio.h>\\nint main()\\n{\\n  char str[50];\\n  int i,j=0;\\n  printf(\\\"enter string \\\");\\n  gets(str);\\n  for(i=0 ;str[i] !='\\\\0'; i++)\\n  j++;\\n  for(i=j-1;i>=0;i--)\\n    printf(\\\"%c \\\",str[i]);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter string hello\\no l l e h\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"4. Write a C++ program to print individual characters of string in reverse order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to print individual characters of string in reverse order.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n  char str[50];\\n  int i,j=0;\\n  cout << \\\"enter string \\\";\\n  gets(str);\\n  for(i=0 ;str[i] !='\\\\0'; i++)\\n  j++;\\n  for(i=j-1;i>=0;i--)\\n    cout << \\\" \\\" << str[i];\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter string hello\\no l l e h\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"4. Write a Java program to print individual characters of string in reverse order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to print individual characters of string in reverse order.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n          Scanner z=new Scanner(System.in);\\n          System.out.println(\\\"Enter a string\\\");\\n          int i, j;\\n          String str;\\n          str = z.nextLine();\\n          for(i=str.length() - 1; i >= 0; i--){\\n            System.out.printf(\\\" \\\" + str.charAt(i));\\n          }\\n      }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter string hello\\no l l e h\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print individual characters of string in reverse order.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`4. Write a C program to print individual characters of string in reverse order.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to print individual characters of string in reverse order.\n#include <stdio.h>\nint main()\n{\n  char str[50];\n  int i,j=0;\n  printf(\"enter string \");\n  gets(str);\n  for(i=0 ;str[i] !='\\\\0'; i++)\n  j++;\n  for(i=j-1;i>=0;i--)\n    printf(\"%c \",str[i]);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter string hello\no l l e h\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`4. Write a C++ program to print individual characters of string in reverse order.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to print individual characters of string in reverse order.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n  char str[50];\n  int i,j=0;\n  cout << \"enter string \";\n  gets(str);\n  for(i=0 ;str[i] !='\\\\0'; i++)\n  j++;\n  for(i=j-1;i>=0;i--)\n    cout << \" \" << str[i];\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter string hello\no l l e h\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`4. Write a Java program to print individual characters of string in reverse order.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to print individual characters of string in reverse order.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z=new Scanner(System.in);\n          System.out.println(\"Enter a string\");\n          int i, j;\n          String str;\n          str = z.nextLine();\n          for(i=str.length() - 1; i >= 0; i--){\n            System.out.printf(\" \" + str.charAt(i));\n          }\n      }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter string hello\no l l e h\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}