{"expireTime":9007200883706346000,"key":"gatsby-plugin-mdx-entire-payload-e75f154eccc9f86d20f3adbf4f96fe70--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"13. Write a C program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":185,"offset":207},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":185,"offset":207},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\n#include<stdio.h>\nstruct player{\n    char name[50];\n    int score;\n};\nvoid input(struct player *a){\n    printf(\"Enter player name : \");\n    fgets(a->name,sizeof(a->name),stdin);\n    printf(\"Enter player's score : \");\n    scanf(\"%d\",&a->score);\n    getchar();\n}\nint main(){\n    struct player *b;\n    struct player k[11];\n    int sum=0;\n    for(int i=0;i<11;i++)\n    {\n        b=&k[i];\n        input(b);\n    }\n     for(int i=0;i<11;i++)\n    {\n        sum+=k[i].score;\n        printf(\"%s -- %d \\n\",k[i].name,k[i].score);\n    }\n    printf(\"Total score : \");\n    printf(\"%d\",sum);\n}","position":{"start":{"line":4,"column":1,"offset":209},"end":{"line":35,"column":4,"offset":1007},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":36,"column":5,"offset":1013},"end":{"line":36,"column":11,"offset":1019},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1009},"end":{"line":36,"column":11,"offset":1019},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter player name : a\nEnter player's score : 19\nEnter player name : b\nEnter player's score : 21\nEnter player name : c\nEnter player's score : 23\nEnter player name : d\nEnter player's score : 40\nEnter player name : e\nEnter player's score : 22\nEnter player name : f\nEnter player's score : 28\nEnter player name : g\nEnter player's score : 0\nEnter player name : 0\nEnter player's score : 0\nEnter player name : R\nEnter player's score : 0\nEnter player name : t\nEnter player's score : 0\nEnter player name : k\nEnter player's score : 0\na-- 19\nb-- 21\nc-- 23\nd-- 40\ne-- 22\nf-- 28\ng-- 0\n0-- 0\nR-- 0\nt-- 0\nk-- 0\nTotal score : 153","position":{"start":{"line":37,"column":1,"offset":1021},"end":{"line":72,"column":4,"offset":1676},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":74,"column":4,"offset":1683},"end":{"line":74,"column":22,"offset":1701},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1680},"end":{"line":74,"column":22,"offset":1701},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"13. Write a C++ program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.","position":{"start":{"line":75,"column":5,"offset":1707},"end":{"line":75,"column":187,"offset":1889},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1703},"end":{"line":75,"column":187,"offset":1889},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nstruct player{\n    char name[50];\n    int score;\n};\nvoid input(struct player *a){\n    cout << \"Enter player name : \";\n    fgets(a->name,sizeof(a->name),stdin);\n    cout << \"Enter player's score : \";\n    scanf(\"%d\",&a->score);\n    getchar();\n}\nint main(){\n    struct player *b;\n    struct player k[11];\n    int sum=0;\n    for(int i=0;i<11;i++)\n    {\n        b=&k[i];\n        input(b);\n    }\n     for(int i=0;i<11;i++)\n    {\n        sum+=k[i].score;\n        cout <<k[i].name << \" -- \" << k[i].score << endl;\n    }\n    cout << \"Total score : \";\n    cout << sum;\n}","position":{"start":{"line":76,"column":1,"offset":1891},"end":{"line":110,"column":4,"offset":2736},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":111,"column":5,"offset":2742},"end":{"line":111,"column":11,"offset":2748},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":2738},"end":{"line":111,"column":11,"offset":2748},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter player name : a\nEnter player's score : 19\nEnter player name : b\nEnter player's score : 21\nEnter player name : c\nEnter player's score : 23\nEnter player name : d\nEnter player's score : 40\nEnter player name : e\nEnter player's score : 22\nEnter player name : f\nEnter player's score : 28\nEnter player name : g\nEnter player's score : 0\nEnter player name : 0\nEnter player's score : 0\nEnter player name : R\nEnter player's score : 0\nEnter player name : t\nEnter player's score : 0\nEnter player name : k\nEnter player's score : 0\na-- 19\nb-- 21\nc-- 23\nd-- 40\ne-- 22\nf-- 28\ng-- 0\n0-- 0\nR-- 0\nt-- 0\nk-- 0\nTotal score : 153","position":{"start":{"line":112,"column":1,"offset":2750},"end":{"line":147,"column":4,"offset":3405},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\",\"category\":\"Structure And Union Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":150,"column":1,"offset":3409},"end":{"line":150,"column":364,"offset":3772},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":150,"column":364,"offset":3772}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"13. Write a C program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\\n#include<stdio.h>\\nstruct player{\\n    char name[50];\\n    int score;\\n};\\nvoid input(struct player *a){\\n    printf(\\\"Enter player name : \\\");\\n    fgets(a->name,sizeof(a->name),stdin);\\n    printf(\\\"Enter player's score : \\\");\\n    scanf(\\\"%d\\\",&a->score);\\n    getchar();\\n}\\nint main(){\\n    struct player *b;\\n    struct player k[11];\\n    int sum=0;\\n    for(int i=0;i<11;i++)\\n    {\\n        b=&k[i];\\n        input(b);\\n    }\\n     for(int i=0;i<11;i++)\\n    {\\n        sum+=k[i].score;\\n        printf(\\\"%s -- %d \\\\n\\\",k[i].name,k[i].score);\\n    }\\n    printf(\\\"Total score : \\\");\\n    printf(\\\"%d\\\",sum);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter player name : a\\nEnter player's score : 19\\nEnter player name : b\\nEnter player's score : 21\\nEnter player name : c\\nEnter player's score : 23\\nEnter player name : d\\nEnter player's score : 40\\nEnter player name : e\\nEnter player's score : 22\\nEnter player name : f\\nEnter player's score : 28\\nEnter player name : g\\nEnter player's score : 0\\nEnter player name : 0\\nEnter player's score : 0\\nEnter player name : R\\nEnter player's score : 0\\nEnter player name : t\\nEnter player's score : 0\\nEnter player name : k\\nEnter player's score : 0\\na-- 19\\nb-- 21\\nc-- 23\\nd-- 40\\ne-- 22\\nf-- 28\\ng-- 0\\n0-- 0\\nR-- 0\\nt-- 0\\nk-- 0\\nTotal score : 153\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"13. Write a C++ program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\\n\\n#include<iostream>\\n#include <string.h>\\nusing namespace std;\\nstruct player{\\n    char name[50];\\n    int score;\\n};\\nvoid input(struct player *a){\\n    cout << \\\"Enter player name : \\\";\\n    fgets(a->name,sizeof(a->name),stdin);\\n    cout << \\\"Enter player's score : \\\";\\n    scanf(\\\"%d\\\",&a->score);\\n    getchar();\\n}\\nint main(){\\n    struct player *b;\\n    struct player k[11];\\n    int sum=0;\\n    for(int i=0;i<11;i++)\\n    {\\n        b=&k[i];\\n        input(b);\\n    }\\n     for(int i=0;i<11;i++)\\n    {\\n        sum+=k[i].score;\\n        cout <<k[i].name << \\\" -- \\\" << k[i].score << endl;\\n    }\\n    cout << \\\"Total score : \\\";\\n    cout << sum;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter player name : a\\nEnter player's score : 19\\nEnter player name : b\\nEnter player's score : 21\\nEnter player name : c\\nEnter player's score : 23\\nEnter player name : d\\nEnter player's score : 40\\nEnter player name : e\\nEnter player's score : 22\\nEnter player name : f\\nEnter player's score : 28\\nEnter player name : g\\nEnter player's score : 0\\nEnter player name : 0\\nEnter player's score : 0\\nEnter player name : R\\nEnter player's score : 0\\nEnter player name : t\\nEnter player's score : 0\\nEnter player name : k\\nEnter player's score : 0\\na-- 19\\nb-- 21\\nc-- 23\\nd-- 40\\ne-- 22\\nf-- 28\\ng-- 0\\n0-- 0\\nR-- 0\\nt-- 0\\nk-- 0\\nTotal score : 153\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`13. Write a C program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\n#include<stdio.h>\nstruct player{\n    char name[50];\n    int score;\n};\nvoid input(struct player *a){\n    printf(\"Enter player name : \");\n    fgets(a->name,sizeof(a->name),stdin);\n    printf(\"Enter player's score : \");\n    scanf(\"%d\",&a->score);\n    getchar();\n}\nint main(){\n    struct player *b;\n    struct player k[11];\n    int sum=0;\n    for(int i=0;i<11;i++)\n    {\n        b=&k[i];\n        input(b);\n    }\n     for(int i=0;i<11;i++)\n    {\n        sum+=k[i].score;\n        printf(\"%s -- %d \\\\n\",k[i].name,k[i].score);\n    }\n    printf(\"Total score : \");\n    printf(\"%d\",sum);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter player name : a\nEnter player's score : 19\nEnter player name : b\nEnter player's score : 21\nEnter player name : c\nEnter player's score : 23\nEnter player name : d\nEnter player's score : 40\nEnter player name : e\nEnter player's score : 22\nEnter player name : f\nEnter player's score : 28\nEnter player name : g\nEnter player's score : 0\nEnter player name : 0\nEnter player's score : 0\nEnter player name : R\nEnter player's score : 0\nEnter player name : t\nEnter player's score : 0\nEnter player name : k\nEnter player's score : 0\na-- 19\nb-- 21\nc-- 23\nd-- 40\ne-- 22\nf-- 28\ng-- 0\n0-- 0\nR-- 0\nt-- 0\nk-- 0\nTotal score : 153\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`13. Write a C++ program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to accept batting information of cricket team using structure. It contains player name and runs scored by player. Calculate total runs scored by cricket team.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nstruct player{\n    char name[50];\n    int score;\n};\nvoid input(struct player *a){\n    cout << \"Enter player name : \";\n    fgets(a->name,sizeof(a->name),stdin);\n    cout << \"Enter player's score : \";\n    scanf(\"%d\",&a->score);\n    getchar();\n}\nint main(){\n    struct player *b;\n    struct player k[11];\n    int sum=0;\n    for(int i=0;i<11;i++)\n    {\n        b=&k[i];\n        input(b);\n    }\n     for(int i=0;i<11;i++)\n    {\n        sum+=k[i].score;\n        cout <<k[i].name << \" -- \" << k[i].score << endl;\n    }\n    cout << \"Total score : \";\n    cout << sum;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter player name : a\nEnter player's score : 19\nEnter player name : b\nEnter player's score : 21\nEnter player name : c\nEnter player's score : 23\nEnter player name : d\nEnter player's score : 40\nEnter player name : e\nEnter player's score : 22\nEnter player name : f\nEnter player's score : 28\nEnter player name : g\nEnter player's score : 0\nEnter player name : 0\nEnter player's score : 0\nEnter player name : R\nEnter player's score : 0\nEnter player name : t\nEnter player's score : 0\nEnter player name : k\nEnter player's score : 0\na-- 19\nb-- 21\nc-- 23\nd-- 40\ne-- 22\nf-- 28\ng-- 0\n0-- 0\nR-- 0\nt-- 0\nk-- 0\nTotal score : 153\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}