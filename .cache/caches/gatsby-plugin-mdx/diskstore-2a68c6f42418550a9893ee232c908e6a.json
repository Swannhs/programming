{"expireTime":9007200883718621000,"key":"gatsby-plugin-mdx-entire-payload-67ee37c7af3eb69d3a4c345eb1c82711--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"26. Write a C program to find first occurrence of a word in a given string.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":80,"offset":102},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":80,"offset":102},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to find first occurrence of a word in a given string.\n#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char str[50], word[50];\n    int i, index, found = 0;\n    printf(\"Enter any string: \");\n    gets(str);\n    printf(\"Enter word to  search: \");\n    gets(word);\n    index = 0;\n    while(str[index] != '\\0')\n    {\n        if(str[index] == word[0])\n        {\n            i=0;\n            found = 1;\n            while(word[i] != '\\0')\n            {\n                if(str[index + i] != word[i])\n                {\n                    found = 0;\n                    break;\n                }\n\n                i++;\n            }\n        }\n        if(found == 1)\n        {\n            break;\n        }\n\n        index++;\n    }\n    if(found == 1)\n    {\n        printf(\"\\n'%s' is found at index %d.\", word, index);\n    }\n    else\n    {\n        printf(\"\\n'%s' is not found.\", word);\n    }\n\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":104},"end":{"line":53,"column":4,"offset":1081},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":54,"column":5,"offset":1087},"end":{"line":54,"column":11,"offset":1093},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1083},"end":{"line":54,"column":11,"offset":1093},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter any string: Hello how are you\nEnter word to  search: you\n\n'you' is found at index 14.","position":{"start":{"line":55,"column":1,"offset":1095},"end":{"line":60,"column":4,"offset":1199},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":61,"column":4,"offset":1204},"end":{"line":61,"column":22,"offset":1222},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1201},"end":{"line":61,"column":22,"offset":1222},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"26. Write a C++ program to find first occurrence of a word in a given string.","position":{"start":{"line":62,"column":5,"offset":1228},"end":{"line":62,"column":82,"offset":1305},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1224},"end":{"line":62,"column":82,"offset":1305},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to find first occurrence of a word in a given string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char str[50], word[50];\n    int i, index, found = 0;\n    cout << \"Enter any string: \";\n    cin >> str;\n    cout << \"Enter word to  search: \";\n    cin >> word;\n    index = 0;\n    while(str[index] != '\\0')\n    {\n        if(str[index] == word[0])\n        {\n            i=0;\n            found = 1;\n            while(word[i] != '\\0')\n            {\n                if(str[index + i] != word[i])\n                {\n                    found = 0;\n                    break;\n                }\n                i++;\n            }\n        }\n        if(found == 1)\n        {\n            break;\n        }\n\n        index++;\n    }\n    if(found == 1)\n    {\n        cout << \"\\n\" << word << \" is found at index \" << index;\n    }\n    else\n    {\n        cout << \"\\n\" << word << \" is not found.\";\n    }\n\n    return 0;\n}","position":{"start":{"line":63,"column":1,"offset":1307},"end":{"line":112,"column":4,"offset":2316},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":113,"column":5,"offset":2322},"end":{"line":113,"column":11,"offset":2328},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":2318},"end":{"line":113,"column":11,"offset":2328},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter any string: Hello how are you\nEnter word to  search: you\n\n'you' is found at index 14.","position":{"start":{"line":114,"column":1,"offset":2330},"end":{"line":119,"column":4,"offset":2434},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":121,"column":4,"offset":2441},"end":{"line":121,"column":23,"offset":2460},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":2438},"end":{"line":121,"column":23,"offset":2460},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"26. Write a Java program to find first occurrence of a word in a given string.","position":{"start":{"line":122,"column":5,"offset":2466},"end":{"line":122,"column":83,"offset":2544},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":2462},"end":{"line":122,"column":83,"offset":2544},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to find first occurrence of a word in a given string.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        char str[50], word[50];\n        int i, index, found = 0;\n        System.out.println(\"Enter any string: \");\n        str = z.nextLine();\n        System.out.println(\"Enter word to search: \");\n        word = z.nextLine();\n        index = 0;\n        while(str[index] != '\\0')\n        {\n            if(str[index] == word[0])\n            {\n                i=0;\n                found = 1;\n                while(word[i] != '\\0')\n                {\n                    if(str[index + i] != word[i])\n                    {\n                        found = 0;\n                        break;\n                    }\n                    i++;\n                }\n            }\n            if(found == 1)\n            {\n                break;\n            }\n            index++;\n        }\n        if(found == 1)\n        {\n            System.out.println(word + \" is found at index \"+ index);\n        }\n        else\n        {\n            System.out.println(word + \" is not found.\");\n        }\n    return 0;\n    }\n}","position":{"start":{"line":123,"column":1,"offset":2546},"end":{"line":169,"column":4,"offset":3811},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":170,"column":5,"offset":3817},"end":{"line":170,"column":11,"offset":3823},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":3813},"end":{"line":170,"column":11,"offset":3823},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter any string: Hello how are you\nEnter word to  search: you\n\n'you' is found at index 14.","position":{"start":{"line":171,"column":1,"offset":3825},"end":{"line":176,"column":4,"offset":3929},"indent":[1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to find first occurrence of a word in a given string.\",\"category\":\"String Index\",\"tags\":[\"string\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":179,"column":1,"offset":3933},"end":{"line":179,"column":223,"offset":4155},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":179,"column":223,"offset":4155}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find first occurrence of a word in a given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"26. Write a C program to find first occurrence of a word in a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to find first occurrence of a word in a given string.\\n#include <stdio.h>\\n#include <string.h>\\n\\nint main()\\n{\\n    char str[50], word[50];\\n    int i, index, found = 0;\\n    printf(\\\"Enter any string: \\\");\\n    gets(str);\\n    printf(\\\"Enter word to  search: \\\");\\n    gets(word);\\n    index = 0;\\n    while(str[index] != '\\\\0')\\n    {\\n        if(str[index] == word[0])\\n        {\\n            i=0;\\n            found = 1;\\n            while(word[i] != '\\\\0')\\n            {\\n                if(str[index + i] != word[i])\\n                {\\n                    found = 0;\\n                    break;\\n                }\\n\\n                i++;\\n            }\\n        }\\n        if(found == 1)\\n        {\\n            break;\\n        }\\n\\n        index++;\\n    }\\n    if(found == 1)\\n    {\\n        printf(\\\"\\\\n'%s' is found at index %d.\\\", word, index);\\n    }\\n    else\\n    {\\n        printf(\\\"\\\\n'%s' is not found.\\\", word);\\n    }\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter any string: Hello how are you\\nEnter word to  search: you\\n\\n'you' is found at index 14.\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"26. Write a C++ program to find first occurrence of a word in a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find first occurrence of a word in a given string.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint main()\\n{\\n    char str[50], word[50];\\n    int i, index, found = 0;\\n    cout << \\\"Enter any string: \\\";\\n    cin >> str;\\n    cout << \\\"Enter word to  search: \\\";\\n    cin >> word;\\n    index = 0;\\n    while(str[index] != '\\\\0')\\n    {\\n        if(str[index] == word[0])\\n        {\\n            i=0;\\n            found = 1;\\n            while(word[i] != '\\\\0')\\n            {\\n                if(str[index + i] != word[i])\\n                {\\n                    found = 0;\\n                    break;\\n                }\\n                i++;\\n            }\\n        }\\n        if(found == 1)\\n        {\\n            break;\\n        }\\n\\n        index++;\\n    }\\n    if(found == 1)\\n    {\\n        cout << \\\"\\\\n\\\" << word << \\\" is found at index \\\" << index;\\n    }\\n    else\\n    {\\n        cout << \\\"\\\\n\\\" << word << \\\" is not found.\\\";\\n    }\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter any string: Hello how are you\\nEnter word to  search: you\\n\\n'you' is found at index 14.\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"26. Write a Java program to find first occurrence of a word in a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to find first occurrence of a word in a given string.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z=new Scanner(System.in);\\n        char str[50], word[50];\\n        int i, index, found = 0;\\n        System.out.println(\\\"Enter any string: \\\");\\n        str = z.nextLine();\\n        System.out.println(\\\"Enter word to search: \\\");\\n        word = z.nextLine();\\n        index = 0;\\n        while(str[index] != '\\\\0')\\n        {\\n            if(str[index] == word[0])\\n            {\\n                i=0;\\n                found = 1;\\n                while(word[i] != '\\\\0')\\n                {\\n                    if(str[index + i] != word[i])\\n                    {\\n                        found = 0;\\n                        break;\\n                    }\\n                    i++;\\n                }\\n            }\\n            if(found == 1)\\n            {\\n                break;\\n            }\\n            index++;\\n        }\\n        if(found == 1)\\n        {\\n            System.out.println(word + \\\" is found at index \\\"+ index);\\n        }\\n        else\\n        {\\n            System.out.println(word + \\\" is not found.\\\");\\n        }\\n    return 0;\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter any string: Hello how are you\\nEnter word to  search: you\\n\\n'you' is found at index 14.\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find first occurrence of a word in a given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`26. Write a C program to find first occurrence of a word in a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to find first occurrence of a word in a given string.\n#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n    char str[50], word[50];\n    int i, index, found = 0;\n    printf(\"Enter any string: \");\n    gets(str);\n    printf(\"Enter word to  search: \");\n    gets(word);\n    index = 0;\n    while(str[index] != '\\\\0')\n    {\n        if(str[index] == word[0])\n        {\n            i=0;\n            found = 1;\n            while(word[i] != '\\\\0')\n            {\n                if(str[index + i] != word[i])\n                {\n                    found = 0;\n                    break;\n                }\n\n                i++;\n            }\n        }\n        if(found == 1)\n        {\n            break;\n        }\n\n        index++;\n    }\n    if(found == 1)\n    {\n        printf(\"\\\\n'%s' is found at index %d.\", word, index);\n    }\n    else\n    {\n        printf(\"\\\\n'%s' is not found.\", word);\n    }\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter any string: Hello how are you\nEnter word to  search: you\n\n'you' is found at index 14.\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`26. Write a C++ program to find first occurrence of a word in a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to find first occurrence of a word in a given string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char str[50], word[50];\n    int i, index, found = 0;\n    cout << \"Enter any string: \";\n    cin >> str;\n    cout << \"Enter word to  search: \";\n    cin >> word;\n    index = 0;\n    while(str[index] != '\\\\0')\n    {\n        if(str[index] == word[0])\n        {\n            i=0;\n            found = 1;\n            while(word[i] != '\\\\0')\n            {\n                if(str[index + i] != word[i])\n                {\n                    found = 0;\n                    break;\n                }\n                i++;\n            }\n        }\n        if(found == 1)\n        {\n            break;\n        }\n\n        index++;\n    }\n    if(found == 1)\n    {\n        cout << \"\\\\n\" << word << \" is found at index \" << index;\n    }\n    else\n    {\n        cout << \"\\\\n\" << word << \" is not found.\";\n    }\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter any string: Hello how are you\nEnter word to  search: you\n\n'you' is found at index 14.\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`26. Write a Java program to find first occurrence of a word in a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to find first occurrence of a word in a given string.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        char str[50], word[50];\n        int i, index, found = 0;\n        System.out.println(\"Enter any string: \");\n        str = z.nextLine();\n        System.out.println(\"Enter word to search: \");\n        word = z.nextLine();\n        index = 0;\n        while(str[index] != '\\\\0')\n        {\n            if(str[index] == word[0])\n            {\n                i=0;\n                found = 1;\n                while(word[i] != '\\\\0')\n                {\n                    if(str[index + i] != word[i])\n                    {\n                        found = 0;\n                        break;\n                    }\n                    i++;\n                }\n            }\n            if(found == 1)\n            {\n                break;\n            }\n            index++;\n        }\n        if(found == 1)\n        {\n            System.out.println(word + \" is found at index \"+ index);\n        }\n        else\n        {\n            System.out.println(word + \" is not found.\");\n        }\n    return 0;\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter any string: Hello how are you\nEnter word to  search: you\n\n'you' is found at index 14.\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}