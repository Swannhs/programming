{"expireTime":9007200883706343000,"key":"gatsby-plugin-mdx-entire-payload-2a63f1a134a17278ded476e17bf30775--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"37. Write a C program to Find the GCD and LCM of Two Integers","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":66,"offset":88},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":66,"offset":88},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to Find the GCD and LCM of Two Integers\n#include<stdio.h>\n\nint findGCD(int a,int b)\n{\n    int gcd=1;\n    for(int i=1;i<=a && i<=b;i++)\n    {\n        if(a%i==0 && b%i==0)\n            gcd=i;\n    }\n    return gcd;\n}\n\nint findLCM(int a,int b)\n{\n    int gcd=findGCD(a,b);\n    int lcm=(a*b)/gcd;\n    return lcm;\n}\n\nint main()\n{\n    int a,b;\n    printf(\"Enter Two numbers: \");\n    scanf(\"%d%d\",&a,&b);\n    int gcd=findGCD(a,b);\n    int lcm=findLCM(a,b);\n\n    printf(\"GCD is %d\\n\",gcd);\n    printf(\"LCM is %d\\n\",lcm);\n\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":90},"end":{"line":39,"column":4,"offset":680},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":40,"column":5,"offset":686},"end":{"line":40,"column":11,"offset":692},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":682},"end":{"line":40,"column":11,"offset":692},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter Two numbers: 5 10\nGCD is 5\nLCM is 10","position":{"start":{"line":41,"column":1,"offset":694},"end":{"line":45,"column":4,"offset":748},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":47,"column":4,"offset":755},"end":{"line":47,"column":22,"offset":773},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":752},"end":{"line":47,"column":22,"offset":773},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"37. Write a C++ program to Find the GCD and LCM of Two Integers","position":{"start":{"line":48,"column":5,"offset":779},"end":{"line":48,"column":68,"offset":842},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":775},"end":{"line":48,"column":68,"offset":842},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to Find the GCD and LCM of Two Integers\n\n#include<iostream>\nusing namespace std;\n\nint findGCD(int a,int b)\n{\n    int gcd=1;\n    for(int i=1;i<=a && i<=b;i++)\n    {\n        if(a%i==0 && b%i==0)\n            gcd=i;\n    }\n    return gcd;\n}\n\nint findLCM(int a,int b)\n{\n    int gcd=findGCD(a,b);\n    int lcm=(a*b)/gcd;\n    return lcm;\n}\n\nint main()\n{\n    int a,b;\n    cout << \"Enter Two numbers: \";\n    cin >> a >> b;\n    int gcd=findGCD(a,b);\n    int lcm=findLCM(a,b);\n\n    cout << \"GCD is \" << gcd << endl;\n    cout << \"LCM is \" << lcm << endl;\n\n    return 0;\n}","position":{"start":{"line":49,"column":1,"offset":844},"end":{"line":86,"column":4,"offset":1469},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":87,"column":5,"offset":1475},"end":{"line":87,"column":11,"offset":1481},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":1471},"end":{"line":87,"column":11,"offset":1481},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter Two numbers: 5 10\nGCD is 5\nLCM is 10","position":{"start":{"line":88,"column":1,"offset":1483},"end":{"line":92,"column":4,"offset":1537},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":94,"column":4,"offset":1544},"end":{"line":94,"column":23,"offset":1563},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":1541},"end":{"line":94,"column":23,"offset":1563},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"37. Write a Java program to Find the GCD and LCM of Two Integers","position":{"start":{"line":95,"column":5,"offset":1569},"end":{"line":95,"column":69,"offset":1633},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":1565},"end":{"line":95,"column":69,"offset":1633},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to Find the GCD and LCM of Two Integers\nimport java.util.Scanner;\npublic class Funycode {\n    static int findGCD(int a,int b)\n    {\n        int gcd=1;\n        for(int i=1;i<=a && i<=b;i++)\n        {\n            if(a%i==0 && b%i==0)\n                gcd=i;\n        }\n        return gcd;\n    }\n    static int findLCM(int a,int b)\n    {\n        int gcd=findGCD(a,b);\n        int lcm=(a*b)/gcd;\n        return lcm;\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int a,b;\n        System.out.println(\"Enter Two numbers: \");\n        a = z.nextInt();\n        b = z.nextInt();\n        int gcd=findGCD(a,b);\n        int lcm=findLCM(a,b);\n        System.out.println(\"GCD is \"+gcd);\n        System.out.println(\"LCM is \"+lcm);\n    }\n}","position":{"start":{"line":96,"column":1,"offset":1635},"end":{"line":129,"column":4,"offset":2478},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":130,"column":5,"offset":2484},"end":{"line":130,"column":11,"offset":2490},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":2480},"end":{"line":130,"column":11,"offset":2490},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter Two numbers: 5 10\nGCD is 5\nLCM is 10","position":{"start":{"line":131,"column":1,"offset":2492},"end":{"line":135,"column":4,"offset":2546},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to Find the GCD and LCM of Two Integers\",\"category\":\"Function Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":138,"column":1,"offset":2550},"end":{"line":138,"column":242,"offset":2791},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":138,"column":242,"offset":2791}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to Find the GCD and LCM of Two Integers\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"37. Write a C program to Find the GCD and LCM of Two Integers\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to Find the GCD and LCM of Two Integers\\n#include<stdio.h>\\n\\nint findGCD(int a,int b)\\n{\\n    int gcd=1;\\n    for(int i=1;i<=a && i<=b;i++)\\n    {\\n        if(a%i==0 && b%i==0)\\n            gcd=i;\\n    }\\n    return gcd;\\n}\\n\\nint findLCM(int a,int b)\\n{\\n    int gcd=findGCD(a,b);\\n    int lcm=(a*b)/gcd;\\n    return lcm;\\n}\\n\\nint main()\\n{\\n    int a,b;\\n    printf(\\\"Enter Two numbers: \\\");\\n    scanf(\\\"%d%d\\\",&a,&b);\\n    int gcd=findGCD(a,b);\\n    int lcm=findLCM(a,b);\\n\\n    printf(\\\"GCD is %d\\\\n\\\",gcd);\\n    printf(\\\"LCM is %d\\\\n\\\",lcm);\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter Two numbers: 5 10\\nGCD is 5\\nLCM is 10\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"37. Write a C++ program to Find the GCD and LCM of Two Integers\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to Find the GCD and LCM of Two Integers\\n\\n#include<iostream>\\nusing namespace std;\\n\\nint findGCD(int a,int b)\\n{\\n    int gcd=1;\\n    for(int i=1;i<=a && i<=b;i++)\\n    {\\n        if(a%i==0 && b%i==0)\\n            gcd=i;\\n    }\\n    return gcd;\\n}\\n\\nint findLCM(int a,int b)\\n{\\n    int gcd=findGCD(a,b);\\n    int lcm=(a*b)/gcd;\\n    return lcm;\\n}\\n\\nint main()\\n{\\n    int a,b;\\n    cout << \\\"Enter Two numbers: \\\";\\n    cin >> a >> b;\\n    int gcd=findGCD(a,b);\\n    int lcm=findLCM(a,b);\\n\\n    cout << \\\"GCD is \\\" << gcd << endl;\\n    cout << \\\"LCM is \\\" << lcm << endl;\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter Two numbers: 5 10\\nGCD is 5\\nLCM is 10\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"37. Write a Java program to Find the GCD and LCM of Two Integers\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to Find the GCD and LCM of Two Integers\\nimport java.util.Scanner;\\npublic class Funycode {\\n    static int findGCD(int a,int b)\\n    {\\n        int gcd=1;\\n        for(int i=1;i<=a && i<=b;i++)\\n        {\\n            if(a%i==0 && b%i==0)\\n                gcd=i;\\n        }\\n        return gcd;\\n    }\\n    static int findLCM(int a,int b)\\n    {\\n        int gcd=findGCD(a,b);\\n        int lcm=(a*b)/gcd;\\n        return lcm;\\n    }\\n\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int a,b;\\n        System.out.println(\\\"Enter Two numbers: \\\");\\n        a = z.nextInt();\\n        b = z.nextInt();\\n        int gcd=findGCD(a,b);\\n        int lcm=findLCM(a,b);\\n        System.out.println(\\\"GCD is \\\"+gcd);\\n        System.out.println(\\\"LCM is \\\"+lcm);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter Two numbers: 5 10\\nGCD is 5\\nLCM is 10\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to Find the GCD and LCM of Two Integers\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`37. Write a C program to Find the GCD and LCM of Two Integers`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to Find the GCD and LCM of Two Integers\n#include<stdio.h>\n\nint findGCD(int a,int b)\n{\n    int gcd=1;\n    for(int i=1;i<=a && i<=b;i++)\n    {\n        if(a%i==0 && b%i==0)\n            gcd=i;\n    }\n    return gcd;\n}\n\nint findLCM(int a,int b)\n{\n    int gcd=findGCD(a,b);\n    int lcm=(a*b)/gcd;\n    return lcm;\n}\n\nint main()\n{\n    int a,b;\n    printf(\"Enter Two numbers: \");\n    scanf(\"%d%d\",&a,&b);\n    int gcd=findGCD(a,b);\n    int lcm=findLCM(a,b);\n\n    printf(\"GCD is %d\\\\n\",gcd);\n    printf(\"LCM is %d\\\\n\",lcm);\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter Two numbers: 5 10\nGCD is 5\nLCM is 10\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`37. Write a C++ program to Find the GCD and LCM of Two Integers`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to Find the GCD and LCM of Two Integers\n\n#include<iostream>\nusing namespace std;\n\nint findGCD(int a,int b)\n{\n    int gcd=1;\n    for(int i=1;i<=a && i<=b;i++)\n    {\n        if(a%i==0 && b%i==0)\n            gcd=i;\n    }\n    return gcd;\n}\n\nint findLCM(int a,int b)\n{\n    int gcd=findGCD(a,b);\n    int lcm=(a*b)/gcd;\n    return lcm;\n}\n\nint main()\n{\n    int a,b;\n    cout << \"Enter Two numbers: \";\n    cin >> a >> b;\n    int gcd=findGCD(a,b);\n    int lcm=findLCM(a,b);\n\n    cout << \"GCD is \" << gcd << endl;\n    cout << \"LCM is \" << lcm << endl;\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter Two numbers: 5 10\nGCD is 5\nLCM is 10\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`37. Write a Java program to Find the GCD and LCM of Two Integers`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to Find the GCD and LCM of Two Integers\nimport java.util.Scanner;\npublic class Funycode {\n    static int findGCD(int a,int b)\n    {\n        int gcd=1;\n        for(int i=1;i<=a && i<=b;i++)\n        {\n            if(a%i==0 && b%i==0)\n                gcd=i;\n        }\n        return gcd;\n    }\n    static int findLCM(int a,int b)\n    {\n        int gcd=findGCD(a,b);\n        int lcm=(a*b)/gcd;\n        return lcm;\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int a,b;\n        System.out.println(\"Enter Two numbers: \");\n        a = z.nextInt();\n        b = z.nextInt();\n        int gcd=findGCD(a,b);\n        int lcm=findLCM(a,b);\n        System.out.println(\"GCD is \"+gcd);\n        System.out.println(\"LCM is \"+lcm);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter Two numbers: 5 10\nGCD is 5\nLCM is 10\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}