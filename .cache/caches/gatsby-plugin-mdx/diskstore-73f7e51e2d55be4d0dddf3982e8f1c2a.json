{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-db5c85409d1f88584b09602bdc313af2--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. Write a C program to demonstrate example of nested structure.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":69,"offset":91},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":69,"offset":91},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to demonstrate example of nested structure.\n#include<stdio.h>\n#include<string.h>\nstruct student{\n    char name[100];\n    int id;\n    int class_;\n    struct subject{\n    float mark;\n    };\n    struct subject bangla,english,math;\n};\nint main(){\n   struct student one;\n   strcpy(one.name, \"Ahosanul Hasan\");\n   one.id=12;\n   one.class_=7;\n   one.bangla.mark=90;\n   printf(\"Name   : %s\\n\",one.name);\n   printf(\"class  : %d\\n\",one.class_);\n   printf(\"id     : %d\\n\",one.id);\n   printf(\"Bangla : %f\\n\",one.bangla.mark);\n}","position":{"start":{"line":4,"column":1,"offset":93},"end":{"line":28,"column":4,"offset":663},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":29,"column":5,"offset":669},"end":{"line":29,"column":11,"offset":675},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":665},"end":{"line":29,"column":11,"offset":675},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Name   : Ahosanul Hasan\nclass  : 7\nid     : 12\nBangla : 90","position":{"start":{"line":30,"column":1,"offset":677},"end":{"line":35,"column":4,"offset":748},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":37,"column":4,"offset":755},"end":{"line":37,"column":22,"offset":773},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":752},"end":{"line":37,"column":22,"offset":773},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. Write a C++ program to demonstrate example of nested structure.","position":{"start":{"line":38,"column":5,"offset":779},"end":{"line":38,"column":71,"offset":845},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":775},"end":{"line":38,"column":71,"offset":845},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to find the demonstrate example of nested structure.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nstruct student{\n    char name[100];\n    int id;\n    int class_;\n    struct subject{\n    float mark;\n    };\n    struct subject bangla,english,math;\n};\nint main(){\n   struct student one;\n   strcpy(one.name, \"Ahosanul Hasan\");\n   one.id=12;\n   one.class_=7;\n   one.bangla.mark=90;\n   cout << \"Name   : \" << one.name << endl;\n   cout << \"class  : \" << one.class_ << endl;\n   cout << \"id     : \" << one.id << endl;\n   cout << \"Bangla : \" << one.bangla.mark;\n}","position":{"start":{"line":39,"column":1,"offset":847},"end":{"line":65,"column":4,"offset":1472},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":66,"column":5,"offset":1478},"end":{"line":66,"column":11,"offset":1484},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1474},"end":{"line":66,"column":11,"offset":1484},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Name   : Ahosanul Hasan\nclass  : 7\nid     : 12\nBangla : 90","position":{"start":{"line":67,"column":1,"offset":1486},"end":{"line":72,"column":4,"offset":1557},"indent":[1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to demonstrate example of nested structure.\",\"category\":\"Structure And Union Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":75,"column":1,"offset":1561},"end":{"line":75,"column":249,"offset":1809},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":75,"column":249,"offset":1809}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to demonstrate example of nested structure.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"3. Write a C program to demonstrate example of nested structure.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to demonstrate example of nested structure.\\n#include<stdio.h>\\n#include<string.h>\\nstruct student{\\n    char name[100];\\n    int id;\\n    int class_;\\n    struct subject{\\n    float mark;\\n    };\\n    struct subject bangla,english,math;\\n};\\nint main(){\\n   struct student one;\\n   strcpy(one.name, \\\"Ahosanul Hasan\\\");\\n   one.id=12;\\n   one.class_=7;\\n   one.bangla.mark=90;\\n   printf(\\\"Name   : %s\\\\n\\\",one.name);\\n   printf(\\\"class  : %d\\\\n\\\",one.class_);\\n   printf(\\\"id     : %d\\\\n\\\",one.id);\\n   printf(\\\"Bangla : %f\\\\n\\\",one.bangla.mark);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Name   : Ahosanul Hasan\\nclass  : 7\\nid     : 12\\nBangla : 90\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"3. Write a C++ program to demonstrate example of nested structure.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find the demonstrate example of nested structure.\\n\\n#include<iostream>\\n#include <string.h>\\nusing namespace std;\\nstruct student{\\n    char name[100];\\n    int id;\\n    int class_;\\n    struct subject{\\n    float mark;\\n    };\\n    struct subject bangla,english,math;\\n};\\nint main(){\\n   struct student one;\\n   strcpy(one.name, \\\"Ahosanul Hasan\\\");\\n   one.id=12;\\n   one.class_=7;\\n   one.bangla.mark=90;\\n   cout << \\\"Name   : \\\" << one.name << endl;\\n   cout << \\\"class  : \\\" << one.class_ << endl;\\n   cout << \\\"id     : \\\" << one.id << endl;\\n   cout << \\\"Bangla : \\\" << one.bangla.mark;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Name   : Ahosanul Hasan\\nclass  : 7\\nid     : 12\\nBangla : 90\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to demonstrate example of nested structure.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`3. Write a C program to demonstrate example of nested structure.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to demonstrate example of nested structure.\n#include<stdio.h>\n#include<string.h>\nstruct student{\n    char name[100];\n    int id;\n    int class_;\n    struct subject{\n    float mark;\n    };\n    struct subject bangla,english,math;\n};\nint main(){\n   struct student one;\n   strcpy(one.name, \"Ahosanul Hasan\");\n   one.id=12;\n   one.class_=7;\n   one.bangla.mark=90;\n   printf(\"Name   : %s\\\\n\",one.name);\n   printf(\"class  : %d\\\\n\",one.class_);\n   printf(\"id     : %d\\\\n\",one.id);\n   printf(\"Bangla : %f\\\\n\",one.bangla.mark);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Name   : Ahosanul Hasan\nclass  : 7\nid     : 12\nBangla : 90\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`3. Write a C++ program to demonstrate example of nested structure.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to find the demonstrate example of nested structure.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nstruct student{\n    char name[100];\n    int id;\n    int class_;\n    struct subject{\n    float mark;\n    };\n    struct subject bangla,english,math;\n};\nint main(){\n   struct student one;\n   strcpy(one.name, \"Ahosanul Hasan\");\n   one.id=12;\n   one.class_=7;\n   one.bangla.mark=90;\n   cout << \"Name   : \" << one.name << endl;\n   cout << \"class  : \" << one.class_ << endl;\n   cout << \"id     : \" << one.id << endl;\n   cout << \"Bangla : \" << one.bangla.mark;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Name   : Ahosanul Hasan\nclass  : 7\nid     : 12\nBangla : 90\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}