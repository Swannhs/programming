{"expireTime":9007200883710394000,"key":"gatsby-plugin-mdx-entire-payload-6e090b453cd795d87a0f7e110044d641--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a C program to store n elements in an array and print the elements using pointer.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":95,"offset":117},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":95,"offset":117},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to store n elements in an array and print the elements using pointer.\n#include <stdio.h>\nvoid main()\n{\n    int a[1000],n,i;\n    int * p = a;\n\n    printf(\"Enter size of array: \");\n    scanf(\"%d\", &n);\n\n    printf(\"Enter elements in array:\\n\");\n    for (i = 0; i < n; i++){\n        scanf(\"%d\", p);        //input the element\n        p++;\n    }\n    p = a;\n    printf(\"Array elements: \");\n    for (i = 0; i < n; i++){\n        printf(\"%d, \", *p);   //print the element\n        p++;\n    }\n}","position":{"start":{"line":4,"column":1,"offset":119},"end":{"line":27,"column":4,"offset":655},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":28,"column":5,"offset":661},"end":{"line":28,"column":11,"offset":667},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":657},"end":{"line":28,"column":11,"offset":667},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter size of array: 3\nEnter elements in array:\n1 2 3\nArray elements: 1, 2, 3,","position":{"start":{"line":29,"column":1,"offset":669},"end":{"line":34,"column":4,"offset":760},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":35,"column":4,"offset":765},"end":{"line":35,"column":22,"offset":783},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":762},"end":{"line":35,"column":22,"offset":783},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a C++ program to store n elements in an array and print the elements using pointer.","position":{"start":{"line":36,"column":5,"offset":789},"end":{"line":36,"column":97,"offset":881},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":785},"end":{"line":36,"column":97,"offset":881},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to store n elements in an array and print the elements using pointer.\n#include <iostream>\nusing namespace std;\n#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int a[1000],n,i;\n    int * p = a;\n\n    cout<<(\"Enter size of array: \");\n    cin>>n;\n\n    cout<<(\"Enter elements in array:\\n\");\n    for (i = 0; i < n; i++){\n        cin>>*p;        //input the element\n        p++;\n    }\n    p = a;\n    cout<<(\"Array elements: \");\n    for (i = 0; i < n; i++){\n        cout<< *p<<\" \";   //print the element\n        p++;\n    }\n}","position":{"start":{"line":37,"column":1,"offset":883},"end":{"line":64,"column":4,"offset":1468},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":65,"column":5,"offset":1474},"end":{"line":65,"column":11,"offset":1480},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1470},"end":{"line":65,"column":11,"offset":1480},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter size of array: 3\nEnter elements in array:\n1 2 3\nArray elements: 1, 2, 3,","position":{"start":{"line":66,"column":1,"offset":1482},"end":{"line":71,"column":4,"offset":1573},"indent":[1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to store n elements in an array and print the elements using pointer.\",\"category\":\"Pointer Program Index\",\"tags\":[\"#c\",\"#c++\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":74,"column":1,"offset":1577},"end":{"line":74,"column":263,"offset":1839},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":74,"column":263,"offset":1839}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to store n elements in an array and print the elements using pointer.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"7. Write a C program to store n elements in an array and print the elements using pointer.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to store n elements in an array and print the elements using pointer.\\n#include <stdio.h>\\nvoid main()\\n{\\n    int a[1000],n,i;\\n    int * p = a;\\n\\n    printf(\\\"Enter size of array: \\\");\\n    scanf(\\\"%d\\\", &n);\\n\\n    printf(\\\"Enter elements in array:\\\\n\\\");\\n    for (i = 0; i < n; i++){\\n        scanf(\\\"%d\\\", p);        //input the element\\n        p++;\\n    }\\n    p = a;\\n    printf(\\\"Array elements: \\\");\\n    for (i = 0; i < n; i++){\\n        printf(\\\"%d, \\\", *p);   //print the element\\n        p++;\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter size of array: 3\\nEnter elements in array:\\n1 2 3\\nArray elements: 1, 2, 3,\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"7. Write a C++ program to store n elements in an array and print the elements using pointer.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to store n elements in an array and print the elements using pointer.\\n#include <iostream>\\nusing namespace std;\\n#include <iostream>\\nusing namespace std;\\n\\nint main()\\n{\\n    int a[1000],n,i;\\n    int * p = a;\\n\\n    cout<<(\\\"Enter size of array: \\\");\\n    cin>>n;\\n\\n    cout<<(\\\"Enter elements in array:\\\\n\\\");\\n    for (i = 0; i < n; i++){\\n        cin>>*p;        //input the element\\n        p++;\\n    }\\n    p = a;\\n    cout<<(\\\"Array elements: \\\");\\n    for (i = 0; i < n; i++){\\n        cout<< *p<<\\\" \\\";   //print the element\\n        p++;\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter size of array: 3\\nEnter elements in array:\\n1 2 3\\nArray elements: 1, 2, 3,\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to store n elements in an array and print the elements using pointer.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`7. Write a C program to store n elements in an array and print the elements using pointer.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to store n elements in an array and print the elements using pointer.\n#include <stdio.h>\nvoid main()\n{\n    int a[1000],n,i;\n    int * p = a;\n\n    printf(\"Enter size of array: \");\n    scanf(\"%d\", &n);\n\n    printf(\"Enter elements in array:\\\\n\");\n    for (i = 0; i < n; i++){\n        scanf(\"%d\", p);        //input the element\n        p++;\n    }\n    p = a;\n    printf(\"Array elements: \");\n    for (i = 0; i < n; i++){\n        printf(\"%d, \", *p);   //print the element\n        p++;\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter size of array: 3\nEnter elements in array:\n1 2 3\nArray elements: 1, 2, 3,\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`7. Write a C++ program to store n elements in an array and print the elements using pointer.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to store n elements in an array and print the elements using pointer.\n#include <iostream>\nusing namespace std;\n#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int a[1000],n,i;\n    int * p = a;\n\n    cout<<(\"Enter size of array: \");\n    cin>>n;\n\n    cout<<(\"Enter elements in array:\\\\n\");\n    for (i = 0; i < n; i++){\n        cin>>*p;        //input the element\n        p++;\n    }\n    p = a;\n    cout<<(\"Array elements: \");\n    for (i = 0; i < n; i++){\n        cout<< *p<<\" \";   //print the element\n        p++;\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter size of array: 3\nEnter elements in array:\n1 2 3\nArray elements: 1, 2, 3,\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}