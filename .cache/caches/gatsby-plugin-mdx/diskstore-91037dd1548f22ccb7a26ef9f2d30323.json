{"expireTime":9007200883706342000,"key":"gatsby-plugin-mdx-entire-payload-1802a7e45dc60a232e5a5dc4cbc76b4d--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a C program to check whether a number is a prime number or not using the function.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":96,"offset":118},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":96,"offset":118},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program in C to check whether a number is a prime number or not using the function.\n#include<stdio.h>\n\nint square(int num)\n{\n    return num*num;\n}\n\nint main()\n{\n    int n;\n    printf(\"Enter a number: \");\n    scanf(\"%d\",&n);\n\n    int ans=square(n);\n\n    printf(\"%d\\n\",ans);\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":120},"end":{"line":24,"column":4,"offset":449},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":25,"column":5,"offset":455},"end":{"line":25,"column":11,"offset":461},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":451},"end":{"line":25,"column":11,"offset":461},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a number: 4\n16","position":{"start":{"line":26,"column":1,"offset":463},"end":{"line":29,"column":4,"offset":494},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":31,"column":4,"offset":501},"end":{"line":31,"column":22,"offset":519},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":498},"end":{"line":31,"column":22,"offset":519},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a C++ program to check whether a number is a prime number or not using the function.","position":{"start":{"line":32,"column":5,"offset":525},"end":{"line":32,"column":98,"offset":618},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":521},"end":{"line":32,"column":98,"offset":618},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program in C to check whether a number is a prime number or not using the function.\n\n#include<iostream>\nusing namespace std;\n\nvoid checkPrime(int n)\n{\n    int check=1;\n    for(int i=2;i*i<=n;i++)\n    {\n        if(n%i==0)\n        {\n            check=0;\n            break;\n        }\n    }\n    if(check && n!=1)\n        cout << n << \" is prime\";\n    else\n        cout << n << \" is not prime\";\n}\nint main()\n{\n    int n;\n    cin >> n;\n\n    checkPrime(n);\n    return 0;\n}","position":{"start":{"line":33,"column":1,"offset":620},"end":{"line":63,"column":4,"offset":1138},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":64,"column":5,"offset":1144},"end":{"line":64,"column":11,"offset":1150},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1140},"end":{"line":64,"column":11,"offset":1150},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a number: 4\n16","position":{"start":{"line":65,"column":1,"offset":1152},"end":{"line":68,"column":4,"offset":1183},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":70,"column":4,"offset":1190},"end":{"line":70,"column":23,"offset":1209},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1187},"end":{"line":70,"column":23,"offset":1209},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a Java program to find the square of any number using the function.","position":{"start":{"line":71,"column":5,"offset":1215},"end":{"line":71,"column":81,"offset":1291},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1211},"end":{"line":71,"column":81,"offset":1291},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to show the simple structure of a function.\nimport java.util.Scanner;\npublic class Funycode {\n    static void checkPrime(int n)\n    {\n        int check=1;\n        for(int i=2;i*i<=n;i++)\n        {\n            if(n%i==0)\n            {\n                check=0;\n                break;\n            }\n        }\n        if(check && n!=1)\n            System.out.println( n + \" is prime.\");\n        else\n            System.out.println( n + \" is not prime.\");\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int n;\n        n = z.nextInt();\n        checkPrime(n);\n    }\n}","position":{"start":{"line":72,"column":1,"offset":1293},"end":{"line":100,"column":4,"offset":1971},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":101,"column":5,"offset":1977},"end":{"line":101,"column":11,"offset":1983},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":1973},"end":{"line":101,"column":11,"offset":1983},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a number: 4\n16","position":{"start":{"line":102,"column":1,"offset":1985},"end":{"line":105,"column":4,"offset":2016},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to check whether a number is a prime number or not using the function.\",\"category\":\"Function Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":108,"column":1,"offset":2020},"end":{"line":108,"column":273,"offset":2292},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":108,"column":273,"offset":2292}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether a number is a prime number or not using the function.\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"7. Write a C program to check whether a number is a prime number or not using the function.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program in C to check whether a number is a prime number or not using the function.\\n#include<stdio.h>\\n\\nint square(int num)\\n{\\n    return num*num;\\n}\\n\\nint main()\\n{\\n    int n;\\n    printf(\\\"Enter a number: \\\");\\n    scanf(\\\"%d\\\",&n);\\n\\n    int ans=square(n);\\n\\n    printf(\\\"%d\\\\n\\\",ans);\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a number: 4\\n16\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"7. Write a C++ program to check whether a number is a prime number or not using the function.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program in C to check whether a number is a prime number or not using the function.\\n\\n#include<iostream>\\nusing namespace std;\\n\\nvoid checkPrime(int n)\\n{\\n    int check=1;\\n    for(int i=2;i*i<=n;i++)\\n    {\\n        if(n%i==0)\\n        {\\n            check=0;\\n            break;\\n        }\\n    }\\n    if(check && n!=1)\\n        cout << n << \\\" is prime\\\";\\n    else\\n        cout << n << \\\" is not prime\\\";\\n}\\nint main()\\n{\\n    int n;\\n    cin >> n;\\n\\n    checkPrime(n);\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a number: 4\\n16\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"7. Write a Java program to find the square of any number using the function.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to show the simple structure of a function.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    static void checkPrime(int n)\\n    {\\n        int check=1;\\n        for(int i=2;i*i<=n;i++)\\n        {\\n            if(n%i==0)\\n            {\\n                check=0;\\n                break;\\n            }\\n        }\\n        if(check && n!=1)\\n            System.out.println( n + \\\" is prime.\\\");\\n        else\\n            System.out.println( n + \\\" is not prime.\\\");\\n    }\\n\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int n;\\n        n = z.nextInt();\\n        checkPrime(n);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a number: 4\\n16\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether a number is a prime number or not using the function.\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`7. Write a C program to check whether a number is a prime number or not using the function.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program in C to check whether a number is a prime number or not using the function.\n#include<stdio.h>\n\nint square(int num)\n{\n    return num*num;\n}\n\nint main()\n{\n    int n;\n    printf(\"Enter a number: \");\n    scanf(\"%d\",&n);\n\n    int ans=square(n);\n\n    printf(\"%d\\\\n\",ans);\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a number: 4\n16\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`7. Write a C++ program to check whether a number is a prime number or not using the function.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program in C to check whether a number is a prime number or not using the function.\n\n#include<iostream>\nusing namespace std;\n\nvoid checkPrime(int n)\n{\n    int check=1;\n    for(int i=2;i*i<=n;i++)\n    {\n        if(n%i==0)\n        {\n            check=0;\n            break;\n        }\n    }\n    if(check && n!=1)\n        cout << n << \" is prime\";\n    else\n        cout << n << \" is not prime\";\n}\nint main()\n{\n    int n;\n    cin >> n;\n\n    checkPrime(n);\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a number: 4\n16\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`7. Write a Java program to find the square of any number using the function.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to show the simple structure of a function.\nimport java.util.Scanner;\npublic class Funycode {\n    static void checkPrime(int n)\n    {\n        int check=1;\n        for(int i=2;i*i<=n;i++)\n        {\n            if(n%i==0)\n            {\n                check=0;\n                break;\n            }\n        }\n        if(check && n!=1)\n            System.out.println( n + \" is prime.\");\n        else\n            System.out.println( n + \" is not prime.\");\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int n;\n        n = z.nextInt();\n        checkPrime(n);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a number: 4\n16\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}