{"expireTime":9007200883706342000,"key":"gatsby-plugin-mdx-entire-payload-ae88b25c9178ef87f190790c0809d1e1--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Program-22: Write a C program to convert this temperature into Centigrade degrees.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":87,"offset":109},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":87,"offset":109},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"/*Write a C program to convert this temperature into Centigrade degrees.*/\n#include<stdio.h>\nvoid main()\n{\n    float f,c,d;\n    scanf(\"%f\",&f);\n    d=f-32;\n    c=(d/9)*5;\n    printf(\"Celsius=%f\",c);\n}","position":{"start":{"line":4,"column":1,"offset":111},"end":{"line":15,"column":4,"offset":331},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":16,"column":5,"offset":337},"end":{"line":16,"column":11,"offset":343},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":333},"end":{"line":16,"column":11,"offset":343},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"20\nCelsius:=-6.666667","position":{"start":{"line":17,"column":1,"offset":345},"end":{"line":20,"column":4,"offset":377},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":22,"column":4,"offset":384},"end":{"line":22,"column":22,"offset":402},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":381},"end":{"line":22,"column":22,"offset":402},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Program-22: Write a C++ program to convert this temperature into Centigrade degrees.","position":{"start":{"line":23,"column":5,"offset":408},"end":{"line":23,"column":89,"offset":492},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":404},"end":{"line":23,"column":89,"offset":492},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"/*Write a C++ program to convert this temperature into Centigrade degrees.*/\n#include<iostream>\nusing namespace std;\nint main()\n{\n    float f,c,d;\n    cin>>f;\n    d=f-32;\n    c=(d/9)*5;\n    cout<<\"Celsius=\"<<c;\n    return 0;\n}","position":{"start":{"line":24,"column":1,"offset":494},"end":{"line":37,"column":4,"offset":742},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":38,"column":5,"offset":748},"end":{"line":38,"column":11,"offset":754},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":744},"end":{"line":38,"column":11,"offset":754},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"20\nCelsius:=-6.666667","position":{"start":{"line":39,"column":1,"offset":756},"end":{"line":42,"column":4,"offset":788},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":44,"column":4,"offset":795},"end":{"line":44,"column":23,"offset":814},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":792},"end":{"line":44,"column":23,"offset":814},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Program-22: Write a Java program to convert this temperature into Centigrade degrees.","position":{"start":{"line":45,"column":5,"offset":820},"end":{"line":45,"column":90,"offset":905},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":816},"end":{"line":45,"column":90,"offset":905},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/*Write a java program to convert this temperature into Centigrade degrees.*/\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        float f,c,d;\n        f=z.nextFloat();\n        d=f-32;\n        c=(d/9)*5;\n        System.out.println(\"Celsius:=\"+c);\n\n    }\n}","position":{"start":{"line":46,"column":1,"offset":907},"end":{"line":61,"column":4,"offset":1280},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":62,"column":5,"offset":1286},"end":{"line":62,"column":11,"offset":1292},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1282},"end":{"line":62,"column":11,"offset":1292},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"20\nCelsius:=-6.666667","position":{"start":{"line":63,"column":1,"offset":1294},"end":{"line":66,"column":4,"offset":1326},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to convert this temperature into Centigrade degrees.\",\"category\":\"Basic Declaration & Expression Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":69,"column":1,"offset":1330},"end":{"line":69,"column":269,"offset":1598},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":69,"column":269,"offset":1598}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to convert this temperature into Centigrade degrees.\",\n  \"category\": \"Basic Declaration & Expression Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"Program-22: Write a C program to convert this temperature into Centigrade degrees.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"/*Write a C program to convert this temperature into Centigrade degrees.*/\\n#include<stdio.h>\\nvoid main()\\n{\\n    float f,c,d;\\n    scanf(\\\"%f\\\",&f);\\n    d=f-32;\\n    c=(d/9)*5;\\n    printf(\\\"Celsius=%f\\\",c);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"20\\nCelsius:=-6.666667\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"Program-22: Write a C++ program to convert this temperature into Centigrade degrees.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"/*Write a C++ program to convert this temperature into Centigrade degrees.*/\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    float f,c,d;\\n    cin>>f;\\n    d=f-32;\\n    c=(d/9)*5;\\n    cout<<\\\"Celsius=\\\"<<c;\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"20\\nCelsius:=-6.666667\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"Program-22: Write a Java program to convert this temperature into Centigrade degrees.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"/*Write a java program to convert this temperature into Centigrade degrees.*/\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        float f,c,d;\\n        f=z.nextFloat();\\n        d=f-32;\\n        c=(d/9)*5;\\n        System.out.println(\\\"Celsius:=\\\"+c);\\n\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"20\\nCelsius:=-6.666667\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to convert this temperature into Centigrade degrees.\",\n  \"category\": \"Basic Declaration & Expression Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`Program-22: Write a C program to convert this temperature into Centigrade degrees.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`/*Write a C program to convert this temperature into Centigrade degrees.*/\n#include<stdio.h>\nvoid main()\n{\n    float f,c,d;\n    scanf(\"%f\",&f);\n    d=f-32;\n    c=(d/9)*5;\n    printf(\"Celsius=%f\",c);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`20\nCelsius:=-6.666667\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`Program-22: Write a C++ program to convert this temperature into Centigrade degrees.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`/*Write a C++ program to convert this temperature into Centigrade degrees.*/\n#include<iostream>\nusing namespace std;\nint main()\n{\n    float f,c,d;\n    cin>>f;\n    d=f-32;\n    c=(d/9)*5;\n    cout<<\"Celsius=\"<<c;\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`20\nCelsius:=-6.666667\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`Program-22: Write a Java program to convert this temperature into Centigrade degrees.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/*Write a java program to convert this temperature into Centigrade degrees.*/\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        float f,c,d;\n        f=z.nextFloat();\n        d=f-32;\n        c=(d/9)*5;\n        System.out.println(\"Celsius:=\"+c);\n\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`20\nCelsius:=-6.666667\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}