{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-3625d8c173a80f86085b877799b9b280--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. Write a C program to Print Fibonacci Series using recursion.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":68,"offset":90},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":68,"offset":90},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to Print Fibonacci Series using recursion.\n#include<stdio.h>\nint main(){\n    int n;\n    printf(\"Enter n Number : \");\n    scanf(\"%d\", &n);\n    for(int i=0;i<=n;i++)\n    {\n      int k=febo(i);\n      printf(\" %d\",k);\n    }\n}\nfebo(int n){\n    if(n==0)\n    {\n        return 0;\n    }\n    else if(n==1)\n    {\n        return 1;\n    }\n    else\n    {\n        return febo(n-1)+febo(n-2);\n    }\n}","position":{"start":{"line":4,"column":1,"offset":92},"end":{"line":31,"column":4,"offset":532},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":32,"column":5,"offset":538},"end":{"line":32,"column":11,"offset":544},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":534},"end":{"line":32,"column":11,"offset":544},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter n Number : 10\n 0 1 1 2 3 5 8 13 21 34 55","position":{"start":{"line":33,"column":1,"offset":546},"end":{"line":36,"column":4,"offset":603},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":37,"column":4,"offset":608},"end":{"line":37,"column":22,"offset":626},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":605},"end":{"line":37,"column":22,"offset":626},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. Write a C++ program to Print Fibonacci Series using recursion.","position":{"start":{"line":38,"column":5,"offset":632},"end":{"line":38,"column":70,"offset":697},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":628},"end":{"line":38,"column":70,"offset":697},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to Print Fibonacci Series using recursion.\n\n#include<iostream>\nusing namespace std;\nint main(){\n    int n;\n    cout << \"Enter n Number : \";\n    cin >> n;\n    for(int i=0;i<=n;i++)\n    {\n      int k=febo(i);\n      cout << \" \" << k;\n    }\n}\nfebo(int n){\n    if(n==0)\n    {\n        return 0;\n    }\n    else if(n==1)\n    {\n        return 1;\n    }\n    else\n    {\n        return febo(n-1)+febo(n-2);\n    }\n}","position":{"start":{"line":39,"column":1,"offset":699},"end":{"line":68,"column":4,"offset":1160},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":69,"column":5,"offset":1166},"end":{"line":69,"column":11,"offset":1172},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1162},"end":{"line":69,"column":11,"offset":1172},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter n Number : 10\n 0 1 1 2 3 5 8 13 21 34 55","position":{"start":{"line":70,"column":1,"offset":1174},"end":{"line":73,"column":4,"offset":1231},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":75,"column":4,"offset":1238},"end":{"line":75,"column":23,"offset":1257},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1235},"end":{"line":75,"column":23,"offset":1257},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. Write a Java program to Print Fibonacci Series using recursion.","position":{"start":{"line":76,"column":5,"offset":1263},"end":{"line":76,"column":71,"offset":1329},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1259},"end":{"line":76,"column":71,"offset":1329},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to Print Fibonacci Series using recursion.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z = new Scanner(System.in);\n          int n;\n          System.out.println(\"Enter n Number : \");\n          n = z.nextInt();\n          for(int i=0;i<=n;i++)\n          {\n              int k=febo(i);\n              System.out.println(\" \"+k);\n          }\n    }\n    static int febo(int n){\n          if(n==0)\n          {\n              return 0;\n          }\n          else if(n==1)\n          {\n              return 1;\n          }\n          else\n          {\n              return febo(n-1)+febo(n-2);\n          }\n    }\n\n}","position":{"start":{"line":77,"column":1,"offset":1331},"end":{"line":108,"column":4,"offset":2062},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":109,"column":5,"offset":2068},"end":{"line":109,"column":11,"offset":2074},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":2064},"end":{"line":109,"column":11,"offset":2074},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter n Number : 10\n 0 1 1 2 3 5 8 13 21 34 55","position":{"start":{"line":110,"column":1,"offset":2076},"end":{"line":113,"column":4,"offset":2133},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to Print Fibonacci Series using recursion.\",\"category\":\"Recursion Function Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":116,"column":1,"offset":2137},"end":{"line":116,"column":247,"offset":2383},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":116,"column":247,"offset":2383}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to Print Fibonacci Series using recursion.\",\n  \"category\": \"Recursion Function Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"3. Write a C program to Print Fibonacci Series using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to Print Fibonacci Series using recursion.\\n#include<stdio.h>\\nint main(){\\n    int n;\\n    printf(\\\"Enter n Number : \\\");\\n    scanf(\\\"%d\\\", &n);\\n    for(int i=0;i<=n;i++)\\n    {\\n      int k=febo(i);\\n      printf(\\\" %d\\\",k);\\n    }\\n}\\nfebo(int n){\\n    if(n==0)\\n    {\\n        return 0;\\n    }\\n    else if(n==1)\\n    {\\n        return 1;\\n    }\\n    else\\n    {\\n        return febo(n-1)+febo(n-2);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter n Number : 10\\n 0 1 1 2 3 5 8 13 21 34 55\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"3. Write a C++ program to Print Fibonacci Series using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to Print Fibonacci Series using recursion.\\n\\n#include<iostream>\\nusing namespace std;\\nint main(){\\n    int n;\\n    cout << \\\"Enter n Number : \\\";\\n    cin >> n;\\n    for(int i=0;i<=n;i++)\\n    {\\n      int k=febo(i);\\n      cout << \\\" \\\" << k;\\n    }\\n}\\nfebo(int n){\\n    if(n==0)\\n    {\\n        return 0;\\n    }\\n    else if(n==1)\\n    {\\n        return 1;\\n    }\\n    else\\n    {\\n        return febo(n-1)+febo(n-2);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter n Number : 10\\n 0 1 1 2 3 5 8 13 21 34 55\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"3. Write a Java program to Print Fibonacci Series using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to Print Fibonacci Series using recursion.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n          Scanner z = new Scanner(System.in);\\n          int n;\\n          System.out.println(\\\"Enter n Number : \\\");\\n          n = z.nextInt();\\n          for(int i=0;i<=n;i++)\\n          {\\n              int k=febo(i);\\n              System.out.println(\\\" \\\"+k);\\n          }\\n    }\\n    static int febo(int n){\\n          if(n==0)\\n          {\\n              return 0;\\n          }\\n          else if(n==1)\\n          {\\n              return 1;\\n          }\\n          else\\n          {\\n              return febo(n-1)+febo(n-2);\\n          }\\n    }\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter n Number : 10\\n 0 1 1 2 3 5 8 13 21 34 55\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to Print Fibonacci Series using recursion.\",\n  \"category\": \"Recursion Function Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`3. Write a C program to Print Fibonacci Series using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to Print Fibonacci Series using recursion.\n#include<stdio.h>\nint main(){\n    int n;\n    printf(\"Enter n Number : \");\n    scanf(\"%d\", &n);\n    for(int i=0;i<=n;i++)\n    {\n      int k=febo(i);\n      printf(\" %d\",k);\n    }\n}\nfebo(int n){\n    if(n==0)\n    {\n        return 0;\n    }\n    else if(n==1)\n    {\n        return 1;\n    }\n    else\n    {\n        return febo(n-1)+febo(n-2);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter n Number : 10\n 0 1 1 2 3 5 8 13 21 34 55\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`3. Write a C++ program to Print Fibonacci Series using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to Print Fibonacci Series using recursion.\n\n#include<iostream>\nusing namespace std;\nint main(){\n    int n;\n    cout << \"Enter n Number : \";\n    cin >> n;\n    for(int i=0;i<=n;i++)\n    {\n      int k=febo(i);\n      cout << \" \" << k;\n    }\n}\nfebo(int n){\n    if(n==0)\n    {\n        return 0;\n    }\n    else if(n==1)\n    {\n        return 1;\n    }\n    else\n    {\n        return febo(n-1)+febo(n-2);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter n Number : 10\n 0 1 1 2 3 5 8 13 21 34 55\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`3. Write a Java program to Print Fibonacci Series using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to Print Fibonacci Series using recursion.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z = new Scanner(System.in);\n          int n;\n          System.out.println(\"Enter n Number : \");\n          n = z.nextInt();\n          for(int i=0;i<=n;i++)\n          {\n              int k=febo(i);\n              System.out.println(\" \"+k);\n          }\n    }\n    static int febo(int n){\n          if(n==0)\n          {\n              return 0;\n          }\n          else if(n==1)\n          {\n              return 1;\n          }\n          else\n          {\n              return febo(n-1)+febo(n-2);\n          }\n    }\n\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter n Number : 10\n 0 1 1 2 3 5 8 13 21 34 55\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}