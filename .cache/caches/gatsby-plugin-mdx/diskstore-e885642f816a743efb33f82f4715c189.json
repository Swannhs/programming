{"expireTime":9007200883706341000,"key":"gatsby-plugin-mdx-entire-payload-0c4bae49097e6fa1e4ca4ee79c816736--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"28. Write a C program to perform Scalar matrix multiplication.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":67,"offset":89},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":67,"offset":89},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to perform Scalar matrix multiplication.\n#include <stdio.h>\nvoid main()\n{\n    int arr[3][3],crr[3][3],i,j,n;\n    printf(\"Input elements in the first matrix :\\n\");\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            printf(\"element - [%d],[%d] : \",i,j);\n            scanf(\"%d\",&arr[i][j]);\n        }\n    }\n    printf(\"\\nThe First matrix is :\\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\t\",arr[i][j]);\n    }\n\n    printf(\"\\nenter the multiplication value :\\n\");\n    scanf(\"%d\",&n);\n\n    for(i=0; i<3; i++)\n        for(j=0; j<3; j++)\n            crr[i][j]=n*arr[i][j];\n    printf(\"\\nThe subtraction of two matrix is : \\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\t\",crr[i][j]);\n    }\n}","position":{"start":{"line":4,"column":1,"offset":91},"end":{"line":41,"column":4,"offset":988},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":42,"column":5,"offset":994},"end":{"line":42,"column":11,"offset":1000},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":990},"end":{"line":42,"column":11,"offset":1000},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input elements in the first matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 2 3 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 4 5\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n1       2       3\n2       3       4\n3       4       5\nenter the multiplication value :\n2\n\nThe subtraction of two matrix is :\n\n2       4       6\n4       6       8\n6       8       10","position":{"start":{"line":43,"column":1,"offset":1002},"end":{"line":62,"column":4,"offset":1467},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":63,"column":4,"offset":1472},"end":{"line":63,"column":22,"offset":1490},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1469},"end":{"line":63,"column":22,"offset":1490},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"28. Write a C++ program to perform Scalar matrix multiplication.","position":{"start":{"line":64,"column":5,"offset":1496},"end":{"line":64,"column":69,"offset":1560},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1492},"end":{"line":64,"column":69,"offset":1560},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to perform Scalar matrix multiplication.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    int arr[3][3],crr[3][3],i,j,n;\n    cout << \"Input elements in the first matrix :\\n\";\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            cout << \"element -  : [\" << i << \"][\" << j << \"]\";\n            cin >> arr[i][j];\n        }\n    }\n    cout << \"\\nThe First matrix is :\\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\t\" << arr[i][j];\n    }\n    cout << \"\\nenter the multiplication value :\\n\";\n    cin >> n;\n    for(i=0; i<3; i++)\n        for(j=0; j<3; j++)\n            crr[i][j]=n*arr[i][j];\n    cout << \"\\nThe subtraction of two matrix is : \\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\t\" << crr[i][j];\n    }\n}","position":{"start":{"line":65,"column":1,"offset":1562},"end":{"line":102,"column":4,"offset":2485},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":103,"column":5,"offset":2491},"end":{"line":103,"column":11,"offset":2497},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2487},"end":{"line":103,"column":11,"offset":2497},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input elements in the first matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 2 3 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 4 5\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n1       2       3\n2       3       4\n3       4       5\nenter the multiplication value :\n2\n\nThe subtraction of two matrix is :\n\n2       4       6\n4       6       8\n6       8       10","position":{"start":{"line":104,"column":1,"offset":2499},"end":{"line":123,"column":4,"offset":2964},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":125,"column":4,"offset":2971},"end":{"line":125,"column":23,"offset":2990},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":2968},"end":{"line":125,"column":23,"offset":2990},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"28. Write a Java program to perform Scalar matrix multiplication.","position":{"start":{"line":126,"column":5,"offset":2996},"end":{"line":126,"column":70,"offset":3061},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":2992},"end":{"line":126,"column":70,"offset":3061},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to perform Scalar matrix multiplication.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        int arr[][]= new int[3][3],crr[][]= new int[3][3],i,j,n;\n        System.out.println(\"Input elements in the first matrix :\");\n        for(i=0; i<3; i++)\n        {\n            for(j=0; j<3; j++)\n            {\n                System.out.println(\"element - : \"+\"[\"+i+\"]\"+\"[\"+j+\"]\");\n                arr[i][j] = z.nextInt();\n            }\n        }\n        System.out.println(\"The First matrix is :\");\n        for(i=0; i<3; i++)\n        {\n            System.out.println();\n            for(j=0; j<3; j++)\n                System.out.println(\"\\t\"+arr[i][j]);\n        }\n        System.out.println(\"enter the multiplication value :\");\n        n = z.nextInt();\n        for(i=0; i<3; i++)\n            for(j=0; j<3; j++)\n                crr[i][j]=n*arr[i][j];\n        System.out.println(\"The subtraction of two matrix is : \");\n        for(i=0; i<3; i++)\n        {\n            System.out.println();\n            for(j=0; j<3; j++)\n                System.out.printf(\"\\t\"+crr[i][j]);\n        }\n    }\n}","position":{"start":{"line":127,"column":1,"offset":3063},"end":{"line":165,"column":4,"offset":4305},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":166,"column":5,"offset":4311},"end":{"line":166,"column":11,"offset":4317},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":4307},"end":{"line":166,"column":11,"offset":4317},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input elements in the first matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 2 3 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 4 5\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n1       2       3\n2       3       4\n3       4       5\nenter the multiplication value :\n2\n\nThe subtraction of two matrix is :\n\n2       4       6\n4       6       8\n6       8       10","position":{"start":{"line":167,"column":1,"offset":4319},"end":{"line":186,"column":4,"offset":4784},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to perform Scalar matrix multiplication.\",\"category\":\"Array Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":189,"column":1,"offset":4788},"end":{"line":189,"column":240,"offset":5027},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":189,"column":240,"offset":5027}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to perform Scalar matrix multiplication.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"28. Write a C program to perform Scalar matrix multiplication.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to perform Scalar matrix multiplication.\\n#include <stdio.h>\\nvoid main()\\n{\\n    int arr[3][3],crr[3][3],i,j,n;\\n    printf(\\\"Input elements in the first matrix :\\\\n\\\");\\n    for(i=0; i<3; i++)\\n    {\\n        for(j=0; j<3; j++)\\n        {\\n            printf(\\\"element - [%d],[%d] : \\\",i,j);\\n            scanf(\\\"%d\\\",&arr[i][j]);\\n        }\\n    }\\n    printf(\\\"\\\\nThe First matrix is :\\\\n\\\");\\n    for(i=0; i<3; i++)\\n    {\\n        printf(\\\"\\\\n\\\");\\n        for(j=0; j<3; j++)\\n            printf(\\\"%d\\\\t\\\",arr[i][j]);\\n    }\\n\\n    printf(\\\"\\\\nenter the multiplication value :\\\\n\\\");\\n    scanf(\\\"%d\\\",&n);\\n\\n    for(i=0; i<3; i++)\\n        for(j=0; j<3; j++)\\n            crr[i][j]=n*arr[i][j];\\n    printf(\\\"\\\\nThe subtraction of two matrix is : \\\\n\\\");\\n    for(i=0; i<3; i++)\\n    {\\n        printf(\\\"\\\\n\\\");\\n        for(j=0; j<3; j++)\\n            printf(\\\"%d\\\\t\\\",crr[i][j]);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the first matrix :\\nelement - [0],[0] : 1 2 3\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 2 3 4\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 4 5\\nelement - [2],[1] : element - [2],[2] :\\nThe First matrix is :\\n\\n1       2       3\\n2       3       4\\n3       4       5\\nenter the multiplication value :\\n2\\n\\nThe subtraction of two matrix is :\\n\\n2       4       6\\n4       6       8\\n6       8       10\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"28. Write a C++ program to perform Scalar matrix multiplication.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to perform Scalar matrix multiplication.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n    int arr[3][3],crr[3][3],i,j,n;\\n    cout << \\\"Input elements in the first matrix :\\\\n\\\";\\n    for(i=0; i<3; i++)\\n    {\\n        for(j=0; j<3; j++)\\n        {\\n            cout << \\\"element -  : [\\\" << i << \\\"][\\\" << j << \\\"]\\\";\\n            cin >> arr[i][j];\\n        }\\n    }\\n    cout << \\\"\\\\nThe First matrix is :\\\\n\\\";\\n    for(i=0; i<3; i++)\\n    {\\n        cout << \\\"\\\\n\\\";\\n        for(j=0; j<3; j++)\\n            cout << \\\"\\\\t\\\" << arr[i][j];\\n    }\\n    cout << \\\"\\\\nenter the multiplication value :\\\\n\\\";\\n    cin >> n;\\n    for(i=0; i<3; i++)\\n        for(j=0; j<3; j++)\\n            crr[i][j]=n*arr[i][j];\\n    cout << \\\"\\\\nThe subtraction of two matrix is : \\\\n\\\";\\n    for(i=0; i<3; i++)\\n    {\\n        cout << \\\"\\\\n\\\";\\n        for(j=0; j<3; j++)\\n            cout << \\\"\\\\t\\\" << crr[i][j];\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the first matrix :\\nelement - [0],[0] : 1 2 3\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 2 3 4\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 4 5\\nelement - [2],[1] : element - [2],[2] :\\nThe First matrix is :\\n\\n1       2       3\\n2       3       4\\n3       4       5\\nenter the multiplication value :\\n2\\n\\nThe subtraction of two matrix is :\\n\\n2       4       6\\n4       6       8\\n6       8       10\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"28. Write a Java program to perform Scalar matrix multiplication.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to perform Scalar matrix multiplication.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        int arr[][]= new int[3][3],crr[][]= new int[3][3],i,j,n;\\n        System.out.println(\\\"Input elements in the first matrix :\\\");\\n        for(i=0; i<3; i++)\\n        {\\n            for(j=0; j<3; j++)\\n            {\\n                System.out.println(\\\"element - : \\\"+\\\"[\\\"+i+\\\"]\\\"+\\\"[\\\"+j+\\\"]\\\");\\n                arr[i][j] = z.nextInt();\\n            }\\n        }\\n        System.out.println(\\\"The First matrix is :\\\");\\n        for(i=0; i<3; i++)\\n        {\\n            System.out.println();\\n            for(j=0; j<3; j++)\\n                System.out.println(\\\"\\\\t\\\"+arr[i][j]);\\n        }\\n        System.out.println(\\\"enter the multiplication value :\\\");\\n        n = z.nextInt();\\n        for(i=0; i<3; i++)\\n            for(j=0; j<3; j++)\\n                crr[i][j]=n*arr[i][j];\\n        System.out.println(\\\"The subtraction of two matrix is : \\\");\\n        for(i=0; i<3; i++)\\n        {\\n            System.out.println();\\n            for(j=0; j<3; j++)\\n                System.out.printf(\\\"\\\\t\\\"+crr[i][j]);\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the first matrix :\\nelement - [0],[0] : 1 2 3\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 2 3 4\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 4 5\\nelement - [2],[1] : element - [2],[2] :\\nThe First matrix is :\\n\\n1       2       3\\n2       3       4\\n3       4       5\\nenter the multiplication value :\\n2\\n\\nThe subtraction of two matrix is :\\n\\n2       4       6\\n4       6       8\\n6       8       10\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to perform Scalar matrix multiplication.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`28. Write a C program to perform Scalar matrix multiplication.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to perform Scalar matrix multiplication.\n#include <stdio.h>\nvoid main()\n{\n    int arr[3][3],crr[3][3],i,j,n;\n    printf(\"Input elements in the first matrix :\\\\n\");\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            printf(\"element - [%d],[%d] : \",i,j);\n            scanf(\"%d\",&arr[i][j]);\n        }\n    }\n    printf(\"\\\\nThe First matrix is :\\\\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\\\t\",arr[i][j]);\n    }\n\n    printf(\"\\\\nenter the multiplication value :\\\\n\");\n    scanf(\"%d\",&n);\n\n    for(i=0; i<3; i++)\n        for(j=0; j<3; j++)\n            crr[i][j]=n*arr[i][j];\n    printf(\"\\\\nThe subtraction of two matrix is : \\\\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\\\t\",crr[i][j]);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input elements in the first matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 2 3 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 4 5\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n1       2       3\n2       3       4\n3       4       5\nenter the multiplication value :\n2\n\nThe subtraction of two matrix is :\n\n2       4       6\n4       6       8\n6       8       10\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`28. Write a C++ program to perform Scalar matrix multiplication.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to perform Scalar matrix multiplication.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    int arr[3][3],crr[3][3],i,j,n;\n    cout << \"Input elements in the first matrix :\\\\n\";\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            cout << \"element -  : [\" << i << \"][\" << j << \"]\";\n            cin >> arr[i][j];\n        }\n    }\n    cout << \"\\\\nThe First matrix is :\\\\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\\\t\" << arr[i][j];\n    }\n    cout << \"\\\\nenter the multiplication value :\\\\n\";\n    cin >> n;\n    for(i=0; i<3; i++)\n        for(j=0; j<3; j++)\n            crr[i][j]=n*arr[i][j];\n    cout << \"\\\\nThe subtraction of two matrix is : \\\\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\\\t\" << crr[i][j];\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input elements in the first matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 2 3 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 4 5\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n1       2       3\n2       3       4\n3       4       5\nenter the multiplication value :\n2\n\nThe subtraction of two matrix is :\n\n2       4       6\n4       6       8\n6       8       10\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`28. Write a Java program to perform Scalar matrix multiplication.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to perform Scalar matrix multiplication.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        int arr[][]= new int[3][3],crr[][]= new int[3][3],i,j,n;\n        System.out.println(\"Input elements in the first matrix :\");\n        for(i=0; i<3; i++)\n        {\n            for(j=0; j<3; j++)\n            {\n                System.out.println(\"element - : \"+\"[\"+i+\"]\"+\"[\"+j+\"]\");\n                arr[i][j] = z.nextInt();\n            }\n        }\n        System.out.println(\"The First matrix is :\");\n        for(i=0; i<3; i++)\n        {\n            System.out.println();\n            for(j=0; j<3; j++)\n                System.out.println(\"\\\\t\"+arr[i][j]);\n        }\n        System.out.println(\"enter the multiplication value :\");\n        n = z.nextInt();\n        for(i=0; i<3; i++)\n            for(j=0; j<3; j++)\n                crr[i][j]=n*arr[i][j];\n        System.out.println(\"The subtraction of two matrix is : \");\n        for(i=0; i<3; i++)\n        {\n            System.out.println();\n            for(j=0; j<3; j++)\n                System.out.printf(\"\\\\t\"+crr[i][j]);\n        }\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input elements in the first matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 2 3 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 4 5\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n1       2       3\n2       3       4\n3       4       5\nenter the multiplication value :\n2\n\nThe subtraction of two matrix is :\n\n2       4       6\n4       6       8\n6       8       10\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}