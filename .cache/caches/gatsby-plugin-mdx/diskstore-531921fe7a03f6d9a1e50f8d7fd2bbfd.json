{"expireTime":9007200883706343000,"key":"gatsby-plugin-mdx-entire-payload-a684b7ab259f9b7df2e5dab89620e68f--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"45. Write a C program to print all natural numbers between 1 to n using functions .","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":88,"offset":110},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":88,"offset":110},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to print all natural numbers between 1 to n using functions .\n#include<stdio.h>\n\nvoid printNaturalNumber(int n)\n{\n    printf(\"Natural numbers are: \");\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d \",i);\n    }\n}\n\nint main()\n{\n    int n;\n    printf(\"Enter n: \");\n    scanf(\"%d\",&n);\n\n    printNaturalNumber(n);\n\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":112},"end":{"line":27,"column":4,"offset":494},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":28,"column":5,"offset":500},"end":{"line":28,"column":11,"offset":506},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":496},"end":{"line":28,"column":11,"offset":506},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter n: 10\nNatural numbers are: 1 2 3 4 5 6 7 8 9 10","position":{"start":{"line":29,"column":1,"offset":508},"end":{"line":32,"column":4,"offset":572},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":34,"column":4,"offset":579},"end":{"line":34,"column":22,"offset":597},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":576},"end":{"line":34,"column":22,"offset":597},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"45. Write a C++ program to print all natural numbers between 1 to n using functions .","position":{"start":{"line":35,"column":5,"offset":603},"end":{"line":35,"column":90,"offset":688},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":599},"end":{"line":35,"column":90,"offset":688},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to print all natural numbers between 1 to n using functions .\n\n#include<iostream>\nusing namespace std;\n\nvoid printNaturalNumber(int n)\n{\n    cout << \"Natural numbers are: \";\n    for(int i=1;i<=n;i++)\n    {\n        cout << \" \" << i ;\n    }\n}\n\nint main()\n{\n    int n;\n    cout << \"Enter n: \";\n    cin >> n;\n\n    printNaturalNumber(n);\n\n    return 0;\n}","position":{"start":{"line":36,"column":1,"offset":690},"end":{"line":61,"column":4,"offset":1095},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":62,"column":5,"offset":1101},"end":{"line":62,"column":11,"offset":1107},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1097},"end":{"line":62,"column":11,"offset":1107},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter n: 10\nNatural numbers are: 1 2 3 4 5 6 7 8 9 10","position":{"start":{"line":63,"column":1,"offset":1109},"end":{"line":66,"column":4,"offset":1173},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":68,"column":4,"offset":1180},"end":{"line":68,"column":23,"offset":1199},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1177},"end":{"line":68,"column":23,"offset":1199},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"45. Write a Java program to print all natural numbers between 1 to n using functions .","position":{"start":{"line":69,"column":5,"offset":1205},"end":{"line":69,"column":91,"offset":1291},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1201},"end":{"line":69,"column":91,"offset":1291},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to print all natural numbers between 1 to n using functions .\nimport java.util.Scanner;\npublic class Funycode {\n    static void printNaturalNumber(int n)\n    {\n        System.out.println(\"Natural numbers are: \");\n        for(int i=1;i<=n;i++)\n        {\n            System.out.println(\" \" + i);\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int n;\n        System.out.println(\"Enter n: \");\n        n = z.nextInt();\n        printNaturalNumber(n);\n    }\n}","position":{"start":{"line":70,"column":1,"offset":1293},"end":{"line":91,"column":4,"offset":1866},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":92,"column":5,"offset":1872},"end":{"line":92,"column":11,"offset":1878},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":1868},"end":{"line":92,"column":11,"offset":1878},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter n: 10\nNatural numbers are: 1 2 3 4 5 6 7 8 9 10","position":{"start":{"line":93,"column":1,"offset":1880},"end":{"line":96,"column":4,"offset":1944},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to print all natural numbers between 1 to n using functions .\",\"category\":\"Function Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":99,"column":1,"offset":1948},"end":{"line":99,"column":264,"offset":2211},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":99,"column":264,"offset":2211}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print all natural numbers between 1 to n using functions .\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"45. Write a C program to print all natural numbers between 1 to n using functions .\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to print all natural numbers between 1 to n using functions .\\n#include<stdio.h>\\n\\nvoid printNaturalNumber(int n)\\n{\\n    printf(\\\"Natural numbers are: \\\");\\n    for(int i=1;i<=n;i++)\\n    {\\n        printf(\\\"%d \\\",i);\\n    }\\n}\\n\\nint main()\\n{\\n    int n;\\n    printf(\\\"Enter n: \\\");\\n    scanf(\\\"%d\\\",&n);\\n\\n    printNaturalNumber(n);\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter n: 10\\nNatural numbers are: 1 2 3 4 5 6 7 8 9 10\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"45. Write a C++ program to print all natural numbers between 1 to n using functions .\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to print all natural numbers between 1 to n using functions .\\n\\n#include<iostream>\\nusing namespace std;\\n\\nvoid printNaturalNumber(int n)\\n{\\n    cout << \\\"Natural numbers are: \\\";\\n    for(int i=1;i<=n;i++)\\n    {\\n        cout << \\\" \\\" << i ;\\n    }\\n}\\n\\nint main()\\n{\\n    int n;\\n    cout << \\\"Enter n: \\\";\\n    cin >> n;\\n\\n    printNaturalNumber(n);\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter n: 10\\nNatural numbers are: 1 2 3 4 5 6 7 8 9 10\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"45. Write a Java program to print all natural numbers between 1 to n using functions .\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to print all natural numbers between 1 to n using functions .\\nimport java.util.Scanner;\\npublic class Funycode {\\n    static void printNaturalNumber(int n)\\n    {\\n        System.out.println(\\\"Natural numbers are: \\\");\\n        for(int i=1;i<=n;i++)\\n        {\\n            System.out.println(\\\" \\\" + i);\\n        }\\n    }\\n\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int n;\\n        System.out.println(\\\"Enter n: \\\");\\n        n = z.nextInt();\\n        printNaturalNumber(n);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter n: 10\\nNatural numbers are: 1 2 3 4 5 6 7 8 9 10\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print all natural numbers between 1 to n using functions .\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`45. Write a C program to print all natural numbers between 1 to n using functions .`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to print all natural numbers between 1 to n using functions .\n#include<stdio.h>\n\nvoid printNaturalNumber(int n)\n{\n    printf(\"Natural numbers are: \");\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d \",i);\n    }\n}\n\nint main()\n{\n    int n;\n    printf(\"Enter n: \");\n    scanf(\"%d\",&n);\n\n    printNaturalNumber(n);\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter n: 10\nNatural numbers are: 1 2 3 4 5 6 7 8 9 10\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`45. Write a C++ program to print all natural numbers between 1 to n using functions .`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to print all natural numbers between 1 to n using functions .\n\n#include<iostream>\nusing namespace std;\n\nvoid printNaturalNumber(int n)\n{\n    cout << \"Natural numbers are: \";\n    for(int i=1;i<=n;i++)\n    {\n        cout << \" \" << i ;\n    }\n}\n\nint main()\n{\n    int n;\n    cout << \"Enter n: \";\n    cin >> n;\n\n    printNaturalNumber(n);\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter n: 10\nNatural numbers are: 1 2 3 4 5 6 7 8 9 10\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`45. Write a Java program to print all natural numbers between 1 to n using functions .`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to print all natural numbers between 1 to n using functions .\nimport java.util.Scanner;\npublic class Funycode {\n    static void printNaturalNumber(int n)\n    {\n        System.out.println(\"Natural numbers are: \");\n        for(int i=1;i<=n;i++)\n        {\n            System.out.println(\" \" + i);\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int n;\n        System.out.println(\"Enter n: \");\n        n = z.nextInt();\n        printNaturalNumber(n);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter n: 10\nNatural numbers are: 1 2 3 4 5 6 7 8 9 10\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}