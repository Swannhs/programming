{"expireTime":9007200883718621000,"key":"gatsby-plugin-mdx-entire-payload-ca69dd4796f200cf291329b2ac53d0d5--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"22. Write a C program to remove characters in String Except Alphabets.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":75,"offset":97},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":75,"offset":97},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to remove characters in String Except Alphabets.\n#include<stdio.h>\nint main()\n{\n    char str[150];\n    int i, j;\n    printf(\"\\nEnter a string : \");\n    gets(str);\n    for(i = 0; str[i] != '\\0'; ++i)\n    {\n        while (!( (str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z') || str[i] == '\\0') )\n        {\n            for(j = i; str[j] != '\\0'; ++j)\n            {\n                str[j] = str[j+1];\n            }\n        str[j] = '\\0';\n        }\n    }\n    printf(\"\\nResultant String : %s \",str);\n\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":99},"end":{"line":28,"column":4,"offset":681},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":29,"column":5,"offset":687},"end":{"line":29,"column":11,"offset":693},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":683},"end":{"line":29,"column":11,"offset":693},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a string : hello\n\nResultant String : hello","position":{"start":{"line":30,"column":1,"offset":695},"end":{"line":34,"column":4,"offset":755},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":35,"column":4,"offset":760},"end":{"line":35,"column":22,"offset":778},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":757},"end":{"line":35,"column":22,"offset":778},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"22. Write a C++ program to remove characters in String Except Alphabets.","position":{"start":{"line":36,"column":5,"offset":784},"end":{"line":36,"column":77,"offset":856},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":780},"end":{"line":36,"column":77,"offset":856},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to remove characters in String Except Alphabets.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char str[150];\n    int i, j;\n    cout << \"\\nEnter a string : \";\n    cin >> str;\n    for(i = 0; str[i] != '\\0'; ++i)\n    {\n        while (!( (str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z') || str[i] == '\\0') )\n        {\n            for(j = i; str[j] != '\\0'; ++j)\n            {\n                str[j] = str[j+1];\n            }\n        str[j] = '\\0';\n        }\n    }\n    cout << \"\\nResultant String : \" << str;\n\n    return 0;\n}","position":{"start":{"line":37,"column":1,"offset":858},"end":{"line":64,"column":4,"offset":1490},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":65,"column":5,"offset":1496},"end":{"line":65,"column":11,"offset":1502},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1492},"end":{"line":65,"column":11,"offset":1502},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a string : hello\n\nResultant String : hello","position":{"start":{"line":66,"column":1,"offset":1504},"end":{"line":70,"column":4,"offset":1564},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":72,"column":4,"offset":1571},"end":{"line":72,"column":23,"offset":1590},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1568},"end":{"line":72,"column":23,"offset":1590},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"22. Write a Java program to remove characters in String Except Alphabets.","position":{"start":{"line":73,"column":5,"offset":1596},"end":{"line":73,"column":78,"offset":1669},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1592},"end":{"line":73,"column":78,"offset":1669},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to remove characters in String Except Alphabets.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        System.out.println(\"Enter a string: \");\n        String str;\n        int i, j;\n        str = z.nextLine();\n        for(i = 0; charAt(i) != '\\0'; ++i)\n        {\n            while (!( (charAt(i) >= 'a' && charAt(i) <= 'z') || (charAt(i) >= 'A' && charAt(i) <= 'Z') || charAt(i) == '\\0') )\n            {\n                for(j = i; charAt(j) != '\\0'; ++j)\n                {\n                    charAt(j) = charAt(j+1);\n                }\n            charAt(j) = '\\0';\n            }\n        }\n    }\n}","position":{"start":{"line":74,"column":1,"offset":1671},"end":{"line":97,"column":4,"offset":2414},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":98,"column":5,"offset":2420},"end":{"line":98,"column":11,"offset":2426},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":2416},"end":{"line":98,"column":11,"offset":2426},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a string : hello\n\nResultant String : hello","position":{"start":{"line":99,"column":1,"offset":2428},"end":{"line":103,"column":4,"offset":2488},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to remove characters in String Except Alphabets.\",\"category\":\"String Index\",\"tags\":[\"string\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":106,"column":1,"offset":2492},"end":{"line":106,"column":218,"offset":2709},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":106,"column":218,"offset":2709}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to remove characters in String Except Alphabets.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"22. Write a C program to remove characters in String Except Alphabets.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to remove characters in String Except Alphabets.\\n#include<stdio.h>\\nint main()\\n{\\n    char str[150];\\n    int i, j;\\n    printf(\\\"\\\\nEnter a string : \\\");\\n    gets(str);\\n    for(i = 0; str[i] != '\\\\0'; ++i)\\n    {\\n        while (!( (str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z') || str[i] == '\\\\0') )\\n        {\\n            for(j = i; str[j] != '\\\\0'; ++j)\\n            {\\n                str[j] = str[j+1];\\n            }\\n        str[j] = '\\\\0';\\n        }\\n    }\\n    printf(\\\"\\\\nResultant String : %s \\\",str);\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a string : hello\\n\\nResultant String : hello\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"22. Write a C++ program to remove characters in String Except Alphabets.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to remove characters in String Except Alphabets.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint main()\\n{\\n    char str[150];\\n    int i, j;\\n    cout << \\\"\\\\nEnter a string : \\\";\\n    cin >> str;\\n    for(i = 0; str[i] != '\\\\0'; ++i)\\n    {\\n        while (!( (str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z') || str[i] == '\\\\0') )\\n        {\\n            for(j = i; str[j] != '\\\\0'; ++j)\\n            {\\n                str[j] = str[j+1];\\n            }\\n        str[j] = '\\\\0';\\n        }\\n    }\\n    cout << \\\"\\\\nResultant String : \\\" << str;\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a string : hello\\n\\nResultant String : hello\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"22. Write a Java program to remove characters in String Except Alphabets.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to remove characters in String Except Alphabets.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z=new Scanner(System.in);\\n        System.out.println(\\\"Enter a string: \\\");\\n        String str;\\n        int i, j;\\n        str = z.nextLine();\\n        for(i = 0; charAt(i) != '\\\\0'; ++i)\\n        {\\n            while (!( (charAt(i) >= 'a' && charAt(i) <= 'z') || (charAt(i) >= 'A' && charAt(i) <= 'Z') || charAt(i) == '\\\\0') )\\n            {\\n                for(j = i; charAt(j) != '\\\\0'; ++j)\\n                {\\n                    charAt(j) = charAt(j+1);\\n                }\\n            charAt(j) = '\\\\0';\\n            }\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a string : hello\\n\\nResultant String : hello\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to remove characters in String Except Alphabets.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`22. Write a C program to remove characters in String Except Alphabets.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to remove characters in String Except Alphabets.\n#include<stdio.h>\nint main()\n{\n    char str[150];\n    int i, j;\n    printf(\"\\\\nEnter a string : \");\n    gets(str);\n    for(i = 0; str[i] != '\\\\0'; ++i)\n    {\n        while (!( (str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z') || str[i] == '\\\\0') )\n        {\n            for(j = i; str[j] != '\\\\0'; ++j)\n            {\n                str[j] = str[j+1];\n            }\n        str[j] = '\\\\0';\n        }\n    }\n    printf(\"\\\\nResultant String : %s \",str);\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a string : hello\n\nResultant String : hello\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`22. Write a C++ program to remove characters in String Except Alphabets.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to remove characters in String Except Alphabets.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char str[150];\n    int i, j;\n    cout << \"\\\\nEnter a string : \";\n    cin >> str;\n    for(i = 0; str[i] != '\\\\0'; ++i)\n    {\n        while (!( (str[i] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z') || str[i] == '\\\\0') )\n        {\n            for(j = i; str[j] != '\\\\0'; ++j)\n            {\n                str[j] = str[j+1];\n            }\n        str[j] = '\\\\0';\n        }\n    }\n    cout << \"\\\\nResultant String : \" << str;\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a string : hello\n\nResultant String : hello\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`22. Write a Java program to remove characters in String Except Alphabets.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to remove characters in String Except Alphabets.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        System.out.println(\"Enter a string: \");\n        String str;\n        int i, j;\n        str = z.nextLine();\n        for(i = 0; charAt(i) != '\\\\0'; ++i)\n        {\n            while (!( (charAt(i) >= 'a' && charAt(i) <= 'z') || (charAt(i) >= 'A' && charAt(i) <= 'Z') || charAt(i) == '\\\\0') )\n            {\n                for(j = i; charAt(j) != '\\\\0'; ++j)\n                {\n                    charAt(j) = charAt(j+1);\n                }\n            charAt(j) = '\\\\0';\n            }\n        }\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a string : hello\n\nResultant String : hello\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}