{"expireTime":9007200883706950000,"key":"gatsby-plugin-mdx-entire-payload-5438794cc0737c91c3bee9170064a0da--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"33. Write a C program to find sum of each row and column of a matrix.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":74,"offset":96},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":74,"offset":96},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to find sum of each row and column of a matrix.\n#include <stdio.h>\nvoid main ()\n{\n    int array[3][3],i,j,sum=0;\n    printf(\"Enter 9 co-efficients of the matrix-\\n\");\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            scanf(\"%d\", &array[i][j]);\n        }\n    }\n    printf(\"The given matrix is \\n\");\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            printf(\" %d\", array[i][j]);\n        }\n        printf(\"\\n\");\n    }\n\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            sum = sum + array[i][j] ;\n        }\n\n        printf(\"Sum of the %d row is = %d\\n\", i, sum);\n        sum = 0;\n\n    }\n    sum = 0;\n    for (j = 0; j < 3; ++j)\n    {\n        for (i = 0; i < 3; ++i)\n        {\n            sum = sum + array[i][j];\n        }\n\n        printf(\"Sum of the %d column is = %d\\n\", j, sum);\n        sum = 0;\n\n    }\n\n}","position":{"start":{"line":4,"column":1,"offset":98},"end":{"line":53,"column":4,"offset":1092},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":54,"column":5,"offset":1098},"end":{"line":54,"column":11,"offset":1104},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1094},"end":{"line":54,"column":11,"offset":1104},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter 9 co-efficients of the matrix-\n1 2 3 4 5 4 3 2 1\nThe given matrix is\n 1 2 3\n 4 5 4\n 3 2 1\nSum of the 0 row is = 6\nSum of the 1 row is = 13\nSum of the 2 row is = 6\nSum of the 0 column is = 8\nSum of the 1 column is = 9\nSum of the 2 column is = 8","position":{"start":{"line":55,"column":1,"offset":1106},"end":{"line":68,"column":4,"offset":1376},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":69,"column":4,"offset":1381},"end":{"line":69,"column":22,"offset":1399},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1378},"end":{"line":69,"column":22,"offset":1399},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"33. Write a C++ program to find sum of each row and column of a matrix.","position":{"start":{"line":70,"column":5,"offset":1405},"end":{"line":70,"column":76,"offset":1476},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1401},"end":{"line":70,"column":76,"offset":1476},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to find sum of each row and column of a matrix.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    int array[3][3],i,j,sum=0;\n    cout << \"Enter 9 co-efficients of the matrix-\\n\";\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            cin >> array[i][j];\n        }\n    }\n    cout << \"The given matrix is \\n\";\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            cout << \"\\t\" << arr1[i][j];\n        }\n        cout << \"\\n\";\n    }\n\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            sum = sum + array[i][j] ;\n        }\n\n        cout << \"Sum of the \" << i << \" row is = \" << sum << endl);\n        sum = 0;\n\n    }\n    sum = 0;\n    for (j = 0; j < 3; ++j)\n    {\n        for (i = 0; i < 3; ++i)\n        {\n            sum = sum + array[i][j];\n        }\n\n        cout << \"Sum of the \" << j << \" row is = \" << sum << endl);\n        sum = 0;\n\n    }\n}","position":{"start":{"line":71,"column":1,"offset":1478},"end":{"line":121,"column":4,"offset":2512},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":122,"column":5,"offset":2518},"end":{"line":122,"column":11,"offset":2524},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":2514},"end":{"line":122,"column":11,"offset":2524},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter 9 co-efficients of the matrix-\n1 2 3 4 5 4 3 2 1\nThe given matrix is\n 1 2 3\n 4 5 4\n 3 2 1\nSum of the 0 row is = 6\nSum of the 1 row is = 13\nSum of the 2 row is = 6\nSum of the 0 column is = 8\nSum of the 1 column is = 9\nSum of the 2 column is = 8","position":{"start":{"line":123,"column":1,"offset":2526},"end":{"line":136,"column":4,"offset":2796},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":138,"column":4,"offset":2803},"end":{"line":138,"column":23,"offset":2822},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":2800},"end":{"line":138,"column":23,"offset":2822},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"33. Write a Java program to find sum of each row and column of a matrix.","position":{"start":{"line":139,"column":5,"offset":2828},"end":{"line":139,"column":77,"offset":2900},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":2824},"end":{"line":139,"column":77,"offset":2900},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to find sum of each row and column of a matrix.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z=new Scanner(System.in);\n          int array[][]= new int[3][3],i,j,sum=0;\n          System.out.printf(\"Enter 9 co-efficients of the matrix-\\n\");\n          for (i = 0; i < 3; ++i)\n          {\n              for (j = 0; j < 3; ++j)\n              {\n                  array[i][j] = z.nextInt();\n              }\n          }\n          System.out.printf(\"The given matrix is \\n\");\n          for (i = 0; i < 3; ++i)\n          {\n              for (j = 0; j < 3; ++j)\n              {\n                  System.out.printf(\"\\t\"+array[i][j]);\n              }\n              System.out.printf(\"\\n\");\n          }\n\n          for (i = 0; i < 3; ++i)\n          {\n              for (j = 0; j < 3; ++j)\n              {\n                  sum = sum + array[i][j] ;\n              }\n\n              System.out.println(\"Sum of the \" + i + \" row is = \"+ sum);\n              sum = 0;\n          }\n          sum = 0;\n          for (j = 0; j < 3; ++j)\n          {\n              for (i = 0; i < 3; ++i)\n              {\n                  sum = sum + array[i][j];\n              }\n\n              System.out.println(\"Sum of the \" + j + \" column is = \"+sum);\n              sum = 0;\n          }\n      }\n}","position":{"start":{"line":140,"column":1,"offset":2902},"end":{"line":188,"column":4,"offset":4309},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":189,"column":5,"offset":4315},"end":{"line":189,"column":11,"offset":4321},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":4311},"end":{"line":189,"column":11,"offset":4321},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter 9 co-efficients of the matrix-\n1 2 3 4 5 4 3 2 1\nThe given matrix is\n 1 2 3\n 4 5 4\n 3 2 1\nSum of the 0 row is = 6\nSum of the 1 row is = 13\nSum of the 2 row is = 6\nSum of the 0 column is = 8\nSum of the 1 column is = 9\nSum of the 2 column is = 8","position":{"start":{"line":190,"column":1,"offset":4323},"end":{"line":203,"column":4,"offset":4593},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to find sum of each row and column of a matrix.\",\"category\":\"Array Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":206,"column":1,"offset":4597},"end":{"line":206,"column":247,"offset":4843},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":206,"column":247,"offset":4843}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find sum of each row and column of a matrix.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"33. Write a C program to find sum of each row and column of a matrix.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to find sum of each row and column of a matrix.\\n#include <stdio.h>\\nvoid main ()\\n{\\n    int array[3][3],i,j,sum=0;\\n    printf(\\\"Enter 9 co-efficients of the matrix-\\\\n\\\");\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            scanf(\\\"%d\\\", &array[i][j]);\\n        }\\n    }\\n    printf(\\\"The given matrix is \\\\n\\\");\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            printf(\\\" %d\\\", array[i][j]);\\n        }\\n        printf(\\\"\\\\n\\\");\\n    }\\n\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            sum = sum + array[i][j] ;\\n        }\\n\\n        printf(\\\"Sum of the %d row is = %d\\\\n\\\", i, sum);\\n        sum = 0;\\n\\n    }\\n    sum = 0;\\n    for (j = 0; j < 3; ++j)\\n    {\\n        for (i = 0; i < 3; ++i)\\n        {\\n            sum = sum + array[i][j];\\n        }\\n\\n        printf(\\\"Sum of the %d column is = %d\\\\n\\\", j, sum);\\n        sum = 0;\\n\\n    }\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 9 co-efficients of the matrix-\\n1 2 3 4 5 4 3 2 1\\nThe given matrix is\\n 1 2 3\\n 4 5 4\\n 3 2 1\\nSum of the 0 row is = 6\\nSum of the 1 row is = 13\\nSum of the 2 row is = 6\\nSum of the 0 column is = 8\\nSum of the 1 column is = 9\\nSum of the 2 column is = 8\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"33. Write a C++ program to find sum of each row and column of a matrix.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find sum of each row and column of a matrix.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n    int array[3][3],i,j,sum=0;\\n    cout << \\\"Enter 9 co-efficients of the matrix-\\\\n\\\";\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            cin >> array[i][j];\\n        }\\n    }\\n    cout << \\\"The given matrix is \\\\n\\\";\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            cout << \\\"\\\\t\\\" << arr1[i][j];\\n        }\\n        cout << \\\"\\\\n\\\";\\n    }\\n\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            sum = sum + array[i][j] ;\\n        }\\n\\n        cout << \\\"Sum of the \\\" << i << \\\" row is = \\\" << sum << endl);\\n        sum = 0;\\n\\n    }\\n    sum = 0;\\n    for (j = 0; j < 3; ++j)\\n    {\\n        for (i = 0; i < 3; ++i)\\n        {\\n            sum = sum + array[i][j];\\n        }\\n\\n        cout << \\\"Sum of the \\\" << j << \\\" row is = \\\" << sum << endl);\\n        sum = 0;\\n\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 9 co-efficients of the matrix-\\n1 2 3 4 5 4 3 2 1\\nThe given matrix is\\n 1 2 3\\n 4 5 4\\n 3 2 1\\nSum of the 0 row is = 6\\nSum of the 1 row is = 13\\nSum of the 2 row is = 6\\nSum of the 0 column is = 8\\nSum of the 1 column is = 9\\nSum of the 2 column is = 8\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"33. Write a Java program to find sum of each row and column of a matrix.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to find sum of each row and column of a matrix.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n          Scanner z=new Scanner(System.in);\\n          int array[][]= new int[3][3],i,j,sum=0;\\n          System.out.printf(\\\"Enter 9 co-efficients of the matrix-\\\\n\\\");\\n          for (i = 0; i < 3; ++i)\\n          {\\n              for (j = 0; j < 3; ++j)\\n              {\\n                  array[i][j] = z.nextInt();\\n              }\\n          }\\n          System.out.printf(\\\"The given matrix is \\\\n\\\");\\n          for (i = 0; i < 3; ++i)\\n          {\\n              for (j = 0; j < 3; ++j)\\n              {\\n                  System.out.printf(\\\"\\\\t\\\"+array[i][j]);\\n              }\\n              System.out.printf(\\\"\\\\n\\\");\\n          }\\n\\n          for (i = 0; i < 3; ++i)\\n          {\\n              for (j = 0; j < 3; ++j)\\n              {\\n                  sum = sum + array[i][j] ;\\n              }\\n\\n              System.out.println(\\\"Sum of the \\\" + i + \\\" row is = \\\"+ sum);\\n              sum = 0;\\n          }\\n          sum = 0;\\n          for (j = 0; j < 3; ++j)\\n          {\\n              for (i = 0; i < 3; ++i)\\n              {\\n                  sum = sum + array[i][j];\\n              }\\n\\n              System.out.println(\\\"Sum of the \\\" + j + \\\" column is = \\\"+sum);\\n              sum = 0;\\n          }\\n      }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 9 co-efficients of the matrix-\\n1 2 3 4 5 4 3 2 1\\nThe given matrix is\\n 1 2 3\\n 4 5 4\\n 3 2 1\\nSum of the 0 row is = 6\\nSum of the 1 row is = 13\\nSum of the 2 row is = 6\\nSum of the 0 column is = 8\\nSum of the 1 column is = 9\\nSum of the 2 column is = 8\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find sum of each row and column of a matrix.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`33. Write a C program to find sum of each row and column of a matrix.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to find sum of each row and column of a matrix.\n#include <stdio.h>\nvoid main ()\n{\n    int array[3][3],i,j,sum=0;\n    printf(\"Enter 9 co-efficients of the matrix-\\\\n\");\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            scanf(\"%d\", &array[i][j]);\n        }\n    }\n    printf(\"The given matrix is \\\\n\");\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            printf(\" %d\", array[i][j]);\n        }\n        printf(\"\\\\n\");\n    }\n\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            sum = sum + array[i][j] ;\n        }\n\n        printf(\"Sum of the %d row is = %d\\\\n\", i, sum);\n        sum = 0;\n\n    }\n    sum = 0;\n    for (j = 0; j < 3; ++j)\n    {\n        for (i = 0; i < 3; ++i)\n        {\n            sum = sum + array[i][j];\n        }\n\n        printf(\"Sum of the %d column is = %d\\\\n\", j, sum);\n        sum = 0;\n\n    }\n\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter 9 co-efficients of the matrix-\n1 2 3 4 5 4 3 2 1\nThe given matrix is\n 1 2 3\n 4 5 4\n 3 2 1\nSum of the 0 row is = 6\nSum of the 1 row is = 13\nSum of the 2 row is = 6\nSum of the 0 column is = 8\nSum of the 1 column is = 9\nSum of the 2 column is = 8\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`33. Write a C++ program to find sum of each row and column of a matrix.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to find sum of each row and column of a matrix.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    int array[3][3],i,j,sum=0;\n    cout << \"Enter 9 co-efficients of the matrix-\\\\n\";\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            cin >> array[i][j];\n        }\n    }\n    cout << \"The given matrix is \\\\n\";\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            cout << \"\\\\t\" << arr1[i][j];\n        }\n        cout << \"\\\\n\";\n    }\n\n    for (i = 0; i < 3; ++i)\n    {\n        for (j = 0; j < 3; ++j)\n        {\n            sum = sum + array[i][j] ;\n        }\n\n        cout << \"Sum of the \" << i << \" row is = \" << sum << endl);\n        sum = 0;\n\n    }\n    sum = 0;\n    for (j = 0; j < 3; ++j)\n    {\n        for (i = 0; i < 3; ++i)\n        {\n            sum = sum + array[i][j];\n        }\n\n        cout << \"Sum of the \" << j << \" row is = \" << sum << endl);\n        sum = 0;\n\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter 9 co-efficients of the matrix-\n1 2 3 4 5 4 3 2 1\nThe given matrix is\n 1 2 3\n 4 5 4\n 3 2 1\nSum of the 0 row is = 6\nSum of the 1 row is = 13\nSum of the 2 row is = 6\nSum of the 0 column is = 8\nSum of the 1 column is = 9\nSum of the 2 column is = 8\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`33. Write a Java program to find sum of each row and column of a matrix.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to find sum of each row and column of a matrix.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z=new Scanner(System.in);\n          int array[][]= new int[3][3],i,j,sum=0;\n          System.out.printf(\"Enter 9 co-efficients of the matrix-\\\\n\");\n          for (i = 0; i < 3; ++i)\n          {\n              for (j = 0; j < 3; ++j)\n              {\n                  array[i][j] = z.nextInt();\n              }\n          }\n          System.out.printf(\"The given matrix is \\\\n\");\n          for (i = 0; i < 3; ++i)\n          {\n              for (j = 0; j < 3; ++j)\n              {\n                  System.out.printf(\"\\\\t\"+array[i][j]);\n              }\n              System.out.printf(\"\\\\n\");\n          }\n\n          for (i = 0; i < 3; ++i)\n          {\n              for (j = 0; j < 3; ++j)\n              {\n                  sum = sum + array[i][j] ;\n              }\n\n              System.out.println(\"Sum of the \" + i + \" row is = \"+ sum);\n              sum = 0;\n          }\n          sum = 0;\n          for (j = 0; j < 3; ++j)\n          {\n              for (i = 0; i < 3; ++i)\n              {\n                  sum = sum + array[i][j];\n              }\n\n              System.out.println(\"Sum of the \" + j + \" column is = \"+sum);\n              sum = 0;\n          }\n      }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter 9 co-efficients of the matrix-\n1 2 3 4 5 4 3 2 1\nThe given matrix is\n 1 2 3\n 4 5 4\n 3 2 1\nSum of the 0 row is = 6\nSum of the 1 row is = 13\nSum of the 2 row is = 6\nSum of the 0 column is = 8\nSum of the 1 column is = 9\nSum of the 2 column is = 8\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}