{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-95bee80b6cd738dfacb81a4aede0d9fe--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"24. Write a C program to check whether a character is digit or not.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":72,"offset":94},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":72,"offset":94},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to check whether a character is digit or not.\n#include <stdio.h>\nint main()\n{\n    char ch;\n\n    printf(\"enter a character: \");\n    scanf(\"%c\", &ch);\n    if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))\n    {\n        printf(\"This is an alphabet\\n\");\n    }\n    else if(ch>='0' && ch<='9')\n    {\n        printf(\"This is a digit\\n\");\n    }\n    else\n    {\n        printf(\"This is a special character\\n\");\n    }\n}","position":{"start":{"line":4,"column":1,"offset":96},"end":{"line":26,"column":4,"offset":554},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":27,"column":5,"offset":560},"end":{"line":27,"column":11,"offset":566},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":556},"end":{"line":27,"column":11,"offset":566},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter a character: a\nThis is an alphabet","position":{"start":{"line":28,"column":1,"offset":568},"end":{"line":31,"column":4,"offset":619},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":32,"column":4,"offset":624},"end":{"line":32,"column":22,"offset":642},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":621},"end":{"line":32,"column":22,"offset":642},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"24. Write a C++ program to check whether a character is digit or not.","position":{"start":{"line":33,"column":5,"offset":648},"end":{"line":33,"column":74,"offset":717},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":644},"end":{"line":33,"column":74,"offset":717},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to check whether a character is digit or not.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char ch;\n\n    printf(\"enter a character: \";\n    cin >> ch;\n    if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))\n    {\n        cout << \"This is an alphabet\\n\";\n    }\n    else if(ch>='0' && ch<='9')\n    {\n        cout << \"This is a digit\\n\";\n    }\n    else\n    {\n        cout << \"This is a special character\\n\";\n    }\n}","position":{"start":{"line":34,"column":1,"offset":719},"end":{"line":59,"column":4,"offset":1217},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":60,"column":5,"offset":1223},"end":{"line":60,"column":11,"offset":1229},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1219},"end":{"line":60,"column":11,"offset":1229},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter a character: a\nThis is an alphabet","position":{"start":{"line":61,"column":1,"offset":1231},"end":{"line":64,"column":4,"offset":1282},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":66,"column":4,"offset":1289},"end":{"line":66,"column":23,"offset":1308},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1286},"end":{"line":66,"column":23,"offset":1308},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"24. Write a Java program to check whether a character is digit or not.","position":{"start":{"line":67,"column":5,"offset":1314},"end":{"line":67,"column":75,"offset":1384},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1310},"end":{"line":67,"column":75,"offset":1384},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to check whether a character is digit or not.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        System.out.println(\"Enter a character: \");\n        Char ch;\n        ch = z.nextChar();\n        if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))\n        {\n            System.out.println(\"This is an alphabet\");\n        }\n        else if(ch>='0' && ch<='9')\n        {\n            System.out.println(\"This is a digit\");\n        }\n        else\n        {\n            System.out.println(\"This is a special character\");\n        }\n    }\n}","position":{"start":{"line":68,"column":1,"offset":1386},"end":{"line":91,"column":4,"offset":2062},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":92,"column":5,"offset":2068},"end":{"line":92,"column":11,"offset":2074},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2064},"end":{"line":92,"column":11,"offset":2074},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter a character: a\nThis is an alphabet","position":{"start":{"line":93,"column":1,"offset":2076},"end":{"line":96,"column":4,"offset":2127},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to check whether a character is digit or not.\",\"category\":\"String Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":99,"column":1,"offset":2131},"end":{"line":99,"column":238,"offset":2368},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":99,"column":238,"offset":2368}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether a character is digit or not.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"24. Write a C program to check whether a character is digit or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to check whether a character is digit or not.\\n#include <stdio.h>\\nint main()\\n{\\n    char ch;\\n\\n    printf(\\\"enter a character: \\\");\\n    scanf(\\\"%c\\\", &ch);\\n    if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))\\n    {\\n        printf(\\\"This is an alphabet\\\\n\\\");\\n    }\\n    else if(ch>='0' && ch<='9')\\n    {\\n        printf(\\\"This is a digit\\\\n\\\");\\n    }\\n    else\\n    {\\n        printf(\\\"This is a special character\\\\n\\\");\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter a character: a\\nThis is an alphabet\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"24. Write a C++ program to check whether a character is digit or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to check whether a character is digit or not.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint main()\\n{\\n    char ch;\\n\\n    printf(\\\"enter a character: \\\";\\n    cin >> ch;\\n    if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))\\n    {\\n        cout << \\\"This is an alphabet\\\\n\\\";\\n    }\\n    else if(ch>='0' && ch<='9')\\n    {\\n        cout << \\\"This is a digit\\\\n\\\";\\n    }\\n    else\\n    {\\n        cout << \\\"This is a special character\\\\n\\\";\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter a character: a\\nThis is an alphabet\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"24. Write a Java program to check whether a character is digit or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to check whether a character is digit or not.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z=new Scanner(System.in);\\n        System.out.println(\\\"Enter a character: \\\");\\n        Char ch;\\n        ch = z.nextChar();\\n        if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))\\n        {\\n            System.out.println(\\\"This is an alphabet\\\");\\n        }\\n        else if(ch>='0' && ch<='9')\\n        {\\n            System.out.println(\\\"This is a digit\\\");\\n        }\\n        else\\n        {\\n            System.out.println(\\\"This is a special character\\\");\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter a character: a\\nThis is an alphabet\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether a character is digit or not.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`24. Write a C program to check whether a character is digit or not.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to check whether a character is digit or not.\n#include <stdio.h>\nint main()\n{\n    char ch;\n\n    printf(\"enter a character: \");\n    scanf(\"%c\", &ch);\n    if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))\n    {\n        printf(\"This is an alphabet\\\\n\");\n    }\n    else if(ch>='0' && ch<='9')\n    {\n        printf(\"This is a digit\\\\n\");\n    }\n    else\n    {\n        printf(\"This is a special character\\\\n\");\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter a character: a\nThis is an alphabet\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`24. Write a C++ program to check whether a character is digit or not.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to check whether a character is digit or not.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char ch;\n\n    printf(\"enter a character: \";\n    cin >> ch;\n    if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))\n    {\n        cout << \"This is an alphabet\\\\n\";\n    }\n    else if(ch>='0' && ch<='9')\n    {\n        cout << \"This is a digit\\\\n\";\n    }\n    else\n    {\n        cout << \"This is a special character\\\\n\";\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter a character: a\nThis is an alphabet\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`24. Write a Java program to check whether a character is digit or not.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to check whether a character is digit or not.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        System.out.println(\"Enter a character: \");\n        Char ch;\n        ch = z.nextChar();\n        if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))\n        {\n            System.out.println(\"This is an alphabet\");\n        }\n        else if(ch>='0' && ch<='9')\n        {\n            System.out.println(\"This is a digit\");\n        }\n        else\n        {\n            System.out.println(\"This is a special character\");\n        }\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter a character: a\nThis is an alphabet\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}