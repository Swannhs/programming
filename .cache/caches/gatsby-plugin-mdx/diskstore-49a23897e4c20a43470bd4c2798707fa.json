{"expireTime":9007200883706949000,"key":"gatsby-plugin-mdx-entire-payload-a143b17f8144e2050f68fd7ef5760ea3--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"27. Write a C program to subtract two matrices.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":52,"offset":74},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":52,"offset":74},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to subtract two matrices.\n#include <stdio.h>\nvoid main()\n{\n    int arr1[3][3],brr1[3][3],crr1[3][3],i,j;\n    printf(\"Input elements in the first matrix :\\n\");\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            printf(\"element - [%d],[%d] : \",i,j);\n            scanf(\"%d\",&arr1[i][j]);\n        }\n    }\n    printf(\"Input elements in the second matrix :\\n\");\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            printf(\"element - [%d],[%d] : \",i,j);\n            scanf(\"%d\",&brr1[i][j]);\n        }\n    }\n    printf(\"\\nThe First matrix is :\\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\t\",arr1[i][j]);\n    }\n    printf(\"\\nThe Second matrix is :\\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\t\",brr1[i][j]);\n    }\n    for(i=0; i<3; i++)\n        for(j=0; j<3; j++)\n            crr1[i][j]=arr1[i][j]-brr1[i][j];\n    printf(\"\\nThe subtraction of two matrix is : \\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\t\",crr1[i][j]);\n    }\n}","position":{"start":{"line":4,"column":1,"offset":76},"end":{"line":53,"column":4,"offset":1310},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":54,"column":5,"offset":1316},"end":{"line":54,"column":11,"offset":1322},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1312},"end":{"line":54,"column":11,"offset":1322},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input elements in the first matrix :\nelement - [0],[0] : 9 8 7\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n9       8       7\n6       5       4\n3       2       1\nThe Second matrix is :\n\n1       2       3\n4       5       6\n7       8       9\nThe subtraction of two matrix is :\n\n8       6       4\n2       0       -2\n-4      -6      -8","position":{"start":{"line":55,"column":1,"offset":1324},"end":{"line":80,"column":4,"offset":2074},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":81,"column":4,"offset":2079},"end":{"line":81,"column":22,"offset":2097},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2076},"end":{"line":81,"column":22,"offset":2097},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"27. Write a C++ program to subtract two matrices.","position":{"start":{"line":82,"column":5,"offset":2103},"end":{"line":82,"column":54,"offset":2152},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2099},"end":{"line":82,"column":54,"offset":2152},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to subtract two matrices.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    int arr1[3][3],brr1[3][3],crr1[3][3],i,j;\n    cout << \"Input elements in the first matrix :\\n\";\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            cout << \"element -  : [\" << i << \"][\" << j << \"]\";\n            cin >> arr1[i][j];\n        }\n    }\n    cout << \"Input elements in the second matrix :\\n\";\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            cout << \"element -  : [\" << i << \"][\" << j <<\"]\";\n            cin >> brr1[i][j];\n        }\n    }\n    cout << \"\\nThe First matrix is :\\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\t\" << arr1[i][j];\n    }\n    cout << \"\\nThe Second matrix is :\\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\t\" << brr1[i][j];\n    }\n    for(i=0; i<3; i++)\n        for(j=0; j<3; j++)\n            crr1[i][j]=arr1[i][j]-brr1[i][j];\n    cout << \"\\nThe subtraction of two matrix is : \\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\t\" << crr1[i][j];\n    }\n}","position":{"start":{"line":83,"column":1,"offset":2154},"end":{"line":134,"column":4,"offset":3431},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":135,"column":5,"offset":3437},"end":{"line":135,"column":11,"offset":3443},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":3433},"end":{"line":135,"column":11,"offset":3443},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input elements in the first matrix :\nelement - [0],[0] : 9 8 7\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n9       8       7\n6       5       4\n3       2       1\nThe Second matrix is :\n\n1       2       3\n4       5       6\n7       8       9\nThe subtraction of two matrix is :\n\n8       6       4\n2       0       -2\n-4      -6      -8","position":{"start":{"line":136,"column":1,"offset":3445},"end":{"line":161,"column":4,"offset":4195},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":163,"column":4,"offset":4202},"end":{"line":163,"column":23,"offset":4221},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":4199},"end":{"line":163,"column":23,"offset":4221},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"27. Write a Java program to subtract two matrices.","position":{"start":{"line":164,"column":5,"offset":4227},"end":{"line":164,"column":55,"offset":4277},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":4223},"end":{"line":164,"column":55,"offset":4277},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to subtract two matrices.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n          Scanner z=new Scanner(System.in);\n          int arr1[][]= new int[3][3],brr1[][] = new int[3][3],crr1[][]= new int[3][3],i,j;\n          System.out.printf(\"Input elements in the first matrix :\\n\");\n          for(i=0; i<3; i++)\n          {\n              for(j=0; j<3; j++)\n              {\n                  System.out.printf(\"element - : \"+\"[\"+i+\"]\"+\"[\"+j+\"]\");\n                  arr1[i][j] = z.nextInt();\n              }\n          }\n          System.out.printf(\"Input elements in the second matrix :\\n\");\n          for(i=0; i<3; i++)\n          {\n              for(j=0; j<3; j++)\n              {\n                  System.out.printf(\"element - : \"+\"[\"+i+\"]\"+\"[\"+j+\"]\");\n                  brr1[i][j] = z.nextInt();\n              }\n          }\n          System.out.printf(\"\\nThe First matrix is :\\n\");\n          for(i=0; i<3; i++)\n          {\n              System.out.printf(\"\\n\");\n              for(j=0; j<3; j++)\n                  System.out.printf(\"\\t\"+arr1[i][j]);\n          }\n          System.out.printf(\"\\nThe Second matrix is :\\n\");\n          for(i=0; i<3; i++)\n          {\n              System.out.printf(\"\\n\");\n              for(j=0; j<3; j++)\n                  System.out.printf(\"\\t\"+brr1[i][j]);\n          }\n          for(i=0; i<3; i++)\n              for(j=0; j<3; j++)\n                  crr1[i][j]=arr1[i][j]-brr1[i][j];\n          System.out.printf(\"\\nThe subtraction of two matrix is : \\n\");\n          for(i=0; i<3; i++)\n          {\n              System.out.printf(\"\\n\");\n              for(j=0; j<3; j++)\n                  System.out.printf(\"\\t\"+crr1[i][j]);\n          }\n      }\n}","position":{"start":{"line":165,"column":1,"offset":4279},"end":{"line":217,"column":4,"offset":6084},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":218,"column":5,"offset":6090},"end":{"line":218,"column":11,"offset":6096},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":6086},"end":{"line":218,"column":11,"offset":6096},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input elements in the first matrix :\nelement - [0],[0] : 9 8 7\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n9       8       7\n6       5       4\n3       2       1\nThe Second matrix is :\n\n1       2       3\n4       5       6\n7       8       9\nThe subtraction of two matrix is :\n\n8       6       4\n2       0       -2\n-4      -6      -8","position":{"start":{"line":219,"column":1,"offset":6098},"end":{"line":244,"column":4,"offset":6848},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to subtract two matrices.\",\"category\":\"Array Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":247,"column":1,"offset":6852},"end":{"line":247,"column":225,"offset":7076},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":247,"column":225,"offset":7076}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to subtract two matrices.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"27. Write a C program to subtract two matrices.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to subtract two matrices.\\n#include <stdio.h>\\nvoid main()\\n{\\n    int arr1[3][3],brr1[3][3],crr1[3][3],i,j;\\n    printf(\\\"Input elements in the first matrix :\\\\n\\\");\\n    for(i=0; i<3; i++)\\n    {\\n        for(j=0; j<3; j++)\\n        {\\n            printf(\\\"element - [%d],[%d] : \\\",i,j);\\n            scanf(\\\"%d\\\",&arr1[i][j]);\\n        }\\n    }\\n    printf(\\\"Input elements in the second matrix :\\\\n\\\");\\n    for(i=0; i<3; i++)\\n    {\\n        for(j=0; j<3; j++)\\n        {\\n            printf(\\\"element - [%d],[%d] : \\\",i,j);\\n            scanf(\\\"%d\\\",&brr1[i][j]);\\n        }\\n    }\\n    printf(\\\"\\\\nThe First matrix is :\\\\n\\\");\\n    for(i=0; i<3; i++)\\n    {\\n        printf(\\\"\\\\n\\\");\\n        for(j=0; j<3; j++)\\n            printf(\\\"%d\\\\t\\\",arr1[i][j]);\\n    }\\n    printf(\\\"\\\\nThe Second matrix is :\\\\n\\\");\\n    for(i=0; i<3; i++)\\n    {\\n        printf(\\\"\\\\n\\\");\\n        for(j=0; j<3; j++)\\n            printf(\\\"%d\\\\t\\\",brr1[i][j]);\\n    }\\n    for(i=0; i<3; i++)\\n        for(j=0; j<3; j++)\\n            crr1[i][j]=arr1[i][j]-brr1[i][j];\\n    printf(\\\"\\\\nThe subtraction of two matrix is : \\\\n\\\");\\n    for(i=0; i<3; i++)\\n    {\\n        printf(\\\"\\\\n\\\");\\n        for(j=0; j<3; j++)\\n            printf(\\\"%d\\\\t\\\",crr1[i][j]);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the first matrix :\\nelement - [0],[0] : 9 8 7\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\\nelement - [0],[0] : 1 2 3\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\\nelement - [2],[1] : element - [2],[2] :\\nThe First matrix is :\\n\\n9       8       7\\n6       5       4\\n3       2       1\\nThe Second matrix is :\\n\\n1       2       3\\n4       5       6\\n7       8       9\\nThe subtraction of two matrix is :\\n\\n8       6       4\\n2       0       -2\\n-4      -6      -8\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"27. Write a C++ program to subtract two matrices.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to subtract two matrices.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n    int arr1[3][3],brr1[3][3],crr1[3][3],i,j;\\n    cout << \\\"Input elements in the first matrix :\\\\n\\\";\\n    for(i=0; i<3; i++)\\n    {\\n        for(j=0; j<3; j++)\\n        {\\n            cout << \\\"element -  : [\\\" << i << \\\"][\\\" << j << \\\"]\\\";\\n            cin >> arr1[i][j];\\n        }\\n    }\\n    cout << \\\"Input elements in the second matrix :\\\\n\\\";\\n    for(i=0; i<3; i++)\\n    {\\n        for(j=0; j<3; j++)\\n        {\\n            cout << \\\"element -  : [\\\" << i << \\\"][\\\" << j <<\\\"]\\\";\\n            cin >> brr1[i][j];\\n        }\\n    }\\n    cout << \\\"\\\\nThe First matrix is :\\\\n\\\";\\n    for(i=0; i<3; i++)\\n    {\\n        cout << \\\"\\\\n\\\";\\n        for(j=0; j<3; j++)\\n            cout << \\\"\\\\t\\\" << arr1[i][j];\\n    }\\n    cout << \\\"\\\\nThe Second matrix is :\\\\n\\\";\\n    for(i=0; i<3; i++)\\n    {\\n        cout << \\\"\\\\n\\\";\\n        for(j=0; j<3; j++)\\n            cout << \\\"\\\\t\\\" << brr1[i][j];\\n    }\\n    for(i=0; i<3; i++)\\n        for(j=0; j<3; j++)\\n            crr1[i][j]=arr1[i][j]-brr1[i][j];\\n    cout << \\\"\\\\nThe subtraction of two matrix is : \\\\n\\\";\\n    for(i=0; i<3; i++)\\n    {\\n        cout << \\\"\\\\n\\\";\\n        for(j=0; j<3; j++)\\n            cout << \\\"\\\\t\\\" << crr1[i][j];\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the first matrix :\\nelement - [0],[0] : 9 8 7\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\\nelement - [0],[0] : 1 2 3\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\\nelement - [2],[1] : element - [2],[2] :\\nThe First matrix is :\\n\\n9       8       7\\n6       5       4\\n3       2       1\\nThe Second matrix is :\\n\\n1       2       3\\n4       5       6\\n7       8       9\\nThe subtraction of two matrix is :\\n\\n8       6       4\\n2       0       -2\\n-4      -6      -8\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"27. Write a Java program to subtract two matrices.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to subtract two matrices.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n          Scanner z=new Scanner(System.in);\\n          int arr1[][]= new int[3][3],brr1[][] = new int[3][3],crr1[][]= new int[3][3],i,j;\\n          System.out.printf(\\\"Input elements in the first matrix :\\\\n\\\");\\n          for(i=0; i<3; i++)\\n          {\\n              for(j=0; j<3; j++)\\n              {\\n                  System.out.printf(\\\"element - : \\\"+\\\"[\\\"+i+\\\"]\\\"+\\\"[\\\"+j+\\\"]\\\");\\n                  arr1[i][j] = z.nextInt();\\n              }\\n          }\\n          System.out.printf(\\\"Input elements in the second matrix :\\\\n\\\");\\n          for(i=0; i<3; i++)\\n          {\\n              for(j=0; j<3; j++)\\n              {\\n                  System.out.printf(\\\"element - : \\\"+\\\"[\\\"+i+\\\"]\\\"+\\\"[\\\"+j+\\\"]\\\");\\n                  brr1[i][j] = z.nextInt();\\n              }\\n          }\\n          System.out.printf(\\\"\\\\nThe First matrix is :\\\\n\\\");\\n          for(i=0; i<3; i++)\\n          {\\n              System.out.printf(\\\"\\\\n\\\");\\n              for(j=0; j<3; j++)\\n                  System.out.printf(\\\"\\\\t\\\"+arr1[i][j]);\\n          }\\n          System.out.printf(\\\"\\\\nThe Second matrix is :\\\\n\\\");\\n          for(i=0; i<3; i++)\\n          {\\n              System.out.printf(\\\"\\\\n\\\");\\n              for(j=0; j<3; j++)\\n                  System.out.printf(\\\"\\\\t\\\"+brr1[i][j]);\\n          }\\n          for(i=0; i<3; i++)\\n              for(j=0; j<3; j++)\\n                  crr1[i][j]=arr1[i][j]-brr1[i][j];\\n          System.out.printf(\\\"\\\\nThe subtraction of two matrix is : \\\\n\\\");\\n          for(i=0; i<3; i++)\\n          {\\n              System.out.printf(\\\"\\\\n\\\");\\n              for(j=0; j<3; j++)\\n                  System.out.printf(\\\"\\\\t\\\"+crr1[i][j]);\\n          }\\n      }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the first matrix :\\nelement - [0],[0] : 9 8 7\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\\nelement - [0],[0] : 1 2 3\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\\nelement - [2],[1] : element - [2],[2] :\\nThe First matrix is :\\n\\n9       8       7\\n6       5       4\\n3       2       1\\nThe Second matrix is :\\n\\n1       2       3\\n4       5       6\\n7       8       9\\nThe subtraction of two matrix is :\\n\\n8       6       4\\n2       0       -2\\n-4      -6      -8\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to subtract two matrices.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`27. Write a C program to subtract two matrices.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to subtract two matrices.\n#include <stdio.h>\nvoid main()\n{\n    int arr1[3][3],brr1[3][3],crr1[3][3],i,j;\n    printf(\"Input elements in the first matrix :\\\\n\");\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            printf(\"element - [%d],[%d] : \",i,j);\n            scanf(\"%d\",&arr1[i][j]);\n        }\n    }\n    printf(\"Input elements in the second matrix :\\\\n\");\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            printf(\"element - [%d],[%d] : \",i,j);\n            scanf(\"%d\",&brr1[i][j]);\n        }\n    }\n    printf(\"\\\\nThe First matrix is :\\\\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\\\t\",arr1[i][j]);\n    }\n    printf(\"\\\\nThe Second matrix is :\\\\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\\\t\",brr1[i][j]);\n    }\n    for(i=0; i<3; i++)\n        for(j=0; j<3; j++)\n            crr1[i][j]=arr1[i][j]-brr1[i][j];\n    printf(\"\\\\nThe subtraction of two matrix is : \\\\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\\\t\",crr1[i][j]);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input elements in the first matrix :\nelement - [0],[0] : 9 8 7\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n9       8       7\n6       5       4\n3       2       1\nThe Second matrix is :\n\n1       2       3\n4       5       6\n7       8       9\nThe subtraction of two matrix is :\n\n8       6       4\n2       0       -2\n-4      -6      -8\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`27. Write a C++ program to subtract two matrices.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to subtract two matrices.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    int arr1[3][3],brr1[3][3],crr1[3][3],i,j;\n    cout << \"Input elements in the first matrix :\\\\n\";\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            cout << \"element -  : [\" << i << \"][\" << j << \"]\";\n            cin >> arr1[i][j];\n        }\n    }\n    cout << \"Input elements in the second matrix :\\\\n\";\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            cout << \"element -  : [\" << i << \"][\" << j <<\"]\";\n            cin >> brr1[i][j];\n        }\n    }\n    cout << \"\\\\nThe First matrix is :\\\\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\\\t\" << arr1[i][j];\n    }\n    cout << \"\\\\nThe Second matrix is :\\\\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\\\t\" << brr1[i][j];\n    }\n    for(i=0; i<3; i++)\n        for(j=0; j<3; j++)\n            crr1[i][j]=arr1[i][j]-brr1[i][j];\n    cout << \"\\\\nThe subtraction of two matrix is : \\\\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\\\t\" << crr1[i][j];\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input elements in the first matrix :\nelement - [0],[0] : 9 8 7\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n9       8       7\n6       5       4\n3       2       1\nThe Second matrix is :\n\n1       2       3\n4       5       6\n7       8       9\nThe subtraction of two matrix is :\n\n8       6       4\n2       0       -2\n-4      -6      -8\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`27. Write a Java program to subtract two matrices.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to subtract two matrices.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n          Scanner z=new Scanner(System.in);\n          int arr1[][]= new int[3][3],brr1[][] = new int[3][3],crr1[][]= new int[3][3],i,j;\n          System.out.printf(\"Input elements in the first matrix :\\\\n\");\n          for(i=0; i<3; i++)\n          {\n              for(j=0; j<3; j++)\n              {\n                  System.out.printf(\"element - : \"+\"[\"+i+\"]\"+\"[\"+j+\"]\");\n                  arr1[i][j] = z.nextInt();\n              }\n          }\n          System.out.printf(\"Input elements in the second matrix :\\\\n\");\n          for(i=0; i<3; i++)\n          {\n              for(j=0; j<3; j++)\n              {\n                  System.out.printf(\"element - : \"+\"[\"+i+\"]\"+\"[\"+j+\"]\");\n                  brr1[i][j] = z.nextInt();\n              }\n          }\n          System.out.printf(\"\\\\nThe First matrix is :\\\\n\");\n          for(i=0; i<3; i++)\n          {\n              System.out.printf(\"\\\\n\");\n              for(j=0; j<3; j++)\n                  System.out.printf(\"\\\\t\"+arr1[i][j]);\n          }\n          System.out.printf(\"\\\\nThe Second matrix is :\\\\n\");\n          for(i=0; i<3; i++)\n          {\n              System.out.printf(\"\\\\n\");\n              for(j=0; j<3; j++)\n                  System.out.printf(\"\\\\t\"+brr1[i][j]);\n          }\n          for(i=0; i<3; i++)\n              for(j=0; j<3; j++)\n                  crr1[i][j]=arr1[i][j]-brr1[i][j];\n          System.out.printf(\"\\\\nThe subtraction of two matrix is : \\\\n\");\n          for(i=0; i<3; i++)\n          {\n              System.out.printf(\"\\\\n\");\n              for(j=0; j<3; j++)\n                  System.out.printf(\"\\\\t\"+crr1[i][j]);\n          }\n      }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input elements in the first matrix :\nelement - [0],[0] : 9 8 7\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\nelement - [0],[0] : 1 2 3\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\nelement - [2],[1] : element - [2],[2] :\nThe First matrix is :\n\n9       8       7\n6       5       4\n3       2       1\nThe Second matrix is :\n\n1       2       3\n4       5       6\n7       8       9\nThe subtraction of two matrix is :\n\n8       6       4\n2       0       -2\n-4      -6      -8\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}