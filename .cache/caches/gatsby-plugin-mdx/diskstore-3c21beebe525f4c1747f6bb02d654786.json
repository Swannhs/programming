{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-4edbdffe99dcf3028338bc289c8a8028--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"30. Write a C program to remove first occurrence of a word from string.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":76,"offset":98},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":76,"offset":98},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to remove first occurrence of a word from string.\n#include <string.h>\n\nint main()\n{\n    char s[1000],w[1000];\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\n\n    printf(\"Enter  the string : \");\n    gets(s);\n    printf(\"Enter word to be remove: \");\n    gets(w);\n    for(i=0;s[i];i++)\n    {\n        if(s[i]==' ')\n        {\n            a[k++]=i;\n        }\n    }\n    a[k++]=i;\n    j=0;\n    for(i=0;i<k;i++)\n    {\n        n=a[i]-j;\n        if(n==strlen(w))\n        {\n            t=0;\n            for(l=0;w[l];l++)\n            {\n                if(s[l+j]==w[l])\n                {\n                    t++;\n                }\n            }\n            if(t==strlen(w))\n            {\n               break;\n            }\n        }\n\n        j=a[i]+1;\n    }\n    l=0;\n    i=j+t+1;\n    while(s[j+l])\n    {\n        s[j+l]=s[j+t+l+1];\n        l++;\n    }\n\n     printf(\"'%s'\",s);\n\n\n}","position":{"start":{"line":4,"column":1,"offset":100},"end":{"line":59,"column":4,"offset":1042},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":60,"column":5,"offset":1048},"end":{"line":60,"column":11,"offset":1054},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1044},"end":{"line":60,"column":11,"offset":1054},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter  the string : hello coder\nEnter word to be remove: coder\n'hello '","position":{"start":{"line":61,"column":1,"offset":1056},"end":{"line":65,"column":4,"offset":1139},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":66,"column":4,"offset":1144},"end":{"line":66,"column":22,"offset":1162},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1141},"end":{"line":66,"column":22,"offset":1162},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"30. Write a C++ program to remove first occurrence of a word from string.","position":{"start":{"line":67,"column":5,"offset":1168},"end":{"line":67,"column":78,"offset":1241},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1164},"end":{"line":67,"column":78,"offset":1241},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to remove first occurrence of a word from string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char s[1000],w[1000];\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\n\n    cout << \"Enter  the string : \";\n    cin >> s;\n    cout << \"Enter word to be remove: \";\n    cin >> w;\n    for(i=0;s[i];i++)\n    {\n        if(s[i]==' ')\n        {\n            a[k++]=i;\n        }\n    }\n    a[k++]=i;\n    j=0;\n    for(i=0;i<k;i++)\n    {\n        n=a[i]-j;\n        if(n==strlen(w))\n        {\n            t=0;\n            for(l=0;w[l];l++)\n            {\n                if(s[l+j]==w[l])\n                {\n                    t++;\n                }\n            }\n            if(t==strlen(w))\n            {\n               break;\n            }\n        }\n\n        j=a[i]+1;\n    }\n    l=0;\n    i=j+t+1;\n    while(s[j+l])\n    {\n        s[j+l]=s[j+t+l+1];\n        l++;\n    }\n\n     cout << s;\n}","position":{"start":{"line":68,"column":1,"offset":1243},"end":{"line":123,"column":4,"offset":2221},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":124,"column":5,"offset":2227},"end":{"line":124,"column":11,"offset":2233},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":2223},"end":{"line":124,"column":11,"offset":2233},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter  the string : hello coder\nEnter word to be remove: coder\n'hello '","position":{"start":{"line":125,"column":1,"offset":2235},"end":{"line":129,"column":4,"offset":2318},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":131,"column":4,"offset":2325},"end":{"line":131,"column":23,"offset":2344},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":2322},"end":{"line":131,"column":23,"offset":2344},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"30. Write a Java program to remove first occurrence of a word from string.","position":{"start":{"line":132,"column":5,"offset":2350},"end":{"line":132,"column":79,"offset":2424},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":2346},"end":{"line":132,"column":79,"offset":2424},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to remove first occurrence of a word from string.\nimport java.util.Scanner;\n\nclass Funycode{\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        String str, word;\n        System.out.println(\"Enter  the string : \");\n        str = z.nextLine();\n        System.out.println(\"Enter word to be remove: \");\n        word = z.nextLine();\n\n        String meg[] = str.split(\" \");\n        String new_str = \"\";\n\n        for (String words : meg){\n            if (!words.equals(word)){\n                new_str += words + \" \";\n            }\n        }\n        System.out.print(new_str);\n    }\n}","position":{"start":{"line":133,"column":1,"offset":2426},"end":{"line":157,"column":4,"offset":3105},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":158,"column":5,"offset":3111},"end":{"line":158,"column":11,"offset":3117},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":3107},"end":{"line":158,"column":11,"offset":3117},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter  the string : hello coder\nEnter word to be remove: coder\n'hello '","position":{"start":{"line":159,"column":1,"offset":3119},"end":{"line":163,"column":4,"offset":3202},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to remove first occurrence of a word from string.\",\"category\":\"String Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":166,"column":1,"offset":3206},"end":{"line":166,"column":242,"offset":3447},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":166,"column":242,"offset":3447}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to remove first occurrence of a word from string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"30. Write a C program to remove first occurrence of a word from string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to remove first occurrence of a word from string.\\n#include <string.h>\\n\\nint main()\\n{\\n    char s[1000],w[1000];\\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\\n\\n    printf(\\\"Enter  the string : \\\");\\n    gets(s);\\n    printf(\\\"Enter word to be remove: \\\");\\n    gets(w);\\n    for(i=0;s[i];i++)\\n    {\\n        if(s[i]==' ')\\n        {\\n            a[k++]=i;\\n        }\\n    }\\n    a[k++]=i;\\n    j=0;\\n    for(i=0;i<k;i++)\\n    {\\n        n=a[i]-j;\\n        if(n==strlen(w))\\n        {\\n            t=0;\\n            for(l=0;w[l];l++)\\n            {\\n                if(s[l+j]==w[l])\\n                {\\n                    t++;\\n                }\\n            }\\n            if(t==strlen(w))\\n            {\\n               break;\\n            }\\n        }\\n\\n        j=a[i]+1;\\n    }\\n    l=0;\\n    i=j+t+1;\\n    while(s[j+l])\\n    {\\n        s[j+l]=s[j+t+l+1];\\n        l++;\\n    }\\n\\n     printf(\\\"'%s'\\\",s);\\n\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter  the string : hello coder\\nEnter word to be remove: coder\\n'hello '\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"30. Write a C++ program to remove first occurrence of a word from string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to remove first occurrence of a word from string.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint main()\\n{\\n    char s[1000],w[1000];\\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\\n\\n    cout << \\\"Enter  the string : \\\";\\n    cin >> s;\\n    cout << \\\"Enter word to be remove: \\\";\\n    cin >> w;\\n    for(i=0;s[i];i++)\\n    {\\n        if(s[i]==' ')\\n        {\\n            a[k++]=i;\\n        }\\n    }\\n    a[k++]=i;\\n    j=0;\\n    for(i=0;i<k;i++)\\n    {\\n        n=a[i]-j;\\n        if(n==strlen(w))\\n        {\\n            t=0;\\n            for(l=0;w[l];l++)\\n            {\\n                if(s[l+j]==w[l])\\n                {\\n                    t++;\\n                }\\n            }\\n            if(t==strlen(w))\\n            {\\n               break;\\n            }\\n        }\\n\\n        j=a[i]+1;\\n    }\\n    l=0;\\n    i=j+t+1;\\n    while(s[j+l])\\n    {\\n        s[j+l]=s[j+t+l+1];\\n        l++;\\n    }\\n\\n     cout << s;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter  the string : hello coder\\nEnter word to be remove: coder\\n'hello '\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"30. Write a Java program to remove first occurrence of a word from string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to remove first occurrence of a word from string.\\nimport java.util.Scanner;\\n\\nclass Funycode{\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        String str, word;\\n        System.out.println(\\\"Enter  the string : \\\");\\n        str = z.nextLine();\\n        System.out.println(\\\"Enter word to be remove: \\\");\\n        word = z.nextLine();\\n\\n        String meg[] = str.split(\\\" \\\");\\n        String new_str = \\\"\\\";\\n\\n        for (String words : meg){\\n            if (!words.equals(word)){\\n                new_str += words + \\\" \\\";\\n            }\\n        }\\n        System.out.print(new_str);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter  the string : hello coder\\nEnter word to be remove: coder\\n'hello '\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to remove first occurrence of a word from string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`30. Write a C program to remove first occurrence of a word from string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to remove first occurrence of a word from string.\n#include <string.h>\n\nint main()\n{\n    char s[1000],w[1000];\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\n\n    printf(\"Enter  the string : \");\n    gets(s);\n    printf(\"Enter word to be remove: \");\n    gets(w);\n    for(i=0;s[i];i++)\n    {\n        if(s[i]==' ')\n        {\n            a[k++]=i;\n        }\n    }\n    a[k++]=i;\n    j=0;\n    for(i=0;i<k;i++)\n    {\n        n=a[i]-j;\n        if(n==strlen(w))\n        {\n            t=0;\n            for(l=0;w[l];l++)\n            {\n                if(s[l+j]==w[l])\n                {\n                    t++;\n                }\n            }\n            if(t==strlen(w))\n            {\n               break;\n            }\n        }\n\n        j=a[i]+1;\n    }\n    l=0;\n    i=j+t+1;\n    while(s[j+l])\n    {\n        s[j+l]=s[j+t+l+1];\n        l++;\n    }\n\n     printf(\"'%s'\",s);\n\n\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter  the string : hello coder\nEnter word to be remove: coder\n'hello '\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`30. Write a C++ program to remove first occurrence of a word from string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to remove first occurrence of a word from string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char s[1000],w[1000];\n    int n,a[1000],i,j,k=0,l,found=0,t=0;\n\n    cout << \"Enter  the string : \";\n    cin >> s;\n    cout << \"Enter word to be remove: \";\n    cin >> w;\n    for(i=0;s[i];i++)\n    {\n        if(s[i]==' ')\n        {\n            a[k++]=i;\n        }\n    }\n    a[k++]=i;\n    j=0;\n    for(i=0;i<k;i++)\n    {\n        n=a[i]-j;\n        if(n==strlen(w))\n        {\n            t=0;\n            for(l=0;w[l];l++)\n            {\n                if(s[l+j]==w[l])\n                {\n                    t++;\n                }\n            }\n            if(t==strlen(w))\n            {\n               break;\n            }\n        }\n\n        j=a[i]+1;\n    }\n    l=0;\n    i=j+t+1;\n    while(s[j+l])\n    {\n        s[j+l]=s[j+t+l+1];\n        l++;\n    }\n\n     cout << s;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter  the string : hello coder\nEnter word to be remove: coder\n'hello '\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`30. Write a Java program to remove first occurrence of a word from string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to remove first occurrence of a word from string.\nimport java.util.Scanner;\n\nclass Funycode{\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        String str, word;\n        System.out.println(\"Enter  the string : \");\n        str = z.nextLine();\n        System.out.println(\"Enter word to be remove: \");\n        word = z.nextLine();\n\n        String meg[] = str.split(\" \");\n        String new_str = \"\";\n\n        for (String words : meg){\n            if (!words.equals(word)){\n                new_str += words + \" \";\n            }\n        }\n        System.out.print(new_str);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter  the string : hello coder\nEnter word to be remove: coder\n'hello '\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}