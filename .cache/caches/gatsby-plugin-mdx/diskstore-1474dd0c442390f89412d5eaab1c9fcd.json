{"expireTime":9007200883717311000,"key":"gatsby-plugin-mdx-entire-payload-c25f86a67e2391819bffbef33bc1e117--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"2. Write a C read and print an employee’s detail using structure.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":70,"offset":92},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":70,"offset":92},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ read and print an employee’s detail using structure.\n#include<stdio.h>\nstruct employee{\n    char name[20];\n    int empId;\n    char role[10];\n};\n\nint main(){\n    struct employee emp1;\n\n    printf(\"enter emp name : \");\n    fgets(emp1.name,sizeof(emp1.name),stdin);\n    printf(\"enter emp id : \");\n    scanf(\"%d\",&emp1.empId);\n    getchar();\n    printf(\"enter emp role : \");\n    fgets(emp1.role,sizeof(emp1.role),stdin);\n\n    printf(\"\\nName : %s\",emp1.name);\n    printf(\"Id   : %d \\n\",emp1.empId);\n    printf(\"Role : %s\",emp1.role);\n}","position":{"start":{"line":4,"column":1,"offset":94},"end":{"line":28,"column":4,"offset":671},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":29,"column":5,"offset":677},"end":{"line":29,"column":11,"offset":683},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":673},"end":{"line":29,"column":11,"offset":683},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter emp name : Ahosanul Hasan\nenter emp id : 101\nenter emp role : Manager\n\nName : Ahosanul Hasan\nId   : 101\nRole : Manager","position":{"start":{"line":30,"column":1,"offset":685},"end":{"line":38,"column":4,"offset":825},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":40,"column":4,"offset":832},"end":{"line":40,"column":22,"offset":850},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":829},"end":{"line":40,"column":22,"offset":850},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"2. Write a C++ read and print an employee’s detail using structure.","position":{"start":{"line":41,"column":5,"offset":856},"end":{"line":41,"column":72,"offset":923},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":852},"end":{"line":41,"column":72,"offset":923},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to read and print an employee’s detail using structure.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nstruct employee{\n    char name[20];\n    int empId;\n    char role[10];\n};\nint main(){\n    struct employee emp1;\n    cout << \"enter emp name : \";\n    fgets(emp1.name,sizeof(emp1.name),stdin);\n    cout << \"enter emp id : \";\n    cin >> emp1.empId;\n    getchar();\n    cout << \"enter emp role : \";\n    fgets(emp1.role,sizeof(emp1.role),stdin);\n    cout << \"Name : \" << emp1.name << endl;\n    cout << \"Id   : \" << emp1.empId << endl;\n    cout << \"Role : \" << emp1.role;\n}","position":{"start":{"line":42,"column":1,"offset":925},"end":{"line":66,"column":4,"offset":1561},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":67,"column":5,"offset":1567},"end":{"line":67,"column":11,"offset":1573},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1563},"end":{"line":67,"column":11,"offset":1573},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter emp name : Ahosanul Hasan\nenter emp id : 101\nenter emp role : Manager\n\nName : Ahosanul Hasan\nId   : 101\nRole : Manager","position":{"start":{"line":68,"column":1,"offset":1575},"end":{"line":76,"column":4,"offset":1715},"indent":[1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java read and print an employee’s detail using structure.\",\"category\":\"Structure And Union Index\",\"tags\":[\"structure\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":79,"column":1,"offset":1719},"end":{"line":79,"column":230,"offset":1948},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":79,"column":230,"offset":1948}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java read and print an employee’s detail using structure.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"structure\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"2. Write a C read and print an employee\\u2019s detail using structure.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ read and print an employee\\u2019s detail using structure.\\n#include<stdio.h>\\nstruct employee{\\n    char name[20];\\n    int empId;\\n    char role[10];\\n};\\n\\nint main(){\\n    struct employee emp1;\\n\\n    printf(\\\"enter emp name : \\\");\\n    fgets(emp1.name,sizeof(emp1.name),stdin);\\n    printf(\\\"enter emp id : \\\");\\n    scanf(\\\"%d\\\",&emp1.empId);\\n    getchar();\\n    printf(\\\"enter emp role : \\\");\\n    fgets(emp1.role,sizeof(emp1.role),stdin);\\n\\n    printf(\\\"\\\\nName : %s\\\",emp1.name);\\n    printf(\\\"Id   : %d \\\\n\\\",emp1.empId);\\n    printf(\\\"Role : %s\\\",emp1.role);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter emp name : Ahosanul Hasan\\nenter emp id : 101\\nenter emp role : Manager\\n\\nName : Ahosanul Hasan\\nId   : 101\\nRole : Manager\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"2. Write a C++ read and print an employee\\u2019s detail using structure.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to read and print an employee\\u2019s detail using structure.\\n\\n#include<iostream>\\n#include <string.h>\\nusing namespace std;\\nstruct employee{\\n    char name[20];\\n    int empId;\\n    char role[10];\\n};\\nint main(){\\n    struct employee emp1;\\n    cout << \\\"enter emp name : \\\";\\n    fgets(emp1.name,sizeof(emp1.name),stdin);\\n    cout << \\\"enter emp id : \\\";\\n    cin >> emp1.empId;\\n    getchar();\\n    cout << \\\"enter emp role : \\\";\\n    fgets(emp1.role,sizeof(emp1.role),stdin);\\n    cout << \\\"Name : \\\" << emp1.name << endl;\\n    cout << \\\"Id   : \\\" << emp1.empId << endl;\\n    cout << \\\"Role : \\\" << emp1.role;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter emp name : Ahosanul Hasan\\nenter emp id : 101\\nenter emp role : Manager\\n\\nName : Ahosanul Hasan\\nId   : 101\\nRole : Manager\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java read and print an employee’s detail using structure.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"structure\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`2. Write a C read and print an employee’s detail using structure.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ read and print an employee’s detail using structure.\n#include<stdio.h>\nstruct employee{\n    char name[20];\n    int empId;\n    char role[10];\n};\n\nint main(){\n    struct employee emp1;\n\n    printf(\"enter emp name : \");\n    fgets(emp1.name,sizeof(emp1.name),stdin);\n    printf(\"enter emp id : \");\n    scanf(\"%d\",&emp1.empId);\n    getchar();\n    printf(\"enter emp role : \");\n    fgets(emp1.role,sizeof(emp1.role),stdin);\n\n    printf(\"\\\\nName : %s\",emp1.name);\n    printf(\"Id   : %d \\\\n\",emp1.empId);\n    printf(\"Role : %s\",emp1.role);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter emp name : Ahosanul Hasan\nenter emp id : 101\nenter emp role : Manager\n\nName : Ahosanul Hasan\nId   : 101\nRole : Manager\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`2. Write a C++ read and print an employee’s detail using structure.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to read and print an employee’s detail using structure.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nstruct employee{\n    char name[20];\n    int empId;\n    char role[10];\n};\nint main(){\n    struct employee emp1;\n    cout << \"enter emp name : \";\n    fgets(emp1.name,sizeof(emp1.name),stdin);\n    cout << \"enter emp id : \";\n    cin >> emp1.empId;\n    getchar();\n    cout << \"enter emp role : \";\n    fgets(emp1.role,sizeof(emp1.role),stdin);\n    cout << \"Name : \" << emp1.name << endl;\n    cout << \"Id   : \" << emp1.empId << endl;\n    cout << \"Role : \" << emp1.role;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter emp name : Ahosanul Hasan\nenter emp id : 101\nenter emp role : Manager\n\nName : Ahosanul Hasan\nId   : 101\nRole : Manager\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}