{"expireTime":9007200883706346000,"key":"gatsby-plugin-mdx-entire-payload-412f2ee74184f8e3ac6971f86d378e40--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"23. Write a C program to print first 50 natural numbers using recursion.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":77,"offset":99},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":77,"offset":99},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to print first 50 natural numbers using recursion.\n#include<stdio.h>\nint main()\n{\n    struct parts\n    {\n        char sl[4],material[10];\n        int yr,qty;\n    };\n    int i;\n    struct parts p[3];\n    for(i=0;i<3;i++)\n    {\n        printf(\"Enter sl no\\n\");\n                fflush(stdin);\n        gets(p[i].sl);\n        printf(\"Enter yr of manufactur , material and qtty\\n\");\n        scanf(\"%d%s%d\",&p[i].yr,&p[i].material,&p[i].qty);\n    }\n    for(i=0;i<3;i++)\n    {\n        if(p[i].sl[0]=='A')\n            continue;\n        if(p[i].sl[0]>=100&&p[i].sl[0]<=102)\n            continue;\n        if((p[i].sl[0]=='B'&&p[i].sl[2]=='1')||(p[i].sl[0]=='C'&&p[i].sl[0]>'6'))\n            continue;\n        printf(\"%s %d %s %d\\n\",p[i].sl,p[i].yr,p[i].material,p[i].qty);\n    }\n}","position":{"start":{"line":4,"column":1,"offset":101},"end":{"line":35,"column":4,"offset":930},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":36,"column":5,"offset":936},"end":{"line":36,"column":11,"offset":942},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":932},"end":{"line":36,"column":11,"offset":942},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter sl no\n//try it yourself","position":{"start":{"line":37,"column":1,"offset":944},"end":{"line":40,"column":4,"offset":984},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":42,"column":4,"offset":991},"end":{"line":42,"column":22,"offset":1009},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":988},"end":{"line":42,"column":22,"offset":1009},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"23. Write a C++ program to print first 50 natural numbers using recursion.","position":{"start":{"line":43,"column":5,"offset":1015},"end":{"line":43,"column":79,"offset":1089},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1011},"end":{"line":43,"column":79,"offset":1089},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to print first 50 natural numbers using recursion.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    struct parts\n    {\n        char sl[4],material[10];\n        int yr,qty;\n    };\n    int i;\n    struct parts p[3];\n    for(i=0;i<3;i++)\n    {\n        cout << \"Enter sl no\\n\";\n                fflush(stdin);\n        gets(p[i].sl);\n        cout << \"Enter yr of manufactur , material and qtty\\n\";\n        cin >> p[i].yr >> p[i].material >> p[i].qty;\n    }\n    for(i=0;i<3;i++)\n    {\n        if(p[i].sl[0]=='A')\n            continue;\n        if(p[i].sl[0]>=100&&p[i].sl[0]<=102)\n            continue;\n        if((p[i].sl[0]=='B'&&p[i].sl[2]=='1')||(p[i].sl[0]=='C'&&p[i].sl[0]>'6'))\n            continue;\n        cout <<p[i].sl << \" \" << p[i].yr << \" \" << p[i].material << \" \" << p[i].qty;\n    }\n}","position":{"start":{"line":44,"column":1,"offset":1091},"end":{"line":78,"column":4,"offset":1975},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":79,"column":5,"offset":1981},"end":{"line":79,"column":11,"offset":1987},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":1977},"end":{"line":79,"column":11,"offset":1987},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter sl no\n//try it yourself","position":{"start":{"line":80,"column":1,"offset":1989},"end":{"line":83,"column":4,"offset":2029},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to print first 50 natural numbers using recursion.\",\"category\":\"Structure And Union Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":86,"column":1,"offset":2033},"end":{"line":86,"column":256,"offset":2288},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":86,"column":256,"offset":2288}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print first 50 natural numbers using recursion.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"23. Write a C program to print first 50 natural numbers using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to print first 50 natural numbers using recursion.\\n#include<stdio.h>\\nint main()\\n{\\n    struct parts\\n    {\\n        char sl[4],material[10];\\n        int yr,qty;\\n    };\\n    int i;\\n    struct parts p[3];\\n    for(i=0;i<3;i++)\\n    {\\n        printf(\\\"Enter sl no\\\\n\\\");\\n                fflush(stdin);\\n        gets(p[i].sl);\\n        printf(\\\"Enter yr of manufactur , material and qtty\\\\n\\\");\\n        scanf(\\\"%d%s%d\\\",&p[i].yr,&p[i].material,&p[i].qty);\\n    }\\n    for(i=0;i<3;i++)\\n    {\\n        if(p[i].sl[0]=='A')\\n            continue;\\n        if(p[i].sl[0]>=100&&p[i].sl[0]<=102)\\n            continue;\\n        if((p[i].sl[0]=='B'&&p[i].sl[2]=='1')||(p[i].sl[0]=='C'&&p[i].sl[0]>'6'))\\n            continue;\\n        printf(\\\"%s %d %s %d\\\\n\\\",p[i].sl,p[i].yr,p[i].material,p[i].qty);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter sl no\\n//try it yourself\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"23. Write a C++ program to print first 50 natural numbers using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to print first 50 natural numbers using recursion.\\n\\n#include<iostream>\\n#include <string.h>\\nusing namespace std;\\nint main()\\n{\\n    struct parts\\n    {\\n        char sl[4],material[10];\\n        int yr,qty;\\n    };\\n    int i;\\n    struct parts p[3];\\n    for(i=0;i<3;i++)\\n    {\\n        cout << \\\"Enter sl no\\\\n\\\";\\n                fflush(stdin);\\n        gets(p[i].sl);\\n        cout << \\\"Enter yr of manufactur , material and qtty\\\\n\\\";\\n        cin >> p[i].yr >> p[i].material >> p[i].qty;\\n    }\\n    for(i=0;i<3;i++)\\n    {\\n        if(p[i].sl[0]=='A')\\n            continue;\\n        if(p[i].sl[0]>=100&&p[i].sl[0]<=102)\\n            continue;\\n        if((p[i].sl[0]=='B'&&p[i].sl[2]=='1')||(p[i].sl[0]=='C'&&p[i].sl[0]>'6'))\\n            continue;\\n        cout <<p[i].sl << \\\" \\\" << p[i].yr << \\\" \\\" << p[i].material << \\\" \\\" << p[i].qty;\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter sl no\\n//try it yourself\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print first 50 natural numbers using recursion.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`23. Write a C program to print first 50 natural numbers using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to print first 50 natural numbers using recursion.\n#include<stdio.h>\nint main()\n{\n    struct parts\n    {\n        char sl[4],material[10];\n        int yr,qty;\n    };\n    int i;\n    struct parts p[3];\n    for(i=0;i<3;i++)\n    {\n        printf(\"Enter sl no\\\\n\");\n                fflush(stdin);\n        gets(p[i].sl);\n        printf(\"Enter yr of manufactur , material and qtty\\\\n\");\n        scanf(\"%d%s%d\",&p[i].yr,&p[i].material,&p[i].qty);\n    }\n    for(i=0;i<3;i++)\n    {\n        if(p[i].sl[0]=='A')\n            continue;\n        if(p[i].sl[0]>=100&&p[i].sl[0]<=102)\n            continue;\n        if((p[i].sl[0]=='B'&&p[i].sl[2]=='1')||(p[i].sl[0]=='C'&&p[i].sl[0]>'6'))\n            continue;\n        printf(\"%s %d %s %d\\\\n\",p[i].sl,p[i].yr,p[i].material,p[i].qty);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter sl no\n//try it yourself\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`23. Write a C++ program to print first 50 natural numbers using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to print first 50 natural numbers using recursion.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    struct parts\n    {\n        char sl[4],material[10];\n        int yr,qty;\n    };\n    int i;\n    struct parts p[3];\n    for(i=0;i<3;i++)\n    {\n        cout << \"Enter sl no\\\\n\";\n                fflush(stdin);\n        gets(p[i].sl);\n        cout << \"Enter yr of manufactur , material and qtty\\\\n\";\n        cin >> p[i].yr >> p[i].material >> p[i].qty;\n    }\n    for(i=0;i<3;i++)\n    {\n        if(p[i].sl[0]=='A')\n            continue;\n        if(p[i].sl[0]>=100&&p[i].sl[0]<=102)\n            continue;\n        if((p[i].sl[0]=='B'&&p[i].sl[2]=='1')||(p[i].sl[0]=='C'&&p[i].sl[0]>'6'))\n            continue;\n        cout <<p[i].sl << \" \" << p[i].yr << \" \" << p[i].material << \" \" << p[i].qty;\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter sl no\n//try it yourself\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}