{"expireTime":9007200883706948000,"key":"gatsby-plugin-mdx-entire-payload-65c03f11f9509df355335780403c564c--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"13. Write a C program to find all prime numbers between given interval using functions.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":92,"offset":114},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":92,"offset":114},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to find all prime numbers between given interval using functions.\n#include<stdio.h>\n\nvoid findPrime(int a,int b)\n{\n    int n;\n    printf(\"Prime numbers are: \");\n    for(int k=a;k<=b;k++)\n    {\n        int check=1;\n        n=k;\n        for(int i=2;i*i<=n;i++)\n        {\n            if(n%i==0)\n            {\n                check=0;\n                break;\n            }\n        }\n        if(check && n!=1)\n            printf(\"%d \",n);\n    }\n}\n\nint main()\n{\n    int a,b;\n    printf(\"Enter a range: \");\n    scanf(\"%d%d\",&a,&b);\n\n    findPrime(a,b);\n\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":116},"end":{"line":39,"column":4,"offset":741},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":40,"column":5,"offset":747},"end":{"line":40,"column":11,"offset":753},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":743},"end":{"line":40,"column":11,"offset":753},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a range: 1 5\nPrime numbers are: 2 3 5","position":{"start":{"line":41,"column":1,"offset":755},"end":{"line":44,"column":4,"offset":809},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":46,"column":4,"offset":816},"end":{"line":46,"column":22,"offset":834},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":813},"end":{"line":46,"column":22,"offset":834},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"13. Write a C++ program to find all prime numbers between given interval using functions.","position":{"start":{"line":47,"column":5,"offset":840},"end":{"line":47,"column":94,"offset":929},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":836},"end":{"line":47,"column":94,"offset":929},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to find all prime numbers between given interval using functions.\n\n#include<iostream>\nusing namespace std;\n\nvoid findPrime(int a,int b)\n{\n    int n;\n    cout << \"Prime numbers are: \";\n    for(int k=a;k<=b;k++)\n    {\n        int check=1;\n        n=k;\n        for(int i=2;i*i<=n;i++)\n        {\n            if(n%i==0)\n            {\n                check=0;\n                break;\n            }\n        }\n        if(check && n!=1)\n            cout << \" \" << n;\n    }\n}\n\nint main()\n{\n    int a,b;\n    cout << \"Enter a range: \";\n    cin >> a >> a;\n\n    findPrime(a,b);\n\n    return 0;\n}","position":{"start":{"line":48,"column":1,"offset":931},"end":{"line":85,"column":4,"offset":1578},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":86,"column":5,"offset":1584},"end":{"line":86,"column":11,"offset":1590},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":1580},"end":{"line":86,"column":11,"offset":1590},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a range: 1 5\nPrime numbers are: 2 3 5","position":{"start":{"line":87,"column":1,"offset":1592},"end":{"line":90,"column":4,"offset":1646},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":92,"column":4,"offset":1653},"end":{"line":92,"column":23,"offset":1672},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":1650},"end":{"line":92,"column":23,"offset":1672},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"13. Write a Java program to find all prime numbers between given interval using functions.","position":{"start":{"line":93,"column":5,"offset":1678},"end":{"line":93,"column":95,"offset":1768},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":1674},"end":{"line":93,"column":95,"offset":1768},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to show the simple structure of a function.\nimport java.util.Scanner;\npublic class Funycode {\n    static void findPrime(int a,int b)\n    {\n        int n;\n        System.out.println(\"Prime numbers are: \");\n        for(int k=a;k<=b;k++)\n        {\n            int check=1;\n            n=k;\n            for(int i=2;i*i<=n;i++)\n            {\n                if(n%i==0)\n                {\n                    check=0;\n                    break;\n                }\n            }\n            if(check && n!=1)\n                System.out.println(\" \" + n);\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int a,b;\n        System.out.println(\"Enter a range: \");\n        a = z.nextInt();\n        b = z.nextInt();\n\n        findPrime(a,b);\n    }\n}","position":{"start":{"line":94,"column":1,"offset":1770},"end":{"line":129,"column":4,"offset":2635},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":130,"column":5,"offset":2641},"end":{"line":130,"column":11,"offset":2647},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":2637},"end":{"line":130,"column":11,"offset":2647},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a range: 1 5\nPrime numbers are: 2 3 5","position":{"start":{"line":131,"column":1,"offset":2649},"end":{"line":134,"column":4,"offset":2703},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to find all prime numbers between given interval using functions.\",\"category\":\"Function Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":137,"column":1,"offset":2707},"end":{"line":137,"column":268,"offset":2974},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":137,"column":268,"offset":2974}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find all prime numbers between given interval using functions.\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"13. Write a C program to find all prime numbers between given interval using functions.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to find all prime numbers between given interval using functions.\\n#include<stdio.h>\\n\\nvoid findPrime(int a,int b)\\n{\\n    int n;\\n    printf(\\\"Prime numbers are: \\\");\\n    for(int k=a;k<=b;k++)\\n    {\\n        int check=1;\\n        n=k;\\n        for(int i=2;i*i<=n;i++)\\n        {\\n            if(n%i==0)\\n            {\\n                check=0;\\n                break;\\n            }\\n        }\\n        if(check && n!=1)\\n            printf(\\\"%d \\\",n);\\n    }\\n}\\n\\nint main()\\n{\\n    int a,b;\\n    printf(\\\"Enter a range: \\\");\\n    scanf(\\\"%d%d\\\",&a,&b);\\n\\n    findPrime(a,b);\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a range: 1 5\\nPrime numbers are: 2 3 5\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"13. Write a C++ program to find all prime numbers between given interval using functions.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find all prime numbers between given interval using functions.\\n\\n#include<iostream>\\nusing namespace std;\\n\\nvoid findPrime(int a,int b)\\n{\\n    int n;\\n    cout << \\\"Prime numbers are: \\\";\\n    for(int k=a;k<=b;k++)\\n    {\\n        int check=1;\\n        n=k;\\n        for(int i=2;i*i<=n;i++)\\n        {\\n            if(n%i==0)\\n            {\\n                check=0;\\n                break;\\n            }\\n        }\\n        if(check && n!=1)\\n            cout << \\\" \\\" << n;\\n    }\\n}\\n\\nint main()\\n{\\n    int a,b;\\n    cout << \\\"Enter a range: \\\";\\n    cin >> a >> a;\\n\\n    findPrime(a,b);\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a range: 1 5\\nPrime numbers are: 2 3 5\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"13. Write a Java program to find all prime numbers between given interval using functions.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to show the simple structure of a function.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    static void findPrime(int a,int b)\\n    {\\n        int n;\\n        System.out.println(\\\"Prime numbers are: \\\");\\n        for(int k=a;k<=b;k++)\\n        {\\n            int check=1;\\n            n=k;\\n            for(int i=2;i*i<=n;i++)\\n            {\\n                if(n%i==0)\\n                {\\n                    check=0;\\n                    break;\\n                }\\n            }\\n            if(check && n!=1)\\n                System.out.println(\\\" \\\" + n);\\n        }\\n    }\\n\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int a,b;\\n        System.out.println(\\\"Enter a range: \\\");\\n        a = z.nextInt();\\n        b = z.nextInt();\\n\\n        findPrime(a,b);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a range: 1 5\\nPrime numbers are: 2 3 5\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find all prime numbers between given interval using functions.\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`13. Write a C program to find all prime numbers between given interval using functions.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to find all prime numbers between given interval using functions.\n#include<stdio.h>\n\nvoid findPrime(int a,int b)\n{\n    int n;\n    printf(\"Prime numbers are: \");\n    for(int k=a;k<=b;k++)\n    {\n        int check=1;\n        n=k;\n        for(int i=2;i*i<=n;i++)\n        {\n            if(n%i==0)\n            {\n                check=0;\n                break;\n            }\n        }\n        if(check && n!=1)\n            printf(\"%d \",n);\n    }\n}\n\nint main()\n{\n    int a,b;\n    printf(\"Enter a range: \");\n    scanf(\"%d%d\",&a,&b);\n\n    findPrime(a,b);\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a range: 1 5\nPrime numbers are: 2 3 5\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`13. Write a C++ program to find all prime numbers between given interval using functions.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to find all prime numbers between given interval using functions.\n\n#include<iostream>\nusing namespace std;\n\nvoid findPrime(int a,int b)\n{\n    int n;\n    cout << \"Prime numbers are: \";\n    for(int k=a;k<=b;k++)\n    {\n        int check=1;\n        n=k;\n        for(int i=2;i*i<=n;i++)\n        {\n            if(n%i==0)\n            {\n                check=0;\n                break;\n            }\n        }\n        if(check && n!=1)\n            cout << \" \" << n;\n    }\n}\n\nint main()\n{\n    int a,b;\n    cout << \"Enter a range: \";\n    cin >> a >> a;\n\n    findPrime(a,b);\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a range: 1 5\nPrime numbers are: 2 3 5\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`13. Write a Java program to find all prime numbers between given interval using functions.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to show the simple structure of a function.\nimport java.util.Scanner;\npublic class Funycode {\n    static void findPrime(int a,int b)\n    {\n        int n;\n        System.out.println(\"Prime numbers are: \");\n        for(int k=a;k<=b;k++)\n        {\n            int check=1;\n            n=k;\n            for(int i=2;i*i<=n;i++)\n            {\n                if(n%i==0)\n                {\n                    check=0;\n                    break;\n                }\n            }\n            if(check && n!=1)\n                System.out.println(\" \" + n);\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int a,b;\n        System.out.println(\"Enter a range: \");\n        a = z.nextInt();\n        b = z.nextInt();\n\n        findPrime(a,b);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a range: 1 5\nPrime numbers are: 2 3 5\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}