{"expireTime":9007200883706341000,"key":"gatsby-plugin-mdx-entire-payload-c6e6e424790ce3f6ce3fbb159396ee26--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4. Write a C program to sort elements of array in ascending order.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":71,"offset":93},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":71,"offset":93},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to sort elements of array in ascending order.\n#include <stdio.h>\nvoid  main()\n{\n    int i,arr[10];\n\n    printf(\"Input 10 elements in the array :\\n\");\n    for(i=0; i<10; i++)\n    {\n       scanf(\"%d\", &arr[i]);\n    }\n\n    printf(\"\\nElements in array are: \");\n    for(i=0; i<10; i++)\n    {\n        printf(\"%d  \", arr[i]);\n    }\n\n}","position":{"start":{"line":4,"column":1,"offset":95},"end":{"line":24,"column":4,"offset":471},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":25,"column":5,"offset":477},"end":{"line":25,"column":11,"offset":483},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":473},"end":{"line":25,"column":11,"offset":483},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input 10 elements in the array :\n5\n6\n3\n2\n4\n1\n7\n8\n9\n10\n\nElements of array in sorted ascending order:\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10","position":{"start":{"line":26,"column":1,"offset":485},"end":{"line":51,"column":4,"offset":639},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":52,"column":4,"offset":644},"end":{"line":52,"column":22,"offset":662},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":641},"end":{"line":52,"column":22,"offset":662},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4. Write a C++ program to sort elements of array in ascending order.","position":{"start":{"line":53,"column":5,"offset":668},"end":{"line":53,"column":73,"offset":736},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":664},"end":{"line":53,"column":73,"offset":736},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to sort elements of array in ascending order.\n\n\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int arr[10], i, j, temp;\n    cout<<\"Input 10 elements in the array :\\n\";\n    for(i=0; i<10; i++)\n    {\n        cin>>arr[i];\n    }\n    for(i=0; i<10; i++)\n    {\n        for(j=i+1; j<10; j++)\n        {\n            if(arr[j] <arr[i])\n            {\n                temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] =temp;\n            }\n        }\n    }\n    cout<<\"\\nElements of array in sorted ascending order:\\n\";\n    for(i=0; i<10; i++)\n    {\n        cout<<arr[i]<<\" \";\n    }\n}","position":{"start":{"line":54,"column":1,"offset":738},"end":{"line":86,"column":4,"offset":1401},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":87,"column":5,"offset":1407},"end":{"line":87,"column":11,"offset":1413},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":1403},"end":{"line":87,"column":11,"offset":1413},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input 10 elements in the array :\n5\n6\n3\n2\n4\n1\n7\n8\n9\n10\n\nElements of array in sorted ascending order:\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10","position":{"start":{"line":88,"column":1,"offset":1415},"end":{"line":113,"column":4,"offset":1569},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":115,"column":4,"offset":1576},"end":{"line":115,"column":23,"offset":1595},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":1573},"end":{"line":115,"column":23,"offset":1595},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4. Write a Java program to sort elements of array in ascending order.","position":{"start":{"line":116,"column":5,"offset":1601},"end":{"line":116,"column":74,"offset":1670},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":1597},"end":{"line":116,"column":74,"offset":1670},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to sort elements of array in ascending order.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        int arr[]=new int [10],i,j,temp=0;\n        System.out.println(\"Input 10 elements in the array :\\n\");\n        for(i=0; i<10; i++)\n        {\n            arr[i]=z.nextInt();\n        }\n        for(i=0; i<10; i++)\n        {\n            for(j=i+1; j<10; j++)\n            {\n                if(arr[j] <arr[i])\n                {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] =temp;\n                }\n            }\n        }\n        System.out.println(\"\\nElements of array in sorted ascending order:\\n\");\n        for(i=0; i<10; i++)\n        {\n            System.out.println(arr[i]+\" \");\n        }\n    }\n}","position":{"start":{"line":117,"column":1,"offset":1672},"end":{"line":149,"column":4,"offset":2576},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":150,"column":5,"offset":2582},"end":{"line":150,"column":11,"offset":2588},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":2578},"end":{"line":150,"column":11,"offset":2588},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input 10 elements in the array :\n5\n6\n3\n2\n4\n1\n7\n8\n9\n10\n\nElements of array in sorted ascending order:\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10","position":{"start":{"line":151,"column":1,"offset":2590},"end":{"line":176,"column":4,"offset":2744},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to store elements in an array and print it.\",\"category\":\"Array Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":179,"column":1,"offset":2748},"end":{"line":179,"column":243,"offset":2990},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":179,"column":243,"offset":2990}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to store elements in an array and print it.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"4. Write a C program to sort elements of array in ascending order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to sort elements of array in ascending order.\\n#include <stdio.h>\\nvoid  main()\\n{\\n    int i,arr[10];\\n\\n    printf(\\\"Input 10 elements in the array :\\\\n\\\");\\n    for(i=0; i<10; i++)\\n    {\\n       scanf(\\\"%d\\\", &arr[i]);\\n    }\\n\\n    printf(\\\"\\\\nElements in array are: \\\");\\n    for(i=0; i<10; i++)\\n    {\\n        printf(\\\"%d  \\\", arr[i]);\\n    }\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input 10 elements in the array :\\n5\\n6\\n3\\n2\\n4\\n1\\n7\\n8\\n9\\n10\\n\\nElements of array in sorted ascending order:\\n\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"4. Write a C++ program to sort elements of array in ascending order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to sort elements of array in ascending order.\\n\\n\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int arr[10], i, j, temp;\\n    cout<<\\\"Input 10 elements in the array :\\\\n\\\";\\n    for(i=0; i<10; i++)\\n    {\\n        cin>>arr[i];\\n    }\\n    for(i=0; i<10; i++)\\n    {\\n        for(j=i+1; j<10; j++)\\n        {\\n            if(arr[j] <arr[i])\\n            {\\n                temp = arr[i];\\n                arr[i] = arr[j];\\n                arr[j] =temp;\\n            }\\n        }\\n    }\\n    cout<<\\\"\\\\nElements of array in sorted ascending order:\\\\n\\\";\\n    for(i=0; i<10; i++)\\n    {\\n        cout<<arr[i]<<\\\" \\\";\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input 10 elements in the array :\\n5\\n6\\n3\\n2\\n4\\n1\\n7\\n8\\n9\\n10\\n\\nElements of array in sorted ascending order:\\n\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"4. Write a Java program to sort elements of array in ascending order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to sort elements of array in ascending order.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        int arr[]=new int [10],i,j,temp=0;\\n        System.out.println(\\\"Input 10 elements in the array :\\\\n\\\");\\n        for(i=0; i<10; i++)\\n        {\\n            arr[i]=z.nextInt();\\n        }\\n        for(i=0; i<10; i++)\\n        {\\n            for(j=i+1; j<10; j++)\\n            {\\n                if(arr[j] <arr[i])\\n                {\\n                    temp = arr[i];\\n                    arr[i] = arr[j];\\n                    arr[j] =temp;\\n                }\\n            }\\n        }\\n        System.out.println(\\\"\\\\nElements of array in sorted ascending order:\\\\n\\\");\\n        for(i=0; i<10; i++)\\n        {\\n            System.out.println(arr[i]+\\\" \\\");\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input 10 elements in the array :\\n5\\n6\\n3\\n2\\n4\\n1\\n7\\n8\\n9\\n10\\n\\nElements of array in sorted ascending order:\\n\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to store elements in an array and print it.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`4. Write a C program to sort elements of array in ascending order.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to sort elements of array in ascending order.\n#include <stdio.h>\nvoid  main()\n{\n    int i,arr[10];\n\n    printf(\"Input 10 elements in the array :\\\\n\");\n    for(i=0; i<10; i++)\n    {\n       scanf(\"%d\", &arr[i]);\n    }\n\n    printf(\"\\\\nElements in array are: \");\n    for(i=0; i<10; i++)\n    {\n        printf(\"%d  \", arr[i]);\n    }\n\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input 10 elements in the array :\n5\n6\n3\n2\n4\n1\n7\n8\n9\n10\n\nElements of array in sorted ascending order:\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`4. Write a C++ program to sort elements of array in ascending order.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to sort elements of array in ascending order.\n\n\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int arr[10], i, j, temp;\n    cout<<\"Input 10 elements in the array :\\\\n\";\n    for(i=0; i<10; i++)\n    {\n        cin>>arr[i];\n    }\n    for(i=0; i<10; i++)\n    {\n        for(j=i+1; j<10; j++)\n        {\n            if(arr[j] <arr[i])\n            {\n                temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] =temp;\n            }\n        }\n    }\n    cout<<\"\\\\nElements of array in sorted ascending order:\\\\n\";\n    for(i=0; i<10; i++)\n    {\n        cout<<arr[i]<<\" \";\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input 10 elements in the array :\n5\n6\n3\n2\n4\n1\n7\n8\n9\n10\n\nElements of array in sorted ascending order:\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`4. Write a Java program to sort elements of array in ascending order.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to sort elements of array in ascending order.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        int arr[]=new int [10],i,j,temp=0;\n        System.out.println(\"Input 10 elements in the array :\\\\n\");\n        for(i=0; i<10; i++)\n        {\n            arr[i]=z.nextInt();\n        }\n        for(i=0; i<10; i++)\n        {\n            for(j=i+1; j<10; j++)\n            {\n                if(arr[j] <arr[i])\n                {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] =temp;\n                }\n            }\n        }\n        System.out.println(\"\\\\nElements of array in sorted ascending order:\\\\n\");\n        for(i=0; i<10; i++)\n        {\n            System.out.println(arr[i]+\" \");\n        }\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input 10 elements in the array :\n5\n6\n3\n2\n4\n1\n7\n8\n9\n10\n\nElements of array in sorted ascending order:\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}