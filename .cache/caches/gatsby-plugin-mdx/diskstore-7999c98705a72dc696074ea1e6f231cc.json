{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-22a5799efa841c35ad47682bca4b527b--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Write a C program to print first 50 natural numbers using recursion.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":76,"offset":98},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":76,"offset":98},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to print first 50 natural numbers using recursion.#include<stdio.h>\nint main()\n{\n    numbers(0);\n}\nint numbers(int i)\n{\n    if(i>50)\n    {\n        return 0;\n    }\n    printf(\"\\n%d\", i);\n    numbers(i=i+1);\n}","position":{"start":{"line":4,"column":1,"offset":100},"end":{"line":19,"column":4,"offset":353},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":20,"column":5,"offset":359},"end":{"line":20,"column":11,"offset":365},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":355},"end":{"line":20,"column":11,"offset":365},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50","position":{"start":{"line":21,"column":1,"offset":367},"end":{"line":23,"column":4,"offset":519},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":25,"column":4,"offset":526},"end":{"line":25,"column":22,"offset":544},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":523},"end":{"line":25,"column":22,"offset":544},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Write a C++ program to print first 50 natural numbers using recursion.","position":{"start":{"line":26,"column":5,"offset":550},"end":{"line":26,"column":78,"offset":623},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":546},"end":{"line":26,"column":78,"offset":623},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to find the square of any number using the function.\n\n#include<iostream>\nusing namespace std;\nint main()\n{\n    numbers(0);\n}\nint numbers(int i)\n{\n    if(i>50)\n    {\n        return 0;\n    }\n    cout << \"\\n\" << i;\n    numbers(i=i+1);\n}","position":{"start":{"line":27,"column":1,"offset":625},"end":{"line":45,"column":4,"offset":907},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":46,"column":5,"offset":913},"end":{"line":46,"column":11,"offset":919},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":909},"end":{"line":46,"column":11,"offset":919},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50","position":{"start":{"line":47,"column":1,"offset":921},"end":{"line":49,"column":4,"offset":1073},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":51,"column":4,"offset":1080},"end":{"line":51,"column":23,"offset":1099},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1077},"end":{"line":51,"column":23,"offset":1099},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Write a Java program to find the square of any number using the function.","position":{"start":{"line":52,"column":5,"offset":1105},"end":{"line":52,"column":81,"offset":1181},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1101},"end":{"line":52,"column":81,"offset":1181},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to find the square of any number using the function.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        numbers(0);\n    }\n    static int numbers(int i)\n    {\n        if(i>50)\n        {\n            return 0;\n        }\n        System.out.println(\" \"+ i);\n        numbers(i=i+1);\n    }\n\n\n}","position":{"start":{"line":53,"column":1,"offset":1183},"end":{"line":72,"column":4,"offset":1573},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":73,"column":5,"offset":1579},"end":{"line":73,"column":11,"offset":1585},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1575},"end":{"line":73,"column":11,"offset":1585},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50","position":{"start":{"line":74,"column":1,"offset":1587},"end":{"line":76,"column":4,"offset":1739},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to print first 50 natural numbers using recursion.\",\"category\":\"Recursion Function Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":79,"column":1,"offset":1743},"end":{"line":79,"column":255,"offset":1997},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":79,"column":255,"offset":1997}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print first 50 natural numbers using recursion.\",\n  \"category\": \"Recursion Function Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"1. Write a C program to print first 50 natural numbers using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to print first 50 natural numbers using recursion.#include<stdio.h>\\nint main()\\n{\\n    numbers(0);\\n}\\nint numbers(int i)\\n{\\n    if(i>50)\\n    {\\n        return 0;\\n    }\\n    printf(\\\"\\\\n%d\\\", i);\\n    numbers(i=i+1);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"1. Write a C++ program to print first 50 natural numbers using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find the square of any number using the function.\\n\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    numbers(0);\\n}\\nint numbers(int i)\\n{\\n    if(i>50)\\n    {\\n        return 0;\\n    }\\n    cout << \\\"\\\\n\\\" << i;\\n    numbers(i=i+1);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"1. Write a Java program to find the square of any number using the function.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to find the square of any number using the function.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        numbers(0);\\n    }\\n    static int numbers(int i)\\n    {\\n        if(i>50)\\n        {\\n            return 0;\\n        }\\n        System.out.println(\\\" \\\"+ i);\\n        numbers(i=i+1);\\n    }\\n\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to print first 50 natural numbers using recursion.\",\n  \"category\": \"Recursion Function Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`1. Write a C program to print first 50 natural numbers using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to print first 50 natural numbers using recursion.#include<stdio.h>\nint main()\n{\n    numbers(0);\n}\nint numbers(int i)\n{\n    if(i>50)\n    {\n        return 0;\n    }\n    printf(\"\\\\n%d\", i);\n    numbers(i=i+1);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`1. Write a C++ program to print first 50 natural numbers using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to find the square of any number using the function.\n\n#include<iostream>\nusing namespace std;\nint main()\n{\n    numbers(0);\n}\nint numbers(int i)\n{\n    if(i>50)\n    {\n        return 0;\n    }\n    cout << \"\\\\n\" << i;\n    numbers(i=i+1);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`1. Write a Java program to find the square of any number using the function.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to find the square of any number using the function.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        numbers(0);\n    }\n    static int numbers(int i)\n    {\n        if(i>50)\n        {\n            return 0;\n        }\n        System.out.println(\" \"+ i);\n        numbers(i=i+1);\n    }\n\n\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}