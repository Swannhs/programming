{"expireTime":9007200883710394000,"key":"gatsby-plugin-mdx-entire-payload-30b0491345d198f574e1158a831f18a2--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"12. Write a C program to find the factorial of a given number using pointers.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":82,"offset":104},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":82,"offset":104},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to find the factorial of a given number using pointers.\n#include <stdio.h>\nvoid main()\n{\n    int fact;\n    int a;\n    printf(\" Input a number=\");\n    scanf(\"%d\",&a);\n\n    findFact(a,&fact);\n    printf(\" The Factorial of %d is = %d \",a,fact);\n}\n\nvoid findFact(int n,int *f)\n{\n    int i;\n    *f =1;\n    for(i=1; i<=n; i++)\n        *f=*f*i;\n}","position":{"start":{"line":4,"column":1,"offset":106},"end":{"line":25,"column":4,"offset":495},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":26,"column":5,"offset":501},"end":{"line":26,"column":11,"offset":507},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":497},"end":{"line":26,"column":11,"offset":507},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Address of variable 'a' is: 0x7ffcdc9c3f64","position":{"start":{"line":27,"column":1,"offset":509},"end":{"line":29,"column":4,"offset":561},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":30,"column":4,"offset":566},"end":{"line":30,"column":22,"offset":584},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":563},"end":{"line":30,"column":22,"offset":584},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"12. Write a C++ program to find the factorial of a given number using pointers.","position":{"start":{"line":31,"column":5,"offset":590},"end":{"line":31,"column":84,"offset":669},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":586},"end":{"line":31,"column":84,"offset":669},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to find the factorial of a given number using pointers.\n#include <iostream>\nusing namespace std;\n\nvoid findFact(int n,int *f)\n{\n    int i;\n    *f =1;\n    for(i=1; i<=n; i++)\n        *f=*f*i;\n}\n\nint main()\n{\n    int fact;\n    int a;\n    cout<<(\" Input a number=\");\n    cin>>a;\n\n    findFact(a,&fact);\n    cout<<\" The Factorial of \"<<a<< \" is =\"<<fact;\n}","position":{"start":{"line":32,"column":1,"offset":671},"end":{"line":55,"column":4,"offset":1077},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":56,"column":5,"offset":1083},"end":{"line":56,"column":11,"offset":1089},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1079},"end":{"line":56,"column":11,"offset":1089},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":" Input a number=5\n The Factorial of 5 is = 120","position":{"start":{"line":57,"column":1,"offset":1091},"end":{"line":60,"column":4,"offset":1148},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to find the factorial of a given number using pointers.\",\"category\":\"Pointer Program Index\",\"tags\":[\"#c\",\"#c++\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":63,"column":1,"offset":1152},"end":{"line":63,"column":249,"offset":1400},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":63,"column":249,"offset":1400}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find the factorial of a given number using pointers.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"12. Write a C program to find the factorial of a given number using pointers.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to find the factorial of a given number using pointers.\\n#include <stdio.h>\\nvoid main()\\n{\\n    int fact;\\n    int a;\\n    printf(\\\" Input a number=\\\");\\n    scanf(\\\"%d\\\",&a);\\n\\n    findFact(a,&fact);\\n    printf(\\\" The Factorial of %d is = %d \\\",a,fact);\\n}\\n\\nvoid findFact(int n,int *f)\\n{\\n    int i;\\n    *f =1;\\n    for(i=1; i<=n; i++)\\n        *f=*f*i;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Address of variable 'a' is: 0x7ffcdc9c3f64\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"12. Write a C++ program to find the factorial of a given number using pointers.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find the factorial of a given number using pointers.\\n#include <iostream>\\nusing namespace std;\\n\\nvoid findFact(int n,int *f)\\n{\\n    int i;\\n    *f =1;\\n    for(i=1; i<=n; i++)\\n        *f=*f*i;\\n}\\n\\nint main()\\n{\\n    int fact;\\n    int a;\\n    cout<<(\\\" Input a number=\\\");\\n    cin>>a;\\n\\n    findFact(a,&fact);\\n    cout<<\\\" The Factorial of \\\"<<a<< \\\" is =\\\"<<fact;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" Input a number=5\\n The Factorial of 5 is = 120\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find the factorial of a given number using pointers.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`12. Write a C program to find the factorial of a given number using pointers.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to find the factorial of a given number using pointers.\n#include <stdio.h>\nvoid main()\n{\n    int fact;\n    int a;\n    printf(\" Input a number=\");\n    scanf(\"%d\",&a);\n\n    findFact(a,&fact);\n    printf(\" The Factorial of %d is = %d \",a,fact);\n}\n\nvoid findFact(int n,int *f)\n{\n    int i;\n    *f =1;\n    for(i=1; i<=n; i++)\n        *f=*f*i;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Address of variable 'a' is: 0x7ffcdc9c3f64\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`12. Write a C++ program to find the factorial of a given number using pointers.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to find the factorial of a given number using pointers.\n#include <iostream>\nusing namespace std;\n\nvoid findFact(int n,int *f)\n{\n    int i;\n    *f =1;\n    for(i=1; i<=n; i++)\n        *f=*f*i;\n}\n\nint main()\n{\n    int fact;\n    int a;\n    cout<<(\" Input a number=\");\n    cin>>a;\n\n    findFact(a,&fact);\n    cout<<\" The Factorial of \"<<a<< \" is =\"<<fact;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{` Input a number=5\n The Factorial of 5 is = 120\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}