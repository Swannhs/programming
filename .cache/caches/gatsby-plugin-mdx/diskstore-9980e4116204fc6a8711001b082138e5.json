{"expireTime":9007200883706950000,"key":"gatsby-plugin-mdx-entire-payload-495ba11b5ecb52494b871f9929e356f0--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"31. Write a C program to sum of main diagonal elements of a matrix.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":72,"offset":94},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":72,"offset":94},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to sum of main diagonal elements of a matrix.\n#include <stdio.h>\nvoid main()\n{\n    int arr[3][3],i,j,sum=0;\n    printf(\"Input elements in the matrix :\\n\");\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            printf(\"element - [%d],[%d] : \",i,j);\n            scanf(\"%d\",&arr[i][j]);\n        }\n    }\n\n    printf(\"\\nThe matrix is : \\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\t\",arr[i][j]);\n    }\n    printf(\"\\n Major diagonal elements are: \");\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            if(i==j)\n            {\n                printf(\" %d \",arr[i][j]);\n                sum=sum+arr[i][j];\n            }\n        }\n    }\n    printf(\"\\nsum of major diagonal element:%d\",sum);\n}","position":{"start":{"line":4,"column":1,"offset":96},"end":{"line":41,"column":4,"offset":956},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":42,"column":5,"offset":962},"end":{"line":42,"column":11,"offset":968},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":958},"end":{"line":42,"column":11,"offset":968},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input elements in the matrix :\nelement - [0],[0] : 1\nelement - [0],[1] : 2\nelement - [0],[2] : 3\nelement - [1],[0] : 4\nelement - [1],[1] : 5\nelement - [1],[2] : 6\nelement - [2],[0] : 7\nelement - [2],[1] : 8\nelement - [2],[2] : 9\n\nThe matrix is :\n\n1       2       3\n4       5       6\n7       8       9\n Major diagonal elements are:  1  5  9\nsum of major diagonal element:15","position":{"start":{"line":43,"column":1,"offset":970},"end":{"line":62,"column":4,"offset":1369},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":63,"column":4,"offset":1374},"end":{"line":63,"column":22,"offset":1392},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1371},"end":{"line":63,"column":22,"offset":1392},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"31. Write a C++ program to sum of main diagonal elements of a matrix.","position":{"start":{"line":64,"column":5,"offset":1398},"end":{"line":64,"column":74,"offset":1467},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1394},"end":{"line":64,"column":74,"offset":1467},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to sum of main diagonal elements of a matrix.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    int arr[3][3],i,j,sum=0;\n    cout << \"Input elements in the matrix :\\n\";\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            cout << \"element -  : [\" << i << \"][\" << j <<\"]\";\n            cin >> arr[i][j];\n        }\n    }\n    cout << \"\\nThe matrix is : \\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\t\" << arr[i][j];\n    }\n    cout << \"\\n Major diagonal elements are: \";\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            if(i==j)\n            {\n                cout << \"\\t\" << arr[i][j];\n                sum=sum+arr[i][j];\n            }\n        }\n    }\n    cout << \"\\nsum of major diagonal element: \" << sum;\n}","position":{"start":{"line":65,"column":1,"offset":1469},"end":{"line":103,"column":4,"offset":2364},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":104,"column":5,"offset":2370},"end":{"line":104,"column":11,"offset":2376},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2366},"end":{"line":104,"column":11,"offset":2376},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input elements in the matrix :\nelement - [0],[0] : 1\nelement - [0],[1] : 2\nelement - [0],[2] : 3\nelement - [1],[0] : 4\nelement - [1],[1] : 5\nelement - [1],[2] : 6\nelement - [2],[0] : 7\nelement - [2],[1] : 8\nelement - [2],[2] : 9\n\nThe matrix is :\n\n1       2       3\n4       5       6\n7       8       9\n Major diagonal elements are:  1  5  9\nsum of major diagonal element:15","position":{"start":{"line":105,"column":1,"offset":2378},"end":{"line":124,"column":4,"offset":2777},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":126,"column":4,"offset":2784},"end":{"line":126,"column":23,"offset":2803},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":2781},"end":{"line":126,"column":23,"offset":2803},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"31. Write a Java program to sum of main diagonal elements of a matrix.","position":{"start":{"line":127,"column":5,"offset":2809},"end":{"line":127,"column":75,"offset":2879},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":2805},"end":{"line":127,"column":75,"offset":2879},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to sum of main diagonal elements of a matrix.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n          Scanner z=new Scanner(System.in);\n          int arr[][]=new int[3][3],brr1[][],i,j,sum=0;\n          System.out.printf(\"Input elements in the matrix :\\n\");\n          for(i=0; i<3; i++)\n          {\n              for(j=0; j<3; j++)\n              {\n                  System.out.printf(\"element - : \"+\"[\"+i+\"]\"+\"[\"+j+\"]\");\n                  arr[i][j] = z.nextInt();\n              }\n          }\n          System.out.println(\"\\nThe matrix is : \\n\");\n          for(i=0; i<3; i++)\n          {\n              System.out.printf(\"\\n\");\n              for(j=0; j<3; j++)\n                  System.out.printf(\"\\t\"+arr[i][j]);\n          }\n          System.out.printf(\"\\n Major diagonal elements are: \");\n          for(i=0; i<3; i++)\n          {\n              for(j=0; j<3; j++)\n              {\n                  if(i==j)\n                  {\n                      System.out.printf(\" \"+arr[i][j]+\" \");\n                      sum=sum+arr[i][j];\n                  }\n              }\n          }\n          System.out.printf(\"\\nsum of major diagonal element: \"+sum);\n      }\n}","position":{"start":{"line":128,"column":1,"offset":2881},"end":{"line":167,"column":4,"offset":4156},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":168,"column":5,"offset":4162},"end":{"line":168,"column":11,"offset":4168},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":4158},"end":{"line":168,"column":11,"offset":4168},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input elements in the matrix :\nelement - [0],[0] : 1\nelement - [0],[1] : 2\nelement - [0],[2] : 3\nelement - [1],[0] : 4\nelement - [1],[1] : 5\nelement - [1],[2] : 6\nelement - [2],[0] : 7\nelement - [2],[1] : 8\nelement - [2],[2] : 9\n\nThe matrix is :\n\n1       2       3\n4       5       6\n7       8       9\n Major diagonal elements are:  1  5  9\nsum of major diagonal element:15","position":{"start":{"line":169,"column":1,"offset":4170},"end":{"line":188,"column":4,"offset":4569},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to subtract two matrices.\",\"category\":\"Array Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":191,"column":1,"offset":4573},"end":{"line":191,"column":225,"offset":4797},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":191,"column":225,"offset":4797}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to subtract two matrices.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"31. Write a C program to sum of main diagonal elements of a matrix.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to sum of main diagonal elements of a matrix.\\n#include <stdio.h>\\nvoid main()\\n{\\n    int arr[3][3],i,j,sum=0;\\n    printf(\\\"Input elements in the matrix :\\\\n\\\");\\n    for(i=0; i<3; i++)\\n    {\\n        for(j=0; j<3; j++)\\n        {\\n            printf(\\\"element - [%d],[%d] : \\\",i,j);\\n            scanf(\\\"%d\\\",&arr[i][j]);\\n        }\\n    }\\n\\n    printf(\\\"\\\\nThe matrix is : \\\\n\\\");\\n    for(i=0; i<3; i++)\\n    {\\n        printf(\\\"\\\\n\\\");\\n        for(j=0; j<3; j++)\\n            printf(\\\"%d\\\\t\\\",arr[i][j]);\\n    }\\n    printf(\\\"\\\\n Major diagonal elements are: \\\");\\n    for(i=0; i<3; i++)\\n    {\\n        for(j=0; j<3; j++)\\n        {\\n            if(i==j)\\n            {\\n                printf(\\\" %d \\\",arr[i][j]);\\n                sum=sum+arr[i][j];\\n            }\\n        }\\n    }\\n    printf(\\\"\\\\nsum of major diagonal element:%d\\\",sum);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the matrix :\\nelement - [0],[0] : 1\\nelement - [0],[1] : 2\\nelement - [0],[2] : 3\\nelement - [1],[0] : 4\\nelement - [1],[1] : 5\\nelement - [1],[2] : 6\\nelement - [2],[0] : 7\\nelement - [2],[1] : 8\\nelement - [2],[2] : 9\\n\\nThe matrix is :\\n\\n1       2       3\\n4       5       6\\n7       8       9\\n Major diagonal elements are:  1  5  9\\nsum of major diagonal element:15\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"31. Write a C++ program to sum of main diagonal elements of a matrix.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to sum of main diagonal elements of a matrix.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n    int arr[3][3],i,j,sum=0;\\n    cout << \\\"Input elements in the matrix :\\\\n\\\";\\n    for(i=0; i<3; i++)\\n    {\\n        for(j=0; j<3; j++)\\n        {\\n            cout << \\\"element -  : [\\\" << i << \\\"][\\\" << j <<\\\"]\\\";\\n            cin >> arr[i][j];\\n        }\\n    }\\n    cout << \\\"\\\\nThe matrix is : \\\\n\\\";\\n    for(i=0; i<3; i++)\\n    {\\n        cout << \\\"\\\\n\\\";\\n        for(j=0; j<3; j++)\\n            cout << \\\"\\\\t\\\" << arr[i][j];\\n    }\\n    cout << \\\"\\\\n Major diagonal elements are: \\\";\\n    for(i=0; i<3; i++)\\n    {\\n        for(j=0; j<3; j++)\\n        {\\n            if(i==j)\\n            {\\n                cout << \\\"\\\\t\\\" << arr[i][j];\\n                sum=sum+arr[i][j];\\n            }\\n        }\\n    }\\n    cout << \\\"\\\\nsum of major diagonal element: \\\" << sum;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the matrix :\\nelement - [0],[0] : 1\\nelement - [0],[1] : 2\\nelement - [0],[2] : 3\\nelement - [1],[0] : 4\\nelement - [1],[1] : 5\\nelement - [1],[2] : 6\\nelement - [2],[0] : 7\\nelement - [2],[1] : 8\\nelement - [2],[2] : 9\\n\\nThe matrix is :\\n\\n1       2       3\\n4       5       6\\n7       8       9\\n Major diagonal elements are:  1  5  9\\nsum of major diagonal element:15\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"31. Write a Java program to sum of main diagonal elements of a matrix.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to sum of main diagonal elements of a matrix.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n          Scanner z=new Scanner(System.in);\\n          int arr[][]=new int[3][3],brr1[][],i,j,sum=0;\\n          System.out.printf(\\\"Input elements in the matrix :\\\\n\\\");\\n          for(i=0; i<3; i++)\\n          {\\n              for(j=0; j<3; j++)\\n              {\\n                  System.out.printf(\\\"element - : \\\"+\\\"[\\\"+i+\\\"]\\\"+\\\"[\\\"+j+\\\"]\\\");\\n                  arr[i][j] = z.nextInt();\\n              }\\n          }\\n          System.out.println(\\\"\\\\nThe matrix is : \\\\n\\\");\\n          for(i=0; i<3; i++)\\n          {\\n              System.out.printf(\\\"\\\\n\\\");\\n              for(j=0; j<3; j++)\\n                  System.out.printf(\\\"\\\\t\\\"+arr[i][j]);\\n          }\\n          System.out.printf(\\\"\\\\n Major diagonal elements are: \\\");\\n          for(i=0; i<3; i++)\\n          {\\n              for(j=0; j<3; j++)\\n              {\\n                  if(i==j)\\n                  {\\n                      System.out.printf(\\\" \\\"+arr[i][j]+\\\" \\\");\\n                      sum=sum+arr[i][j];\\n                  }\\n              }\\n          }\\n          System.out.printf(\\\"\\\\nsum of major diagonal element: \\\"+sum);\\n      }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the matrix :\\nelement - [0],[0] : 1\\nelement - [0],[1] : 2\\nelement - [0],[2] : 3\\nelement - [1],[0] : 4\\nelement - [1],[1] : 5\\nelement - [1],[2] : 6\\nelement - [2],[0] : 7\\nelement - [2],[1] : 8\\nelement - [2],[2] : 9\\n\\nThe matrix is :\\n\\n1       2       3\\n4       5       6\\n7       8       9\\n Major diagonal elements are:  1  5  9\\nsum of major diagonal element:15\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to subtract two matrices.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`31. Write a C program to sum of main diagonal elements of a matrix.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to sum of main diagonal elements of a matrix.\n#include <stdio.h>\nvoid main()\n{\n    int arr[3][3],i,j,sum=0;\n    printf(\"Input elements in the matrix :\\\\n\");\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            printf(\"element - [%d],[%d] : \",i,j);\n            scanf(\"%d\",&arr[i][j]);\n        }\n    }\n\n    printf(\"\\\\nThe matrix is : \\\\n\");\n    for(i=0; i<3; i++)\n    {\n        printf(\"\\\\n\");\n        for(j=0; j<3; j++)\n            printf(\"%d\\\\t\",arr[i][j]);\n    }\n    printf(\"\\\\n Major diagonal elements are: \");\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            if(i==j)\n            {\n                printf(\" %d \",arr[i][j]);\n                sum=sum+arr[i][j];\n            }\n        }\n    }\n    printf(\"\\\\nsum of major diagonal element:%d\",sum);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input elements in the matrix :\nelement - [0],[0] : 1\nelement - [0],[1] : 2\nelement - [0],[2] : 3\nelement - [1],[0] : 4\nelement - [1],[1] : 5\nelement - [1],[2] : 6\nelement - [2],[0] : 7\nelement - [2],[1] : 8\nelement - [2],[2] : 9\n\nThe matrix is :\n\n1       2       3\n4       5       6\n7       8       9\n Major diagonal elements are:  1  5  9\nsum of major diagonal element:15\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`31. Write a C++ program to sum of main diagonal elements of a matrix.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to sum of main diagonal elements of a matrix.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    int arr[3][3],i,j,sum=0;\n    cout << \"Input elements in the matrix :\\\\n\";\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            cout << \"element -  : [\" << i << \"][\" << j <<\"]\";\n            cin >> arr[i][j];\n        }\n    }\n    cout << \"\\\\nThe matrix is : \\\\n\";\n    for(i=0; i<3; i++)\n    {\n        cout << \"\\\\n\";\n        for(j=0; j<3; j++)\n            cout << \"\\\\t\" << arr[i][j];\n    }\n    cout << \"\\\\n Major diagonal elements are: \";\n    for(i=0; i<3; i++)\n    {\n        for(j=0; j<3; j++)\n        {\n            if(i==j)\n            {\n                cout << \"\\\\t\" << arr[i][j];\n                sum=sum+arr[i][j];\n            }\n        }\n    }\n    cout << \"\\\\nsum of major diagonal element: \" << sum;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input elements in the matrix :\nelement - [0],[0] : 1\nelement - [0],[1] : 2\nelement - [0],[2] : 3\nelement - [1],[0] : 4\nelement - [1],[1] : 5\nelement - [1],[2] : 6\nelement - [2],[0] : 7\nelement - [2],[1] : 8\nelement - [2],[2] : 9\n\nThe matrix is :\n\n1       2       3\n4       5       6\n7       8       9\n Major diagonal elements are:  1  5  9\nsum of major diagonal element:15\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`31. Write a Java program to sum of main diagonal elements of a matrix.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to sum of main diagonal elements of a matrix.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n          Scanner z=new Scanner(System.in);\n          int arr[][]=new int[3][3],brr1[][],i,j,sum=0;\n          System.out.printf(\"Input elements in the matrix :\\\\n\");\n          for(i=0; i<3; i++)\n          {\n              for(j=0; j<3; j++)\n              {\n                  System.out.printf(\"element - : \"+\"[\"+i+\"]\"+\"[\"+j+\"]\");\n                  arr[i][j] = z.nextInt();\n              }\n          }\n          System.out.println(\"\\\\nThe matrix is : \\\\n\");\n          for(i=0; i<3; i++)\n          {\n              System.out.printf(\"\\\\n\");\n              for(j=0; j<3; j++)\n                  System.out.printf(\"\\\\t\"+arr[i][j]);\n          }\n          System.out.printf(\"\\\\n Major diagonal elements are: \");\n          for(i=0; i<3; i++)\n          {\n              for(j=0; j<3; j++)\n              {\n                  if(i==j)\n                  {\n                      System.out.printf(\" \"+arr[i][j]+\" \");\n                      sum=sum+arr[i][j];\n                  }\n              }\n          }\n          System.out.printf(\"\\\\nsum of major diagonal element: \"+sum);\n      }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Input elements in the matrix :\nelement - [0],[0] : 1\nelement - [0],[1] : 2\nelement - [0],[2] : 3\nelement - [1],[0] : 4\nelement - [1],[1] : 5\nelement - [1],[2] : 6\nelement - [2],[0] : 7\nelement - [2],[1] : 8\nelement - [2],[2] : 9\n\nThe matrix is :\n\n1       2       3\n4       5       6\n7       8       9\n Major diagonal elements are:  1  5  9\nsum of major diagonal element:15\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}