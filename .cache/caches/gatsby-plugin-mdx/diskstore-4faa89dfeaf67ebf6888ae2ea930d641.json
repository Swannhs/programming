{"expireTime":9007200883706344000,"key":"gatsby-plugin-mdx-entire-payload-a7406bcd20013ac9637685e3d178307c--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Program-21: Write a C program to check whether a number is negative, positive or zero.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":91,"offset":113},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":91,"offset":113},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"/*Write a C program to check whether a number is negative, positive or zero.*/\n#include<stdio.h>\nvoid main()\n{\n    int a;\n    printf(\"Enter a Number:\");\n    scanf(\"%d\",&a);\n    if(a>0)\n        printf(\"number is positive number \");\n    else if(a<0)\n        printf(\"number is negative number\");\n    else\n        printf(\"number is equal to zero\");\n}","position":{"start":{"line":4,"column":1,"offset":115},"end":{"line":19,"column":4,"offset":485},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":20,"column":5,"offset":491},"end":{"line":20,"column":11,"offset":497},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":487},"end":{"line":20,"column":11,"offset":497},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a Number:\n50\nPositive number","position":{"start":{"line":21,"column":1,"offset":499},"end":{"line":25,"column":4,"offset":545},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":27,"column":4,"offset":552},"end":{"line":27,"column":22,"offset":570},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":549},"end":{"line":27,"column":22,"offset":570},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Program-21: Write a C program to check whether a number is negative, positive or zero.","position":{"start":{"line":28,"column":5,"offset":576},"end":{"line":28,"column":91,"offset":662},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":572},"end":{"line":28,"column":91,"offset":662},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"/*Write a C++ program to check whether a number is negative, positive or zero.*/\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int a;\n    cout<<\"enter a number-\\n\";\n    cin>>a;\n    if(a>0)\n        cout<<\"positive number\";\n    if(a<0)\n        cout<<\"negative number\";\n    if(a==0)\n        cout<<\"the number is equal to zero\";\n}","position":{"start":{"line":29,"column":1,"offset":664},"end":{"line":45,"column":4,"offset":1026},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":46,"column":5,"offset":1032},"end":{"line":46,"column":11,"offset":1038},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1028},"end":{"line":46,"column":11,"offset":1038},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a Number:\n50\nPositive number","position":{"start":{"line":47,"column":1,"offset":1040},"end":{"line":51,"column":4,"offset":1086},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":53,"column":4,"offset":1093},"end":{"line":53,"column":23,"offset":1112},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1090},"end":{"line":53,"column":23,"offset":1112},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Program-21: Write a C program to check whether a number is negative, positive or zero.","position":{"start":{"line":54,"column":5,"offset":1118},"end":{"line":54,"column":91,"offset":1204},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1114},"end":{"line":54,"column":91,"offset":1204},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/*Write a java program to check whether a number is negative, positive or zero.*/\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        int a;\n        System.out.print(\"Enter a Number:\\n\");\n        a=z.nextInt();\n\n        if(a>0)\n            System.out.print(\"Positive number\");\n        if(a<0)\n            System.out.print(\"Negative number\");\n        if(a==0)\n            System.out.print(\"Number is equal to Zero\");\n    }\n}","position":{"start":{"line":55,"column":1,"offset":1206},"end":{"line":74,"column":4,"offset":1752},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":75,"column":5,"offset":1758},"end":{"line":75,"column":11,"offset":1764},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1754},"end":{"line":75,"column":11,"offset":1764},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a Number:\n50\nPositive number","position":{"start":{"line":76,"column":1,"offset":1766},"end":{"line":80,"column":4,"offset":1812},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to check whether a number is negative, positive or zero.\",\"category\":\"If-Else Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":83,"column":1,"offset":1816},"end":{"line":83,"column":250,"offset":2065},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":83,"column":250,"offset":2065}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether a number is negative, positive or zero.\",\n  \"category\": \"If-Else Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"Program-21: Write a C program to check whether a number is negative, positive or zero.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"/*Write a C program to check whether a number is negative, positive or zero.*/\\n#include<stdio.h>\\nvoid main()\\n{\\n    int a;\\n    printf(\\\"Enter a Number:\\\");\\n    scanf(\\\"%d\\\",&a);\\n    if(a>0)\\n        printf(\\\"number is positive number \\\");\\n    else if(a<0)\\n        printf(\\\"number is negative number\\\");\\n    else\\n        printf(\\\"number is equal to zero\\\");\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a Number:\\n50\\nPositive number\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"Program-21: Write a C program to check whether a number is negative, positive or zero.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"/*Write a C++ program to check whether a number is negative, positive or zero.*/\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int a;\\n    cout<<\\\"enter a number-\\\\n\\\";\\n    cin>>a;\\n    if(a>0)\\n        cout<<\\\"positive number\\\";\\n    if(a<0)\\n        cout<<\\\"negative number\\\";\\n    if(a==0)\\n        cout<<\\\"the number is equal to zero\\\";\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a Number:\\n50\\nPositive number\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"Program-21: Write a C program to check whether a number is negative, positive or zero.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"/*Write a java program to check whether a number is negative, positive or zero.*/\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        int a;\\n        System.out.print(\\\"Enter a Number:\\\\n\\\");\\n        a=z.nextInt();\\n\\n        if(a>0)\\n            System.out.print(\\\"Positive number\\\");\\n        if(a<0)\\n            System.out.print(\\\"Negative number\\\");\\n        if(a==0)\\n            System.out.print(\\\"Number is equal to Zero\\\");\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a Number:\\n50\\nPositive number\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether a number is negative, positive or zero.\",\n  \"category\": \"If-Else Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`Program-21: Write a C program to check whether a number is negative, positive or zero.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`/*Write a C program to check whether a number is negative, positive or zero.*/\n#include<stdio.h>\nvoid main()\n{\n    int a;\n    printf(\"Enter a Number:\");\n    scanf(\"%d\",&a);\n    if(a>0)\n        printf(\"number is positive number \");\n    else if(a<0)\n        printf(\"number is negative number\");\n    else\n        printf(\"number is equal to zero\");\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a Number:\n50\nPositive number\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`Program-21: Write a C program to check whether a number is negative, positive or zero.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`/*Write a C++ program to check whether a number is negative, positive or zero.*/\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int a;\n    cout<<\"enter a number-\\\\n\";\n    cin>>a;\n    if(a>0)\n        cout<<\"positive number\";\n    if(a<0)\n        cout<<\"negative number\";\n    if(a==0)\n        cout<<\"the number is equal to zero\";\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a Number:\n50\nPositive number\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`Program-21: Write a C program to check whether a number is negative, positive or zero.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/*Write a java program to check whether a number is negative, positive or zero.*/\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n\n        Scanner z=new Scanner(System.in);\n        int a;\n        System.out.print(\"Enter a Number:\\\\n\");\n        a=z.nextInt();\n\n        if(a>0)\n            System.out.print(\"Positive number\");\n        if(a<0)\n            System.out.print(\"Negative number\");\n        if(a==0)\n            System.out.print(\"Number is equal to Zero\");\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a Number:\n50\nPositive number\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}