{"expireTime":9007200883706344000,"key":"gatsby-plugin-mdx-entire-payload-50d9f63fb7f6f94e7be5f9d85138f33b--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"35. Write a C program to display the first n terms of Fibonacci series.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":76,"offset":98},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":76,"offset":98},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to display the first n terms of Fibonacci series.\n//Using for loop\n#include <stdio.h>\n\nvoid main()\n{\n   int prv=0,pre=1,t,i,n;\n   scanf(\"%d\",&n);\n   printf(\"Fibonacci series upto  to %d terms : \\n\",n);\n   printf(\"% 5d % 5d\", prv,pre);\n\n  for(i=3;i<=n;i++)\n   {\n     t=prv+pre;\n     printf(\"% 5d\",t);\n     prv=pre;\n     pre=t;\n   }\n}\n//Using while loop\n#include <stdio.h>\n\nvoid main()\n{\n    int prv=0,pre=1,t,i,n;\n    scanf(\"%d\",&n);\n    printf(\"Fibonacci series upto  to %d terms are : \\n\",n);\n    printf(\"% 5d % 5d\", prv,pre);\n    i=3;\n\n    while(i<=n)\n    {\n        t=prv+pre;\n        printf(\"% 5d\",t);\n        prv=pre;\n        pre=t;\n        i++;\n    }\n}\n//Using do while loop\n#include <stdio.h>\n\nvoid main()\n{\n    int prv=0,pre=1,t,i,n;\n    scanf(\"%d\",&n);\n    printf(\"Fibonacci series upto  to %d terms are : \\n\",n);\n    printf(\"% 5d % 5d\", prv,pre);\n    i=3;\n\n    do\n    {\n        t=prv+pre;\n        printf(\"% 5d\",t);\n        prv=pre;\n        pre=t;\n        i++;\n    }\n    while(i<=n);\n}","position":{"start":{"line":4,"column":1,"offset":100},"end":{"line":65,"column":4,"offset":1183},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":66,"column":5,"offset":1189},"end":{"line":66,"column":11,"offset":1195},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1185},"end":{"line":66,"column":11,"offset":1195},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"10\nFibonacci series upto  to 10 terms :\n    0     1    1    2    3    5    8   13   21   34","position":{"start":{"line":67,"column":1,"offset":1197},"end":{"line":71,"column":4,"offset":1300},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":73,"column":4,"offset":1307},"end":{"line":73,"column":22,"offset":1325},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1304},"end":{"line":73,"column":22,"offset":1325},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"35. Write a C++ program display the first n terms of Fibonacci series.","position":{"start":{"line":74,"column":5,"offset":1331},"end":{"line":74,"column":75,"offset":1401},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1327},"end":{"line":74,"column":75,"offset":1401},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to display the first n terms of Fibonacci series.\n\n//Using for loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n   int prv=0,pre=1,t,i,n;\n   cin >> n;\n   cout << \"Fibonacci series upto  to << n << \" terms : \";\n   cout << \"  \" << prv << \"  \" << pre;\n   for(i=3;i<=n;i++)\n   {\n     t=prv+pre;\n     cout << \"  \" << t;\n     prv=pre;\n     pre=t;\n   }\n}\n//Using while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int prv=0,pre=1,t,i,n;\n    cin >> n;\n    cout << \"Fibonacci series upto  to << n << \" terms : \";\n    cout << \"  \" << prv << \"  \" << pre;\n    i=3;\n    while(i<=n)\n    {\n        t=prv+pre;\n        cout << \"  \" << t;\n        prv=pre;\n        pre=t;\n        i++;\n    }\n}\n//Using do while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int prv=0,pre=1,t,i,n;\n    cin >> n;\n    cout << \"Fibonacci series upto  to << n << \" terms : \";\n    cout << \"  \" << prv << \"  \" << pre;\n    i=3;\n    do\n    {\n        t=prv+pre;\n        cout << \"  \" << t;\n        prv=pre;\n        pre=t;\n        i++;\n    }\n    while(i<=n);\n}","position":{"start":{"line":75,"column":1,"offset":1403},"end":{"line":134,"column":4,"offset":2546},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":135,"column":5,"offset":2552},"end":{"line":135,"column":11,"offset":2558},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":2548},"end":{"line":135,"column":11,"offset":2558},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"10\nFibonacci series upto  to 10 terms :\n    0     1    1    2    3    5    8   13   21   34","position":{"start":{"line":136,"column":1,"offset":2560},"end":{"line":140,"column":4,"offset":2663},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":142,"column":4,"offset":2670},"end":{"line":142,"column":23,"offset":2689},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":2667},"end":{"line":142,"column":23,"offset":2689},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"35. Write a Java program to display the first n terms of Fibonacci series.","position":{"start":{"line":143,"column":5,"offset":2695},"end":{"line":143,"column":79,"offset":2769},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":2691},"end":{"line":143,"column":79,"offset":2769},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to accept 3 numbers from user one by one and displays their sum on screen.\n//Using for loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n       Scanner z = new Scanner(System.in);\n       int prv=0,pre=1,t,i,n;\n       n = z.nextInt();\n       System.out.println(\"Fibonacci series upto  to \" + n + \" terms : \");\n       System.out.println(\"  \" + prv + \"  \" + pre);\n       for(i=3;i<=n;i++)\n       {\n         t=prv+pre;\n         System.out.println(\" \" + t);\n         prv=pre;\n         pre=t;\n    }\n}\n//Using while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int prv=0,pre=1,t,i,n;\n        n = z.nextInt();\n        System.out.println(\"Fibonacci series upto  to \" + n + \" terms : \");\n        System.out.println(\"  \" + prv + \"  \" + pre);\n        i=3;\n        while(i<=n)\n        {\n            t=prv+pre;\n            System.out.println(\" \" + t);\n            prv=pre;\n            pre=t;\n            i++;\n        }\n    }\n}\n//Using do while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int prv=0,pre=1,t,i,n;\n        n = z.nextInt();\n        System.out.println(\"Fibonacci series upto  to \" + n + \" terms : \");\n        System.out.println(\"  \" + prv + \"  \" + pre);\n        i=3;\n        do\n        {\n            t=prv+pre;\n            System.out.println(\" \" + t);\n            prv=pre;\n            pre=t;\n            i++;\n        }\n        while(i<=n);\n    }\n}","position":{"start":{"line":144,"column":1,"offset":2771},"end":{"line":204,"column":4,"offset":4473},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":205,"column":5,"offset":4479},"end":{"line":205,"column":11,"offset":4485},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":4475},"end":{"line":205,"column":11,"offset":4485},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"10\nFibonacci series upto  to 10 terms :\n    0     1    1    2    3    5    8   13   21   34","position":{"start":{"line":206,"column":1,"offset":4487},"end":{"line":210,"column":4,"offset":4590},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java display the first n terms of Fibonacci series.\",\"category\":\"Loop(For,While,Do-While)Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":213,"column":1,"offset":4594},"end":{"line":213,"column":248,"offset":4841},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":213,"column":248,"offset":4841}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java display the first n terms of Fibonacci series.\",\n  \"category\": \"Loop(For,While,Do-While)Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"35. Write a C program to display the first n terms of Fibonacci series.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to display the first n terms of Fibonacci series.\\n//Using for loop\\n#include <stdio.h>\\n\\nvoid main()\\n{\\n   int prv=0,pre=1,t,i,n;\\n   scanf(\\\"%d\\\",&n);\\n   printf(\\\"Fibonacci series upto  to %d terms : \\\\n\\\",n);\\n   printf(\\\"% 5d % 5d\\\", prv,pre);\\n\\n  for(i=3;i<=n;i++)\\n   {\\n     t=prv+pre;\\n     printf(\\\"% 5d\\\",t);\\n     prv=pre;\\n     pre=t;\\n   }\\n}\\n//Using while loop\\n#include <stdio.h>\\n\\nvoid main()\\n{\\n    int prv=0,pre=1,t,i,n;\\n    scanf(\\\"%d\\\",&n);\\n    printf(\\\"Fibonacci series upto  to %d terms are : \\\\n\\\",n);\\n    printf(\\\"% 5d % 5d\\\", prv,pre);\\n    i=3;\\n\\n    while(i<=n)\\n    {\\n        t=prv+pre;\\n        printf(\\\"% 5d\\\",t);\\n        prv=pre;\\n        pre=t;\\n        i++;\\n    }\\n}\\n//Using do while loop\\n#include <stdio.h>\\n\\nvoid main()\\n{\\n    int prv=0,pre=1,t,i,n;\\n    scanf(\\\"%d\\\",&n);\\n    printf(\\\"Fibonacci series upto  to %d terms are : \\\\n\\\",n);\\n    printf(\\\"% 5d % 5d\\\", prv,pre);\\n    i=3;\\n\\n    do\\n    {\\n        t=prv+pre;\\n        printf(\\\"% 5d\\\",t);\\n        prv=pre;\\n        pre=t;\\n        i++;\\n    }\\n    while(i<=n);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"10\\nFibonacci series upto  to 10 terms :\\n    0     1    1    2    3    5    8   13   21   34\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"35. Write a C++ program display the first n terms of Fibonacci series.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to display the first n terms of Fibonacci series.\\n\\n//Using for loop\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n   int prv=0,pre=1,t,i,n;\\n   cin >> n;\\n   cout << \\\"Fibonacci series upto  to << n << \\\" terms : \\\";\\n   cout << \\\"  \\\" << prv << \\\"  \\\" << pre;\\n   for(i=3;i<=n;i++)\\n   {\\n     t=prv+pre;\\n     cout << \\\"  \\\" << t;\\n     prv=pre;\\n     pre=t;\\n   }\\n}\\n//Using while loop\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int prv=0,pre=1,t,i,n;\\n    cin >> n;\\n    cout << \\\"Fibonacci series upto  to << n << \\\" terms : \\\";\\n    cout << \\\"  \\\" << prv << \\\"  \\\" << pre;\\n    i=3;\\n    while(i<=n)\\n    {\\n        t=prv+pre;\\n        cout << \\\"  \\\" << t;\\n        prv=pre;\\n        pre=t;\\n        i++;\\n    }\\n}\\n//Using do while loop\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int prv=0,pre=1,t,i,n;\\n    cin >> n;\\n    cout << \\\"Fibonacci series upto  to << n << \\\" terms : \\\";\\n    cout << \\\"  \\\" << prv << \\\"  \\\" << pre;\\n    i=3;\\n    do\\n    {\\n        t=prv+pre;\\n        cout << \\\"  \\\" << t;\\n        prv=pre;\\n        pre=t;\\n        i++;\\n    }\\n    while(i<=n);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"10\\nFibonacci series upto  to 10 terms :\\n    0     1    1    2    3    5    8   13   21   34\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"35. Write a Java program to display the first n terms of Fibonacci series.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to accept 3 numbers from user one by one and displays their sum on screen.\\n//Using for loop\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n       Scanner z = new Scanner(System.in);\\n       int prv=0,pre=1,t,i,n;\\n       n = z.nextInt();\\n       System.out.println(\\\"Fibonacci series upto  to \\\" + n + \\\" terms : \\\");\\n       System.out.println(\\\"  \\\" + prv + \\\"  \\\" + pre);\\n       for(i=3;i<=n;i++)\\n       {\\n         t=prv+pre;\\n         System.out.println(\\\" \\\" + t);\\n         prv=pre;\\n         pre=t;\\n    }\\n}\\n//Using while loop\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int prv=0,pre=1,t,i,n;\\n        n = z.nextInt();\\n        System.out.println(\\\"Fibonacci series upto  to \\\" + n + \\\" terms : \\\");\\n        System.out.println(\\\"  \\\" + prv + \\\"  \\\" + pre);\\n        i=3;\\n        while(i<=n)\\n        {\\n            t=prv+pre;\\n            System.out.println(\\\" \\\" + t);\\n            prv=pre;\\n            pre=t;\\n            i++;\\n        }\\n    }\\n}\\n//Using do while loop\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int prv=0,pre=1,t,i,n;\\n        n = z.nextInt();\\n        System.out.println(\\\"Fibonacci series upto  to \\\" + n + \\\" terms : \\\");\\n        System.out.println(\\\"  \\\" + prv + \\\"  \\\" + pre);\\n        i=3;\\n        do\\n        {\\n            t=prv+pre;\\n            System.out.println(\\\" \\\" + t);\\n            prv=pre;\\n            pre=t;\\n            i++;\\n        }\\n        while(i<=n);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"10\\nFibonacci series upto  to 10 terms :\\n    0     1    1    2    3    5    8   13   21   34\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java display the first n terms of Fibonacci series.\",\n  \"category\": \"Loop(For,While,Do-While)Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`35. Write a C program to display the first n terms of Fibonacci series.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to display the first n terms of Fibonacci series.\n//Using for loop\n#include <stdio.h>\n\nvoid main()\n{\n   int prv=0,pre=1,t,i,n;\n   scanf(\"%d\",&n);\n   printf(\"Fibonacci series upto  to %d terms : \\\\n\",n);\n   printf(\"% 5d % 5d\", prv,pre);\n\n  for(i=3;i<=n;i++)\n   {\n     t=prv+pre;\n     printf(\"% 5d\",t);\n     prv=pre;\n     pre=t;\n   }\n}\n//Using while loop\n#include <stdio.h>\n\nvoid main()\n{\n    int prv=0,pre=1,t,i,n;\n    scanf(\"%d\",&n);\n    printf(\"Fibonacci series upto  to %d terms are : \\\\n\",n);\n    printf(\"% 5d % 5d\", prv,pre);\n    i=3;\n\n    while(i<=n)\n    {\n        t=prv+pre;\n        printf(\"% 5d\",t);\n        prv=pre;\n        pre=t;\n        i++;\n    }\n}\n//Using do while loop\n#include <stdio.h>\n\nvoid main()\n{\n    int prv=0,pre=1,t,i,n;\n    scanf(\"%d\",&n);\n    printf(\"Fibonacci series upto  to %d terms are : \\\\n\",n);\n    printf(\"% 5d % 5d\", prv,pre);\n    i=3;\n\n    do\n    {\n        t=prv+pre;\n        printf(\"% 5d\",t);\n        prv=pre;\n        pre=t;\n        i++;\n    }\n    while(i<=n);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`10\nFibonacci series upto  to 10 terms :\n    0     1    1    2    3    5    8   13   21   34\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`35. Write a C++ program display the first n terms of Fibonacci series.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to display the first n terms of Fibonacci series.\n\n//Using for loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n   int prv=0,pre=1,t,i,n;\n   cin >> n;\n   cout << \"Fibonacci series upto  to << n << \" terms : \";\n   cout << \"  \" << prv << \"  \" << pre;\n   for(i=3;i<=n;i++)\n   {\n     t=prv+pre;\n     cout << \"  \" << t;\n     prv=pre;\n     pre=t;\n   }\n}\n//Using while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int prv=0,pre=1,t,i,n;\n    cin >> n;\n    cout << \"Fibonacci series upto  to << n << \" terms : \";\n    cout << \"  \" << prv << \"  \" << pre;\n    i=3;\n    while(i<=n)\n    {\n        t=prv+pre;\n        cout << \"  \" << t;\n        prv=pre;\n        pre=t;\n        i++;\n    }\n}\n//Using do while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int prv=0,pre=1,t,i,n;\n    cin >> n;\n    cout << \"Fibonacci series upto  to << n << \" terms : \";\n    cout << \"  \" << prv << \"  \" << pre;\n    i=3;\n    do\n    {\n        t=prv+pre;\n        cout << \"  \" << t;\n        prv=pre;\n        pre=t;\n        i++;\n    }\n    while(i<=n);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`10\nFibonacci series upto  to 10 terms :\n    0     1    1    2    3    5    8   13   21   34\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`35. Write a Java program to display the first n terms of Fibonacci series.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to accept 3 numbers from user one by one and displays their sum on screen.\n//Using for loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n       Scanner z = new Scanner(System.in);\n       int prv=0,pre=1,t,i,n;\n       n = z.nextInt();\n       System.out.println(\"Fibonacci series upto  to \" + n + \" terms : \");\n       System.out.println(\"  \" + prv + \"  \" + pre);\n       for(i=3;i<=n;i++)\n       {\n         t=prv+pre;\n         System.out.println(\" \" + t);\n         prv=pre;\n         pre=t;\n    }\n}\n//Using while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int prv=0,pre=1,t,i,n;\n        n = z.nextInt();\n        System.out.println(\"Fibonacci series upto  to \" + n + \" terms : \");\n        System.out.println(\"  \" + prv + \"  \" + pre);\n        i=3;\n        while(i<=n)\n        {\n            t=prv+pre;\n            System.out.println(\" \" + t);\n            prv=pre;\n            pre=t;\n            i++;\n        }\n    }\n}\n//Using do while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int prv=0,pre=1,t,i,n;\n        n = z.nextInt();\n        System.out.println(\"Fibonacci series upto  to \" + n + \" terms : \");\n        System.out.println(\"  \" + prv + \"  \" + pre);\n        i=3;\n        do\n        {\n            t=prv+pre;\n            System.out.println(\" \" + t);\n            prv=pre;\n            pre=t;\n            i++;\n        }\n        while(i<=n);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`10\nFibonacci series upto  to 10 terms :\n    0     1    1    2    3    5    8   13   21   34\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}