{"expireTime":9007200883718591000,"key":"gatsby-plugin-mdx-entire-payload-bdf7e3ab375c92345555ca739e12388f--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. Write a C program to separate the individual characters from a string.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":78,"offset":100},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":78,"offset":100},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to separate the individual characters from a string.\n#include <stdio.h>\nint main()\n{\n  char str[50];\n  int i;\n  printf(\"enter string \");\n  gets(str);\n  for(i=0 ;str[i] !='\\0'; i++)\n  {\n      printf(\"%c\",str[i]);\n      printf(\"\\n\");\n  }\n  return 0;\n}","position":{"start":{"line":4,"column":1,"offset":102},"end":{"line":20,"column":4,"offset":396},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":21,"column":5,"offset":402},"end":{"line":21,"column":11,"offset":408},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":398},"end":{"line":21,"column":11,"offset":408},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter string hello\nh\ne\nl\nl\no","position":{"start":{"line":22,"column":1,"offset":410},"end":{"line":29,"column":4,"offset":453},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":30,"column":4,"offset":458},"end":{"line":30,"column":22,"offset":476},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":455},"end":{"line":30,"column":22,"offset":476},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. Write a C++ program to separate the individual characters from a string.","position":{"start":{"line":31,"column":5,"offset":482},"end":{"line":31,"column":80,"offset":557},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":478},"end":{"line":31,"column":80,"offset":557},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to separate the individual characters from a string.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    char str[50];\n    int i;\n    cout << \"enter string \";\n    gets(str);\n    for(i=0; str[i] !='\\0'; i++){\n        cout << str[i] << endl;\n    }\n}","position":{"start":{"line":32,"column":1,"offset":559},"end":{"line":47,"column":4,"offset":860},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":48,"column":5,"offset":866},"end":{"line":48,"column":11,"offset":872},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":862},"end":{"line":48,"column":11,"offset":872},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter string hello\nh\ne\nl\nl\no","position":{"start":{"line":49,"column":1,"offset":874},"end":{"line":56,"column":4,"offset":917},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":58,"column":4,"offset":924},"end":{"line":58,"column":23,"offset":943},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":921},"end":{"line":58,"column":23,"offset":943},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3. Write a Java program to separate the individual characters from a string.","position":{"start":{"line":59,"column":5,"offset":949},"end":{"line":59,"column":81,"offset":1025},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":945},"end":{"line":59,"column":81,"offset":1025},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to separate the individual characters from a string.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z=new Scanner(System.in);\n          String str;\n          int i;\n          System.out.println(\"Enter a string\");\n          str = z.nextLine();\n          for (i=0; i < str.length(); i++ ){\n              System.out.println(str.charAt(i));\n          }\n      }\n}","position":{"start":{"line":60,"column":1,"offset":1027},"end":{"line":75,"column":4,"offset":1499},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":76,"column":5,"offset":1505},"end":{"line":76,"column":11,"offset":1511},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1501},"end":{"line":76,"column":11,"offset":1511},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter string hello\nh\ne\nl\nl\no","position":{"start":{"line":77,"column":1,"offset":1513},"end":{"line":84,"column":4,"offset":1556},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to separate the individual characters from a string.\",\"category\":\"String Index\",\"tags\":[\"string\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":87,"column":1,"offset":1560},"end":{"line":87,"column":222,"offset":1781},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":87,"column":222,"offset":1781}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to separate the individual characters from a string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"3. Write a C program to separate the individual characters from a string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to separate the individual characters from a string.\\n#include <stdio.h>\\nint main()\\n{\\n  char str[50];\\n  int i;\\n  printf(\\\"enter string \\\");\\n  gets(str);\\n  for(i=0 ;str[i] !='\\\\0'; i++)\\n  {\\n      printf(\\\"%c\\\",str[i]);\\n      printf(\\\"\\\\n\\\");\\n  }\\n  return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter string hello\\nh\\ne\\nl\\nl\\no\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"3. Write a C++ program to separate the individual characters from a string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to separate the individual characters from a string.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n    char str[50];\\n    int i;\\n    cout << \\\"enter string \\\";\\n    gets(str);\\n    for(i=0; str[i] !='\\\\0'; i++){\\n        cout << str[i] << endl;\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter string hello\\nh\\ne\\nl\\nl\\no\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"3. Write a Java program to separate the individual characters from a string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to separate the individual characters from a string.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n          Scanner z=new Scanner(System.in);\\n          String str;\\n          int i;\\n          System.out.println(\\\"Enter a string\\\");\\n          str = z.nextLine();\\n          for (i=0; i < str.length(); i++ ){\\n              System.out.println(str.charAt(i));\\n          }\\n      }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter string hello\\nh\\ne\\nl\\nl\\no\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to separate the individual characters from a string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`3. Write a C program to separate the individual characters from a string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to separate the individual characters from a string.\n#include <stdio.h>\nint main()\n{\n  char str[50];\n  int i;\n  printf(\"enter string \");\n  gets(str);\n  for(i=0 ;str[i] !='\\\\0'; i++)\n  {\n      printf(\"%c\",str[i]);\n      printf(\"\\\\n\");\n  }\n  return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter string hello\nh\ne\nl\nl\no\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`3. Write a C++ program to separate the individual characters from a string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to separate the individual characters from a string.\n\n#include <iostream>\nusing namespace std;\nint  main()\n{\n    char str[50];\n    int i;\n    cout << \"enter string \";\n    gets(str);\n    for(i=0; str[i] !='\\\\0'; i++){\n        cout << str[i] << endl;\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter string hello\nh\ne\nl\nl\no\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`3. Write a Java program to separate the individual characters from a string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to separate the individual characters from a string.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n          Scanner z=new Scanner(System.in);\n          String str;\n          int i;\n          System.out.println(\"Enter a string\");\n          str = z.nextLine();\n          for (i=0; i < str.length(); i++ ){\n              System.out.println(str.charAt(i));\n          }\n      }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter string hello\nh\ne\nl\nl\no\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}