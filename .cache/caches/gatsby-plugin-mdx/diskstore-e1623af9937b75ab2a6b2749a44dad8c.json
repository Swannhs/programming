{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-a3db59754e490289d994439cf8f4574f--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"20. Write a C program to extract a substring from a given string.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":70,"offset":92},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":70,"offset":92},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to extract a substring from a given string.\n#include <stdio.h>\n#include <string.h>\n#include<stdlib.h>\nint main()\n{\n    char a[50],b[50];\n    int index,num,i,l;\n    printf(\"enter the string \");\n    gets(a);\n    printf(\"enter start of index and number of characters to extract \");\n    scanf(\"%d%d\",&index,&num);\n    l=strlen(a);\n    if(index+num>l)\n    {\n        printf(\"invalid\");\n        exit(0);\n    }\n    for(i=0; i<num; i++)\n        b[i]=a[index+i];\n\n\n    b[i]='\\0';\n    printf(\"extracted string is:%s\",b);\n\n}","position":{"start":{"line":4,"column":1,"offset":94},"end":{"line":31,"column":4,"offset":662},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":32,"column":5,"offset":668},"end":{"line":32,"column":11,"offset":674},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":664},"end":{"line":32,"column":11,"offset":674},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter the string hello\nenter start of index and number of characters to extract 1 2\nextracted string is:el","position":{"start":{"line":33,"column":1,"offset":676},"end":{"line":37,"column":4,"offset":794},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":38,"column":4,"offset":799},"end":{"line":38,"column":22,"offset":817},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":796},"end":{"line":38,"column":22,"offset":817},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"20. Write a C++ program to extract a substring from a given string.","position":{"start":{"line":39,"column":5,"offset":823},"end":{"line":39,"column":72,"offset":890},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":819},"end":{"line":39,"column":72,"offset":890},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to extract a substring from a given string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint  main()\n{\n    char a[50],b[50];\n    int index,num,i,l;\n    cout << \"enter the string \";\n    gets(a);\n    cout << \"enter start of index and number of characters to extract\";\n    scanf(\"%d%d\",&index,&num);\n    l=strlen(a);\n    if(index+num>l)\n    {\n        cout << \"invalid\");\n        exit(0);\n    }\n    for(i=0; i<num; i++)\n        b[i]=a[index+i];\n    b[i]='\\0';\n    cout << \"extracted string is:\"<<b;\n}","position":{"start":{"line":40,"column":1,"offset":892},"end":{"line":65,"column":4,"offset":1461},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":66,"column":5,"offset":1467},"end":{"line":66,"column":11,"offset":1473},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1463},"end":{"line":66,"column":11,"offset":1473},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter the string hello\nenter start of index and number of characters to extract 1 2\nextracted string is:el","position":{"start":{"line":67,"column":1,"offset":1475},"end":{"line":71,"column":4,"offset":1593},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":73,"column":4,"offset":1600},"end":{"line":73,"column":23,"offset":1619},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1597},"end":{"line":73,"column":23,"offset":1619},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"20. Write a Java program to extract a substring from a given string.","position":{"start":{"line":74,"column":5,"offset":1625},"end":{"line":74,"column":73,"offset":1693},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1621},"end":{"line":74,"column":73,"offset":1693},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to extract a substring from a given string.\nimport java.util.Scanner;\n\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        System.out.println(\"Enter a string: \");\n        String str, result = \"\";\n        int index, num;\n        str = z.nextLine();\n        System.out.println(\"enter start of index and number of characters to extract \");\n        index = z.nextInt();\n        num = z.nextInt();\n        if (index + num > str.length()) {\n            System.out.println(\"Invalid\");\n            System.exit(0);\n        }\n        for (int i = 0; i < num; i++) {\n            result += str.charAt(i);\n        }\n        System.out.println(\"Extracted string is: \" + result);\n    }\n}","position":{"start":{"line":75,"column":1,"offset":1695},"end":{"line":99,"column":4,"offset":2493},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":100,"column":5,"offset":2499},"end":{"line":100,"column":11,"offset":2505},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2495},"end":{"line":100,"column":11,"offset":2505},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter the string hello\nenter start of index and number of characters to extract 1 2\nextracted string is:el","position":{"start":{"line":101,"column":1,"offset":2507},"end":{"line":105,"column":4,"offset":2625},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to extract a substring from a given string.\",\"category\":\"String Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":108,"column":1,"offset":2629},"end":{"line":108,"column":236,"offset":2864},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":108,"column":236,"offset":2864}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to extract a substring from a given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"20. Write a C program to extract a substring from a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to extract a substring from a given string.\\n#include <stdio.h>\\n#include <string.h>\\n#include<stdlib.h>\\nint main()\\n{\\n    char a[50],b[50];\\n    int index,num,i,l;\\n    printf(\\\"enter the string \\\");\\n    gets(a);\\n    printf(\\\"enter start of index and number of characters to extract \\\");\\n    scanf(\\\"%d%d\\\",&index,&num);\\n    l=strlen(a);\\n    if(index+num>l)\\n    {\\n        printf(\\\"invalid\\\");\\n        exit(0);\\n    }\\n    for(i=0; i<num; i++)\\n        b[i]=a[index+i];\\n\\n\\n    b[i]='\\\\0';\\n    printf(\\\"extracted string is:%s\\\",b);\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter the string hello\\nenter start of index and number of characters to extract 1 2\\nextracted string is:el\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"20. Write a C++ program to extract a substring from a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to extract a substring from a given string.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint  main()\\n{\\n    char a[50],b[50];\\n    int index,num,i,l;\\n    cout << \\\"enter the string \\\";\\n    gets(a);\\n    cout << \\\"enter start of index and number of characters to extract\\\";\\n    scanf(\\\"%d%d\\\",&index,&num);\\n    l=strlen(a);\\n    if(index+num>l)\\n    {\\n        cout << \\\"invalid\\\");\\n        exit(0);\\n    }\\n    for(i=0; i<num; i++)\\n        b[i]=a[index+i];\\n    b[i]='\\\\0';\\n    cout << \\\"extracted string is:\\\"<<b;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter the string hello\\nenter start of index and number of characters to extract 1 2\\nextracted string is:el\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"20. Write a Java program to extract a substring from a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to extract a substring from a given string.\\nimport java.util.Scanner;\\n\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        System.out.println(\\\"Enter a string: \\\");\\n        String str, result = \\\"\\\";\\n        int index, num;\\n        str = z.nextLine();\\n        System.out.println(\\\"enter start of index and number of characters to extract \\\");\\n        index = z.nextInt();\\n        num = z.nextInt();\\n        if (index + num > str.length()) {\\n            System.out.println(\\\"Invalid\\\");\\n            System.exit(0);\\n        }\\n        for (int i = 0; i < num; i++) {\\n            result += str.charAt(i);\\n        }\\n        System.out.println(\\\"Extracted string is: \\\" + result);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter the string hello\\nenter start of index and number of characters to extract 1 2\\nextracted string is:el\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to extract a substring from a given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`20. Write a C program to extract a substring from a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to extract a substring from a given string.\n#include <stdio.h>\n#include <string.h>\n#include<stdlib.h>\nint main()\n{\n    char a[50],b[50];\n    int index,num,i,l;\n    printf(\"enter the string \");\n    gets(a);\n    printf(\"enter start of index and number of characters to extract \");\n    scanf(\"%d%d\",&index,&num);\n    l=strlen(a);\n    if(index+num>l)\n    {\n        printf(\"invalid\");\n        exit(0);\n    }\n    for(i=0; i<num; i++)\n        b[i]=a[index+i];\n\n\n    b[i]='\\\\0';\n    printf(\"extracted string is:%s\",b);\n\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter the string hello\nenter start of index and number of characters to extract 1 2\nextracted string is:el\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`20. Write a C++ program to extract a substring from a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to extract a substring from a given string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint  main()\n{\n    char a[50],b[50];\n    int index,num,i,l;\n    cout << \"enter the string \";\n    gets(a);\n    cout << \"enter start of index and number of characters to extract\";\n    scanf(\"%d%d\",&index,&num);\n    l=strlen(a);\n    if(index+num>l)\n    {\n        cout << \"invalid\");\n        exit(0);\n    }\n    for(i=0; i<num; i++)\n        b[i]=a[index+i];\n    b[i]='\\\\0';\n    cout << \"extracted string is:\"<<b;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter the string hello\nenter start of index and number of characters to extract 1 2\nextracted string is:el\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`20. Write a Java program to extract a substring from a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to extract a substring from a given string.\nimport java.util.Scanner;\n\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        System.out.println(\"Enter a string: \");\n        String str, result = \"\";\n        int index, num;\n        str = z.nextLine();\n        System.out.println(\"enter start of index and number of characters to extract \");\n        index = z.nextInt();\n        num = z.nextInt();\n        if (index + num > str.length()) {\n            System.out.println(\"Invalid\");\n            System.exit(0);\n        }\n        for (int i = 0; i < num; i++) {\n            result += str.charAt(i);\n        }\n        System.out.println(\"Extracted string is: \" + result);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter the string hello\nenter start of index and number of characters to extract 1 2\nextracted string is:el\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}