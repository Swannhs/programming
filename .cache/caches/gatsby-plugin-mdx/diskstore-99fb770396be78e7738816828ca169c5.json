{"expireTime":9007200883710394000,"key":"gatsby-plugin-mdx-entire-payload-b08cb47552c41e33493bcd72ae7862b7--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"11. Write a C program to swap elements using call by reference.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":68,"offset":90},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":68,"offset":90},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to swap elements using call by reference.\n#include<stdio.h>\nint swap(int *p1, int *p2);\nvoid main()\n{\n  int a, b;\n    printf(\"Enter two integers\\n\");\n    scanf(\"%d%d\", &a, &b);\n    swap(&a, &b); //call function\n    printf(\"\\nThe Swapped Values are:\\n\");\n    printf(\" %d %d\", a, b);\n}\nint swap(int *p1, int *p2)\n{\n        int temp;\n        temp = *p1;\n        *p1 = *p2;\n        *p2 = temp;\n}","position":{"start":{"line":4,"column":1,"offset":92},"end":{"line":24,"column":4,"offset":532},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":25,"column":5,"offset":538},"end":{"line":25,"column":11,"offset":544},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":534},"end":{"line":25,"column":11,"offset":544},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter two integers\n1 2\n\nThe Swapped Values are:\n 2 1","position":{"start":{"line":26,"column":1,"offset":546},"end":{"line":32,"column":4,"offset":612},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":33,"column":4,"offset":617},"end":{"line":33,"column":22,"offset":635},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":614},"end":{"line":33,"column":22,"offset":635},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"11. Write a C++ program to swap elements using call by reference.","position":{"start":{"line":34,"column":5,"offset":641},"end":{"line":34,"column":70,"offset":706},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":637},"end":{"line":34,"column":70,"offset":706},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to swap elements using call by reference.\n#include <iostream>\nusing namespace std;\nint swap(int *p1, int *p2);\nint main()\n{\n    int a, b;\n    cout<<(\"Enter two integers\\n\");\n    cin>>a>>b;\n    swap(&a, &b); //call function\n    cout<<(\"\\nThe Swapped Values are:\\n\");\n    cout<<a <<\" and \"<<b;\n}\nint swap(int *p1, int *p2)\n{\n    int temp;\n    temp = *p1;\n    *p1 = *p2;\n    *p2 = temp;\n}","position":{"start":{"line":35,"column":1,"offset":708},"end":{"line":56,"column":4,"offset":1145},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":57,"column":5,"offset":1151},"end":{"line":57,"column":11,"offset":1157},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1147},"end":{"line":57,"column":11,"offset":1157},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter two integers\n1 2\n\nThe Swapped Values are:\n 2 1","position":{"start":{"line":58,"column":1,"offset":1159},"end":{"line":64,"column":4,"offset":1225},"indent":[1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to swap elements using call by reference.\",\"category\":\"Pointer Program Index\",\"tags\":[\"#c\",\"#c++\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":67,"column":1,"offset":1229},"end":{"line":67,"column":235,"offset":1463},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":67,"column":235,"offset":1463}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to swap elements using call by reference.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"11. Write a C program to swap elements using call by reference.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to swap elements using call by reference.\\n#include<stdio.h>\\nint swap(int *p1, int *p2);\\nvoid main()\\n{\\n  int a, b;\\n    printf(\\\"Enter two integers\\\\n\\\");\\n    scanf(\\\"%d%d\\\", &a, &b);\\n    swap(&a, &b); //call function\\n    printf(\\\"\\\\nThe Swapped Values are:\\\\n\\\");\\n    printf(\\\" %d %d\\\", a, b);\\n}\\nint swap(int *p1, int *p2)\\n{\\n        int temp;\\n        temp = *p1;\\n        *p1 = *p2;\\n        *p2 = temp;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter two integers\\n1 2\\n\\nThe Swapped Values are:\\n 2 1\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"11. Write a C++ program to swap elements using call by reference.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to swap elements using call by reference.\\n#include <iostream>\\nusing namespace std;\\nint swap(int *p1, int *p2);\\nint main()\\n{\\n    int a, b;\\n    cout<<(\\\"Enter two integers\\\\n\\\");\\n    cin>>a>>b;\\n    swap(&a, &b); //call function\\n    cout<<(\\\"\\\\nThe Swapped Values are:\\\\n\\\");\\n    cout<<a <<\\\" and \\\"<<b;\\n}\\nint swap(int *p1, int *p2)\\n{\\n    int temp;\\n    temp = *p1;\\n    *p1 = *p2;\\n    *p2 = temp;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter two integers\\n1 2\\n\\nThe Swapped Values are:\\n 2 1\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to swap elements using call by reference.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`11. Write a C program to swap elements using call by reference.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to swap elements using call by reference.\n#include<stdio.h>\nint swap(int *p1, int *p2);\nvoid main()\n{\n  int a, b;\n    printf(\"Enter two integers\\\\n\");\n    scanf(\"%d%d\", &a, &b);\n    swap(&a, &b); //call function\n    printf(\"\\\\nThe Swapped Values are:\\\\n\");\n    printf(\" %d %d\", a, b);\n}\nint swap(int *p1, int *p2)\n{\n        int temp;\n        temp = *p1;\n        *p1 = *p2;\n        *p2 = temp;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter two integers\n1 2\n\nThe Swapped Values are:\n 2 1\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`11. Write a C++ program to swap elements using call by reference.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to swap elements using call by reference.\n#include <iostream>\nusing namespace std;\nint swap(int *p1, int *p2);\nint main()\n{\n    int a, b;\n    cout<<(\"Enter two integers\\\\n\");\n    cin>>a>>b;\n    swap(&a, &b); //call function\n    cout<<(\"\\\\nThe Swapped Values are:\\\\n\");\n    cout<<a <<\" and \"<<b;\n}\nint swap(int *p1, int *p2)\n{\n    int temp;\n    temp = *p1;\n    *p1 = *p2;\n    *p2 = temp;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter two integers\n1 2\n\nThe Swapped Values are:\n 2 1\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}