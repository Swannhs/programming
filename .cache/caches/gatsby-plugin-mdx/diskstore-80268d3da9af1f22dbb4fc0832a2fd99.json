{"expireTime":9007200883706344000,"key":"gatsby-plugin-mdx-entire-payload-861415d80b485899f968cb3dba224629--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"17. Write a C program to find two’s complement of a binary number.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":71,"offset":93},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":71,"offset":93},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to find two’s complement of a binary number.\n//Using for loop\n#include <stdio.h>\n#define SIZE 8\nint main()\n{\n    char b[SIZE + 1], onesComp[SIZE + 1], twosComp[SIZE + 1];\n    int i, c=1;\n    printf(\"Enter %d bit binary value: \", SIZE);\n    gets(b);\n    for(i=0; i<SIZE; i++)\n    {\n        if(b[i] == '1')\n        {\n            onesComp[i] = '0';\n        }\n        else if(b[i] == '0')\n        {\n            onesComp[i] = '1';\n        }\n    }\n    onesComp[SIZE] = '\\0';\n    for(i=SIZE-1; i>=0; i--)\n    {\n        if(onesComp[i] == '1' && c == 1)\n        {\n            twosComp[i] = '0';\n        }\n        else if(onesComp[i] == '0' && c == 1)\n        {\n            twosComp[i] = '1';\n            c = 0;\n        }\n        else\n        {\n            twosComp[i] = onesComp[i];\n        }\n    }\n    twosComp[SIZE] = '\\0';\n    printf(\"Original binary = %s\\n\", b);\n    printf(\"Ones complement = %s\\n\", onesComp);\n    printf(\"Twos complement = %s\\n\", twosComp);\n    return 0;\n}\n//Using while loop\n#include<stdio.h>\nvoid main()\n{\n    int i,a,sum=0;\n    i=1;\n    while(i<=3)\n    {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n        i++;\n    }\n    printf(\"%d\",sum);\n}\n//Using do while loop\n#include<stdio.h>\nvoid main()\n{\n    int i=1,a,sum=0;\n    do\n    {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n        i++;\n    }\n    while(i<=3);\n    printf(\"%d\",sum);\n}","position":{"start":{"line":4,"column":1,"offset":95},"end":{"line":77,"column":4,"offset":1544},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":78,"column":5,"offset":1550},"end":{"line":78,"column":11,"offset":1556},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1546},"end":{"line":78,"column":11,"offset":1556},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"input 3 4 5\noutput 12","position":{"start":{"line":79,"column":1,"offset":1558},"end":{"line":82,"column":4,"offset":1590},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":84,"column":4,"offset":1597},"end":{"line":84,"column":22,"offset":1615},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":1594},"end":{"line":84,"column":22,"offset":1615},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"17. Write a C++ program to find two’s complement of a binary number.","position":{"start":{"line":85,"column":5,"offset":1621},"end":{"line":85,"column":73,"offset":1689},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":1617},"end":{"line":85,"column":73,"offset":1689},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to find two’s complement of a binary number.\n#include<iostream>\nusing namespace std;\nint main()\n{\n    cout<<\"hello world\";\n    return 0;\n}\n//Using for loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i,a,sum=0;\n    for(i=1;i<=3;i++)\n    {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n    }\n    cout << sum;\n}\n//Using while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i,a,sum=0;\n    i=1;\n    while(i<=3)\n    {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n        i++;\n    }\n    cout << sum;\n}\n//Using do while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i=1,a,sum=0;\n    do\n    {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n        i++;\n    }\n    while(i<=3);\n    cout << sum;\n}","position":{"start":{"line":86,"column":1,"offset":1691},"end":{"line":138,"column":4,"offset":2507},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":139,"column":5,"offset":2513},"end":{"line":139,"column":11,"offset":2519},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":2509},"end":{"line":139,"column":11,"offset":2519},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"input 3 4 5\noutput 12","position":{"start":{"line":140,"column":1,"offset":2521},"end":{"line":143,"column":4,"offset":2553},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":145,"column":4,"offset":2560},"end":{"line":145,"column":23,"offset":2579},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":2557},"end":{"line":145,"column":23,"offset":2579},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"5. Write a Java program to find two’s complement of a binary number.","position":{"start":{"line":146,"column":5,"offset":2585},"end":{"line":146,"column":73,"offset":2653},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":2581},"end":{"line":146,"column":73,"offset":2653},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to find two’s complement of a binary number.\n//Using for loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i,a,sum=0;\n        i=1;\n        while(i<=3)\n        {\n            a = z.nextInt();\n            sum=sum+a;\n            i++;\n        }\n        System.out.println(sum);\n    }\n}\n//Using while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i,a,sum=0;\n        for(i=1;i<=3;i++)\n        {\n            a = z.nextInt();\n            sum=sum+a;\n            i++;\n        }\n        System.out.println(sum);\n    }\n}\n//Using do while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i=1,a,sum=0;\n        do\n        {\n            a = z.nextInt();\n            sum=sum+a;\n            i++;\n        }while(i<=3);\n        System.out.println(sum);\n    }\n}","position":{"start":{"line":147,"column":1,"offset":2655},"end":{"line":195,"column":4,"offset":3798},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":196,"column":5,"offset":3804},"end":{"line":196,"column":11,"offset":3810},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":3800},"end":{"line":196,"column":11,"offset":3810},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"input 3 4 5\noutput 12","position":{"start":{"line":197,"column":1,"offset":3812},"end":{"line":200,"column":4,"offset":3844},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to find two’s complement of a binary number.\",\"category\":\"Loop(For,While,Do-While)Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":203,"column":1,"offset":3848},"end":{"line":203,"column":254,"offset":4101},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":203,"column":254,"offset":4101}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find two’s complement of a binary number.\",\n  \"category\": \"Loop(For,While,Do-While)Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"17. Write a C program to find two\\u2019s complement of a binary number.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to find two\\u2019s complement of a binary number.\\n//Using for loop\\n#include <stdio.h>\\n#define SIZE 8\\nint main()\\n{\\n    char b[SIZE + 1], onesComp[SIZE + 1], twosComp[SIZE + 1];\\n    int i, c=1;\\n    printf(\\\"Enter %d bit binary value: \\\", SIZE);\\n    gets(b);\\n    for(i=0; i<SIZE; i++)\\n    {\\n        if(b[i] == '1')\\n        {\\n            onesComp[i] = '0';\\n        }\\n        else if(b[i] == '0')\\n        {\\n            onesComp[i] = '1';\\n        }\\n    }\\n    onesComp[SIZE] = '\\\\0';\\n    for(i=SIZE-1; i>=0; i--)\\n    {\\n        if(onesComp[i] == '1' && c == 1)\\n        {\\n            twosComp[i] = '0';\\n        }\\n        else if(onesComp[i] == '0' && c == 1)\\n        {\\n            twosComp[i] = '1';\\n            c = 0;\\n        }\\n        else\\n        {\\n            twosComp[i] = onesComp[i];\\n        }\\n    }\\n    twosComp[SIZE] = '\\\\0';\\n    printf(\\\"Original binary = %s\\\\n\\\", b);\\n    printf(\\\"Ones complement = %s\\\\n\\\", onesComp);\\n    printf(\\\"Twos complement = %s\\\\n\\\", twosComp);\\n    return 0;\\n}\\n//Using while loop\\n#include<stdio.h>\\nvoid main()\\n{\\n    int i,a,sum=0;\\n    i=1;\\n    while(i<=3)\\n    {\\n        scanf(\\\"%d\\\",&a);\\n        sum=sum+a;\\n        i++;\\n    }\\n    printf(\\\"%d\\\",sum);\\n}\\n//Using do while loop\\n#include<stdio.h>\\nvoid main()\\n{\\n    int i=1,a,sum=0;\\n    do\\n    {\\n        scanf(\\\"%d\\\",&a);\\n        sum=sum+a;\\n        i++;\\n    }\\n    while(i<=3);\\n    printf(\\\"%d\\\",sum);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"input 3 4 5\\noutput 12\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"17. Write a C++ program to find two\\u2019s complement of a binary number.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find two\\u2019s complement of a binary number.\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    cout<<\\\"hello world\\\";\\n    return 0;\\n}\\n//Using for loop\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int i,a,sum=0;\\n    for(i=1;i<=3;i++)\\n    {\\n        scanf(\\\"%d\\\",&a);\\n        sum=sum+a;\\n    }\\n    cout << sum;\\n}\\n//Using while loop\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int i,a,sum=0;\\n    i=1;\\n    while(i<=3)\\n    {\\n        scanf(\\\"%d\\\",&a);\\n        sum=sum+a;\\n        i++;\\n    }\\n    cout << sum;\\n}\\n//Using do while loop\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int i=1,a,sum=0;\\n    do\\n    {\\n        scanf(\\\"%d\\\",&a);\\n        sum=sum+a;\\n        i++;\\n    }\\n    while(i<=3);\\n    cout << sum;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"input 3 4 5\\noutput 12\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"5. Write a Java program to find two\\u2019s complement of a binary number.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to find two\\u2019s complement of a binary number.\\n//Using for loop\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int i,a,sum=0;\\n        i=1;\\n        while(i<=3)\\n        {\\n            a = z.nextInt();\\n            sum=sum+a;\\n            i++;\\n        }\\n        System.out.println(sum);\\n    }\\n}\\n//Using while loop\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int i,a,sum=0;\\n        for(i=1;i<=3;i++)\\n        {\\n            a = z.nextInt();\\n            sum=sum+a;\\n            i++;\\n        }\\n        System.out.println(sum);\\n    }\\n}\\n//Using do while loop\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int i=1,a,sum=0;\\n        do\\n        {\\n            a = z.nextInt();\\n            sum=sum+a;\\n            i++;\\n        }while(i<=3);\\n        System.out.println(sum);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"input 3 4 5\\noutput 12\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find two’s complement of a binary number.\",\n  \"category\": \"Loop(For,While,Do-While)Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`17. Write a C program to find two’s complement of a binary number.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to find two’s complement of a binary number.\n//Using for loop\n#include <stdio.h>\n#define SIZE 8\nint main()\n{\n    char b[SIZE + 1], onesComp[SIZE + 1], twosComp[SIZE + 1];\n    int i, c=1;\n    printf(\"Enter %d bit binary value: \", SIZE);\n    gets(b);\n    for(i=0; i<SIZE; i++)\n    {\n        if(b[i] == '1')\n        {\n            onesComp[i] = '0';\n        }\n        else if(b[i] == '0')\n        {\n            onesComp[i] = '1';\n        }\n    }\n    onesComp[SIZE] = '\\\\0';\n    for(i=SIZE-1; i>=0; i--)\n    {\n        if(onesComp[i] == '1' && c == 1)\n        {\n            twosComp[i] = '0';\n        }\n        else if(onesComp[i] == '0' && c == 1)\n        {\n            twosComp[i] = '1';\n            c = 0;\n        }\n        else\n        {\n            twosComp[i] = onesComp[i];\n        }\n    }\n    twosComp[SIZE] = '\\\\0';\n    printf(\"Original binary = %s\\\\n\", b);\n    printf(\"Ones complement = %s\\\\n\", onesComp);\n    printf(\"Twos complement = %s\\\\n\", twosComp);\n    return 0;\n}\n//Using while loop\n#include<stdio.h>\nvoid main()\n{\n    int i,a,sum=0;\n    i=1;\n    while(i<=3)\n    {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n        i++;\n    }\n    printf(\"%d\",sum);\n}\n//Using do while loop\n#include<stdio.h>\nvoid main()\n{\n    int i=1,a,sum=0;\n    do\n    {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n        i++;\n    }\n    while(i<=3);\n    printf(\"%d\",sum);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`input 3 4 5\noutput 12\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`17. Write a C++ program to find two’s complement of a binary number.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to find two’s complement of a binary number.\n#include<iostream>\nusing namespace std;\nint main()\n{\n    cout<<\"hello world\";\n    return 0;\n}\n//Using for loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i,a,sum=0;\n    for(i=1;i<=3;i++)\n    {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n    }\n    cout << sum;\n}\n//Using while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i,a,sum=0;\n    i=1;\n    while(i<=3)\n    {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n        i++;\n    }\n    cout << sum;\n}\n//Using do while loop\n#include<iostream>\nusing namespace std;\nint main()\n{\n    int i=1,a,sum=0;\n    do\n    {\n        scanf(\"%d\",&a);\n        sum=sum+a;\n        i++;\n    }\n    while(i<=3);\n    cout << sum;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`input 3 4 5\noutput 12\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`5. Write a Java program to find two’s complement of a binary number.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to find two’s complement of a binary number.\n//Using for loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i,a,sum=0;\n        i=1;\n        while(i<=3)\n        {\n            a = z.nextInt();\n            sum=sum+a;\n            i++;\n        }\n        System.out.println(sum);\n    }\n}\n//Using while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i,a,sum=0;\n        for(i=1;i<=3;i++)\n        {\n            a = z.nextInt();\n            sum=sum+a;\n            i++;\n        }\n        System.out.println(sum);\n    }\n}\n//Using do while loop\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int i=1,a,sum=0;\n        do\n        {\n            a = z.nextInt();\n            sum=sum+a;\n            i++;\n        }while(i<=3);\n        System.out.println(sum);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`input 3 4 5\noutput 12\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}