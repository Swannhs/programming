{"expireTime":9007200883718621000,"key":"gatsby-plugin-mdx-entire-payload-8b8695c8105c92e1b1480cca6e307916--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"32. Write a C program to remove all occurrence of a word in given string.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":78,"offset":100},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":78,"offset":100},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to remove all occurrence of a word in given string.\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[100];\n    char word[100];\n    int i, j, found, ind[10],stringlen, wordlen,p=0;\n    printf(\"Enter any string: \");\n    gets(str);\n    printf(\"Enter word to remove: \");\n    gets(word);\n    stringlen = strlen(str);\n    wordlen   = strlen(word);\n    ind[p] = -1;\n    for(i=0; i<=stringlen - wordlen; i++)\n    {\n        found = 1;\n        for(j=0; j<wordlen; j++)\n        {\n            if(str[i+j] != word[j])\n            {\n                found = 0;\n                break;\n            }\n        }\n        if(found == 1)\n        {\n            ind[p++] = i;\n        }}\n    if(ind[0] == -1)\n    {\n        printf(\"'%s' not found.\",word);\n    }\n    else\n    {\n        for(j=0;j<p;j++){\n                ind[j]= ind[j]-j*(wordlen);\n        for(i=ind[j]; i <= stringlen - wordlen; i++)\n        {\n            str[i] = str[i + wordlen];\n        }\nstringlen= stringlen - wordlen;\n\n        }\n\n        printf(\"String after removing last '%s': \\n%s\", word, str);\n    }\n\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":102},"end":{"line":56,"column":4,"offset":1266},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":57,"column":5,"offset":1272},"end":{"line":57,"column":11,"offset":1278},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1268},"end":{"line":57,"column":11,"offset":1278},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter any string: hello from funycode\nEnter word to remove: from\nString after removing last 'from':\nhello  funycode","position":{"start":{"line":58,"column":1,"offset":1280},"end":{"line":63,"column":4,"offset":1408},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":64,"column":4,"offset":1413},"end":{"line":64,"column":22,"offset":1431},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1410},"end":{"line":64,"column":22,"offset":1431},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"32. Write a C++ program to remove all occurrence of a word in given string.","position":{"start":{"line":65,"column":5,"offset":1437},"end":{"line":65,"column":80,"offset":1512},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1433},"end":{"line":65,"column":80,"offset":1512},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to remove all occurrence of a word in given string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char str[100];\n    char word[100];\n    int i, j, found, ind[10],stringlen, wordlen,p=0;\n    cout << \"Enter any string: \";\n    cin >> str;\n    cout << \"Enter word to remove: \";\n    cin >> word;\n    stringlen = strlen(str);\n    wordlen   = strlen(word);\n    ind[p] = -1;\n    for(i=0; i<=stringlen - wordlen; i++)\n    {\n        found = 1;\n        for(j=0; j<wordlen; j++)\n        {\n            if(str[i+j] != word[j])\n            {\n                found = 0;\n                break;\n            }\n        }\n        if(found == 1)\n        {\n            ind[p++] = i;\n        }}\n    if(ind[0] == -1)\n    {\n        cout << word << \" not found.\";\n    }\n    else\n    {\n        for(j=0;j<p;j++){\n            ind[j]= ind[j]-j*(wordlen);\n        for(i=ind[j]; i <= stringlen - wordlen; i++)\n        {\n            str[i] = str[i + wordlen];\n        }\n    stringlen= stringlen - wordlen;\n\n        }\n\n        cout << \"String after removing last \" << word << \" : \\n\" << str;\n    }\n\n    return 0;\n}","position":{"start":{"line":66,"column":1,"offset":1514},"end":{"line":120,"column":4,"offset":2711},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":121,"column":5,"offset":2717},"end":{"line":121,"column":11,"offset":2723},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":2713},"end":{"line":121,"column":11,"offset":2723},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter any string: hello from funycode\nEnter word to remove: from\nString after removing last 'from':\nhello  funycode","position":{"start":{"line":122,"column":1,"offset":2725},"end":{"line":127,"column":4,"offset":2853},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":129,"column":4,"offset":2860},"end":{"line":129,"column":23,"offset":2879},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":2857},"end":{"line":129,"column":23,"offset":2879},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"32. Write a Java program to remove all occurrence of a word in given string.","position":{"start":{"line":130,"column":5,"offset":2885},"end":{"line":130,"column":81,"offset":2961},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":2881},"end":{"line":130,"column":81,"offset":2961},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to remove all occurrence of a word in given string.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        System.out.println(\"Enter  the string : \");\n        String str = z.nextLine();\n        System.out.println(\"Enter word to remove: \");\n        String word = z.nextLine();\n        String str_new = str.replaceAll(word, \"\");\n        System.out.println(str_new);\n    }\n}","position":{"start":{"line":131,"column":1,"offset":2963},"end":{"line":145,"column":4,"offset":3471},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":146,"column":5,"offset":3477},"end":{"line":146,"column":11,"offset":3483},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":3473},"end":{"line":146,"column":11,"offset":3483},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter any string: hello from funycode\nEnter word to remove: from\nString after removing last 'from':\nhello  funycode","position":{"start":{"line":147,"column":1,"offset":3485},"end":{"line":152,"column":4,"offset":3613},"indent":[1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to remove all occurrence of a word in given string.\",\"category\":\"String Index\",\"tags\":[\"string\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":155,"column":1,"offset":3617},"end":{"line":155,"column":221,"offset":3837},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":155,"column":221,"offset":3837}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to remove all occurrence of a word in given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"32. Write a C program to remove all occurrence of a word in given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to remove all occurrence of a word in given string.\\n#include <stdio.h>\\n#include <string.h>\\nint main()\\n{\\n    char str[100];\\n    char word[100];\\n    int i, j, found, ind[10],stringlen, wordlen,p=0;\\n    printf(\\\"Enter any string: \\\");\\n    gets(str);\\n    printf(\\\"Enter word to remove: \\\");\\n    gets(word);\\n    stringlen = strlen(str);\\n    wordlen   = strlen(word);\\n    ind[p] = -1;\\n    for(i=0; i<=stringlen - wordlen; i++)\\n    {\\n        found = 1;\\n        for(j=0; j<wordlen; j++)\\n        {\\n            if(str[i+j] != word[j])\\n            {\\n                found = 0;\\n                break;\\n            }\\n        }\\n        if(found == 1)\\n        {\\n            ind[p++] = i;\\n        }}\\n    if(ind[0] == -1)\\n    {\\n        printf(\\\"'%s' not found.\\\",word);\\n    }\\n    else\\n    {\\n        for(j=0;j<p;j++){\\n                ind[j]= ind[j]-j*(wordlen);\\n        for(i=ind[j]; i <= stringlen - wordlen; i++)\\n        {\\n            str[i] = str[i + wordlen];\\n        }\\nstringlen= stringlen - wordlen;\\n\\n        }\\n\\n        printf(\\\"String after removing last '%s': \\\\n%s\\\", word, str);\\n    }\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter any string: hello from funycode\\nEnter word to remove: from\\nString after removing last 'from':\\nhello  funycode\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"32. Write a C++ program to remove all occurrence of a word in given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to remove all occurrence of a word in given string.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint main()\\n{\\n    char str[100];\\n    char word[100];\\n    int i, j, found, ind[10],stringlen, wordlen,p=0;\\n    cout << \\\"Enter any string: \\\";\\n    cin >> str;\\n    cout << \\\"Enter word to remove: \\\";\\n    cin >> word;\\n    stringlen = strlen(str);\\n    wordlen   = strlen(word);\\n    ind[p] = -1;\\n    for(i=0; i<=stringlen - wordlen; i++)\\n    {\\n        found = 1;\\n        for(j=0; j<wordlen; j++)\\n        {\\n            if(str[i+j] != word[j])\\n            {\\n                found = 0;\\n                break;\\n            }\\n        }\\n        if(found == 1)\\n        {\\n            ind[p++] = i;\\n        }}\\n    if(ind[0] == -1)\\n    {\\n        cout << word << \\\" not found.\\\";\\n    }\\n    else\\n    {\\n        for(j=0;j<p;j++){\\n            ind[j]= ind[j]-j*(wordlen);\\n        for(i=ind[j]; i <= stringlen - wordlen; i++)\\n        {\\n            str[i] = str[i + wordlen];\\n        }\\n    stringlen= stringlen - wordlen;\\n\\n        }\\n\\n        cout << \\\"String after removing last \\\" << word << \\\" : \\\\n\\\" << str;\\n    }\\n\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter any string: hello from funycode\\nEnter word to remove: from\\nString after removing last 'from':\\nhello  funycode\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"32. Write a Java program to remove all occurrence of a word in given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to remove all occurrence of a word in given string.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z=new Scanner(System.in);\\n        System.out.println(\\\"Enter  the string : \\\");\\n        String str = z.nextLine();\\n        System.out.println(\\\"Enter word to remove: \\\");\\n        String word = z.nextLine();\\n        String str_new = str.replaceAll(word, \\\"\\\");\\n        System.out.println(str_new);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter any string: hello from funycode\\nEnter word to remove: from\\nString after removing last 'from':\\nhello  funycode\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to remove all occurrence of a word in given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`32. Write a C program to remove all occurrence of a word in given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to remove all occurrence of a word in given string.\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char str[100];\n    char word[100];\n    int i, j, found, ind[10],stringlen, wordlen,p=0;\n    printf(\"Enter any string: \");\n    gets(str);\n    printf(\"Enter word to remove: \");\n    gets(word);\n    stringlen = strlen(str);\n    wordlen   = strlen(word);\n    ind[p] = -1;\n    for(i=0; i<=stringlen - wordlen; i++)\n    {\n        found = 1;\n        for(j=0; j<wordlen; j++)\n        {\n            if(str[i+j] != word[j])\n            {\n                found = 0;\n                break;\n            }\n        }\n        if(found == 1)\n        {\n            ind[p++] = i;\n        }}\n    if(ind[0] == -1)\n    {\n        printf(\"'%s' not found.\",word);\n    }\n    else\n    {\n        for(j=0;j<p;j++){\n                ind[j]= ind[j]-j*(wordlen);\n        for(i=ind[j]; i <= stringlen - wordlen; i++)\n        {\n            str[i] = str[i + wordlen];\n        }\nstringlen= stringlen - wordlen;\n\n        }\n\n        printf(\"String after removing last '%s': \\\\n%s\", word, str);\n    }\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter any string: hello from funycode\nEnter word to remove: from\nString after removing last 'from':\nhello  funycode\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`32. Write a C++ program to remove all occurrence of a word in given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to remove all occurrence of a word in given string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    char str[100];\n    char word[100];\n    int i, j, found, ind[10],stringlen, wordlen,p=0;\n    cout << \"Enter any string: \";\n    cin >> str;\n    cout << \"Enter word to remove: \";\n    cin >> word;\n    stringlen = strlen(str);\n    wordlen   = strlen(word);\n    ind[p] = -1;\n    for(i=0; i<=stringlen - wordlen; i++)\n    {\n        found = 1;\n        for(j=0; j<wordlen; j++)\n        {\n            if(str[i+j] != word[j])\n            {\n                found = 0;\n                break;\n            }\n        }\n        if(found == 1)\n        {\n            ind[p++] = i;\n        }}\n    if(ind[0] == -1)\n    {\n        cout << word << \" not found.\";\n    }\n    else\n    {\n        for(j=0;j<p;j++){\n            ind[j]= ind[j]-j*(wordlen);\n        for(i=ind[j]; i <= stringlen - wordlen; i++)\n        {\n            str[i] = str[i + wordlen];\n        }\n    stringlen= stringlen - wordlen;\n\n        }\n\n        cout << \"String after removing last \" << word << \" : \\\\n\" << str;\n    }\n\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter any string: hello from funycode\nEnter word to remove: from\nString after removing last 'from':\nhello  funycode\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`32. Write a Java program to remove all occurrence of a word in given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to remove all occurrence of a word in given string.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z=new Scanner(System.in);\n        System.out.println(\"Enter  the string : \");\n        String str = z.nextLine();\n        System.out.println(\"Enter word to remove: \");\n        String word = z.nextLine();\n        String str_new = str.replaceAll(word, \"\");\n        System.out.println(str_new);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter any string: hello from funycode\nEnter word to remove: from\nString after removing last 'from':\nhello  funycode\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}