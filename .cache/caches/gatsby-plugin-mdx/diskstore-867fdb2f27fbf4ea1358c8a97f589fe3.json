{"expireTime":9007200883710394000,"key":"gatsby-plugin-mdx-entire-payload-fbc4bff6c81df0610a74384d7bcafa33--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Write a C program to show the basic declaration of pointer.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":67,"offset":89},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":67,"offset":89},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to show the basic declaration of pointer.\n#include <stdio.h>\nvoid main()\n{\n    int a=10; //Variable declaration\n    int *p; //Pointer declaration\n    p=&a;\n    printf(\"Address of variable 'a' is: %p\", p);\n}","position":{"start":{"line":4,"column":1,"offset":91},"end":{"line":14,"column":4,"offset":336},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":15,"column":5,"offset":342},"end":{"line":15,"column":11,"offset":348},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":338},"end":{"line":15,"column":11,"offset":348},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Address of variable 'a' is: 0x7ffcdc9c3f64","position":{"start":{"line":16,"column":1,"offset":350},"end":{"line":18,"column":4,"offset":402},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":19,"column":4,"offset":407},"end":{"line":19,"column":22,"offset":425},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":404},"end":{"line":19,"column":22,"offset":425},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Write a C++ program to show the basic declaration of pointer.","position":{"start":{"line":20,"column":5,"offset":431},"end":{"line":20,"column":69,"offset":495},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":427},"end":{"line":20,"column":69,"offset":495},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to show the basic declaration of pointer.\n#include <iostream>\nusing namespace std;\nint main()\n{\n    int a=10; //Variable declaration\n    int *p;   //Pointer declaration\n    p=&a;\n    cout<<\"Address of variable 'a' is: <<\" <<p;\n}\n","position":{"start":{"line":21,"column":1,"offset":497},"end":{"line":33,"column":4,"offset":769},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":34,"column":5,"offset":775},"end":{"line":34,"column":11,"offset":781},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":771},"end":{"line":34,"column":11,"offset":781},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Address of variable 'a' is: 0x7ffcdc9c3f64","position":{"start":{"line":35,"column":1,"offset":783},"end":{"line":37,"column":4,"offset":835},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to show the basic declaration of pointer.\",\"category\":\"Pointer Program Index\",\"tags\":[\"#c\",\"#c++\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":40,"column":1,"offset":839},"end":{"line":40,"column":235,"offset":1073},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":40,"column":235,"offset":1073}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to show the basic declaration of pointer.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"1. Write a C program to show the basic declaration of pointer.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to show the basic declaration of pointer.\\n#include <stdio.h>\\nvoid main()\\n{\\n    int a=10; //Variable declaration\\n    int *p; //Pointer declaration\\n    p=&a;\\n    printf(\\\"Address of variable 'a' is: %p\\\", p);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Address of variable 'a' is: 0x7ffcdc9c3f64\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"1. Write a C++ program to show the basic declaration of pointer.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to show the basic declaration of pointer.\\n#include <iostream>\\nusing namespace std;\\nint main()\\n{\\n    int a=10; //Variable declaration\\n    int *p;   //Pointer declaration\\n    p=&a;\\n    cout<<\\\"Address of variable 'a' is: <<\\\" <<p;\\n}\\n\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Address of variable 'a' is: 0x7ffcdc9c3f64\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to show the basic declaration of pointer.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`1. Write a C program to show the basic declaration of pointer.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to show the basic declaration of pointer.\n#include <stdio.h>\nvoid main()\n{\n    int a=10; //Variable declaration\n    int *p; //Pointer declaration\n    p=&a;\n    printf(\"Address of variable 'a' is: %p\", p);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Address of variable 'a' is: 0x7ffcdc9c3f64\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`1. Write a C++ program to show the basic declaration of pointer.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to show the basic declaration of pointer.\n#include <iostream>\nusing namespace std;\nint main()\n{\n    int a=10; //Variable declaration\n    int *p;   //Pointer declaration\n    p=&a;\n    cout<<\"Address of variable 'a' is: <<\" <<p;\n}\n\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Address of variable 'a' is: 0x7ffcdc9c3f64\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}