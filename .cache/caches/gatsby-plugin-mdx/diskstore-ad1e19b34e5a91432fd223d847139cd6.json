{"expireTime":9007200883718621000,"key":"gatsby-plugin-mdx-entire-payload-f3277e589b97e6d92e89d6243f1bfa98--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"21. Write a C program to check whether a given substring is present in the given string.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":93,"offset":115},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":93,"offset":115},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to check whether a given substring is present in the given string.\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n     char string[1000], sub[1000];\n     int position, length, c = 0;\n\n     printf(\"Input a string\\n\");\n     gets(string);\n\n     printf(\"Enter the position and length of substring\\n\");\n     scanf(\"%d%d\", &position, &length);\n\n     while (c < length) {\n        sub[c] = string[position+c-1];\n        c++;\n     }\n     sub[c] = '\\0';\n\n     printf(\"Required substring is \\\"%s\\\"\\n\", sub);\n}","position":{"start":{"line":4,"column":1,"offset":117},"end":{"line":27,"column":4,"offset":670},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":28,"column":5,"offset":676},"end":{"line":28,"column":11,"offset":682},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":672},"end":{"line":28,"column":11,"offset":682},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a string: hello\nEnter the position and length of substring 1 4\nExtracted string is: : ello","position":{"start":{"line":29,"column":1,"offset":684},"end":{"line":33,"column":4,"offset":792},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":34,"column":4,"offset":797},"end":{"line":34,"column":22,"offset":815},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":794},"end":{"line":34,"column":22,"offset":815},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"21. Write a C++ program to check whether a given substring is present in the given string.","position":{"start":{"line":35,"column":5,"offset":821},"end":{"line":35,"column":95,"offset":911},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":817},"end":{"line":35,"column":95,"offset":911},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to check whether a given substring is present in the given string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint  main()\n{\n    cout << \"Input a string \";\n    int position, length;\n    string str;\n    cout << \"Enter positon\";\n    cin >> positon;\n    cout << \"Required sustring \" << str.substr(position);\n}","position":{"start":{"line":36,"column":1,"offset":913},"end":{"line":51,"column":4,"offset":1283},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":52,"column":5,"offset":1289},"end":{"line":52,"column":11,"offset":1295},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1285},"end":{"line":52,"column":11,"offset":1295},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a string: hello\nEnter the position and length of substring 1 4\nExtracted string is: : ello","position":{"start":{"line":53,"column":1,"offset":1297},"end":{"line":57,"column":4,"offset":1405},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":59,"column":4,"offset":1412},"end":{"line":59,"column":23,"offset":1431},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1409},"end":{"line":59,"column":23,"offset":1431},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"21. Write a Java program to check whether a given substring is present in the given string.","position":{"start":{"line":60,"column":5,"offset":1437},"end":{"line":60,"column":96,"offset":1528},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1433},"end":{"line":60,"column":96,"offset":1528},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to check whether a given substring is present in the given string.\nimport java.util.Scanner;\n\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        System.out.println(\"Enter a string: \");\n        String str, result = \"\";\n        int index, length;\n        str = z.nextLine();\n        System.out.println(\"Enter the position and length of substring\");\n        index = z.nextInt();\n        length = z.nextInt();\n        System.out.println(\"Extracted string is: \" + str.substring(index));\n    }\n}","position":{"start":{"line":61,"column":1,"offset":1530},"end":{"line":78,"column":4,"offset":2139},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":79,"column":5,"offset":2145},"end":{"line":79,"column":11,"offset":2151},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2141},"end":{"line":79,"column":11,"offset":2151},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter a string: hello\nEnter the position and length of substring 1 4\nExtracted string is: : ello","position":{"start":{"line":80,"column":1,"offset":2153},"end":{"line":84,"column":4,"offset":2261},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to check whether a given substring is present in the given string.\",\"category\":\"String Index\",\"tags\":[\"string\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":87,"column":1,"offset":2265},"end":{"line":87,"column":236,"offset":2500},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":87,"column":236,"offset":2500}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether a given substring is present in the given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"21. Write a C program to check whether a given substring is present in the given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to check whether a given substring is present in the given string.\\n#include<stdio.h>\\n#include<string.h>\\nint main()\\n{\\n     char string[1000], sub[1000];\\n     int position, length, c = 0;\\n\\n     printf(\\\"Input a string\\\\n\\\");\\n     gets(string);\\n\\n     printf(\\\"Enter the position and length of substring\\\\n\\\");\\n     scanf(\\\"%d%d\\\", &position, &length);\\n\\n     while (c < length) {\\n        sub[c] = string[position+c-1];\\n        c++;\\n     }\\n     sub[c] = '\\\\0';\\n\\n     printf(\\\"Required substring is \\\\\\\"%s\\\\\\\"\\\\n\\\", sub);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a string: hello\\nEnter the position and length of substring 1 4\\nExtracted string is: : ello\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"21. Write a C++ program to check whether a given substring is present in the given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to check whether a given substring is present in the given string.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint  main()\\n{\\n    cout << \\\"Input a string \\\";\\n    int position, length;\\n    string str;\\n    cout << \\\"Enter positon\\\";\\n    cin >> positon;\\n    cout << \\\"Required sustring \\\" << str.substr(position);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a string: hello\\nEnter the position and length of substring 1 4\\nExtracted string is: : ello\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"21. Write a Java program to check whether a given substring is present in the given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to check whether a given substring is present in the given string.\\nimport java.util.Scanner;\\n\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        System.out.println(\\\"Enter a string: \\\");\\n        String str, result = \\\"\\\";\\n        int index, length;\\n        str = z.nextLine();\\n        System.out.println(\\\"Enter the position and length of substring\\\");\\n        index = z.nextInt();\\n        length = z.nextInt();\\n        System.out.println(\\\"Extracted string is: \\\" + str.substring(index));\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a string: hello\\nEnter the position and length of substring 1 4\\nExtracted string is: : ello\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether a given substring is present in the given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`21. Write a C program to check whether a given substring is present in the given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to check whether a given substring is present in the given string.\n#include<stdio.h>\n#include<string.h>\nint main()\n{\n     char string[1000], sub[1000];\n     int position, length, c = 0;\n\n     printf(\"Input a string\\\\n\");\n     gets(string);\n\n     printf(\"Enter the position and length of substring\\\\n\");\n     scanf(\"%d%d\", &position, &length);\n\n     while (c < length) {\n        sub[c] = string[position+c-1];\n        c++;\n     }\n     sub[c] = '\\\\0';\n\n     printf(\"Required substring is \\\\\"%s\\\\\"\\\\n\", sub);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a string: hello\nEnter the position and length of substring 1 4\nExtracted string is: : ello\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`21. Write a C++ program to check whether a given substring is present in the given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to check whether a given substring is present in the given string.\n\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint  main()\n{\n    cout << \"Input a string \";\n    int position, length;\n    string str;\n    cout << \"Enter positon\";\n    cin >> positon;\n    cout << \"Required sustring \" << str.substr(position);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a string: hello\nEnter the position and length of substring 1 4\nExtracted string is: : ello\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`21. Write a Java program to check whether a given substring is present in the given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to check whether a given substring is present in the given string.\nimport java.util.Scanner;\n\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        System.out.println(\"Enter a string: \");\n        String str, result = \"\";\n        int index, length;\n        str = z.nextLine();\n        System.out.println(\"Enter the position and length of substring\");\n        index = z.nextInt();\n        length = z.nextInt();\n        System.out.println(\"Extracted string is: \" + str.substring(index));\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter a string: hello\nEnter the position and length of substring 1 4\nExtracted string is: : ello\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}