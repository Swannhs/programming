{"expireTime":9007200883710394000,"key":"gatsby-plugin-mdx-entire-payload-37a8c1eac71b8c5ef63bdd92c073f101--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"16. Write a C program compute the sum of all elements in an array using pointers.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":86,"offset":108},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":86,"offset":108},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program compute the sum of all elements in an array using pointers.\n#include<stdio.h>\nvoid main() {\n   int a[10000];\n   int i,n, sum = 0;\n   int *p;\n   printf(\"Enter size of array: \");\n   scanf(\"%d\", &n);\n\n   printf(\"\\nEnter %d elements =\\n \",n);\n\n   for (i = 0; i < n; i++)\n      scanf(\"%d\", &a[i]);\n\n   p = a;\n\n   for (i = 0; i < 10; i++) {\n      sum = sum + *p;\n      p++;\n   }\n\n   printf(\"The sum of array elements = %d\", sum);\n}","position":{"start":{"line":4,"column":1,"offset":110},"end":{"line":28,"column":4,"offset":588},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":29,"column":5,"offset":594},"end":{"line":29,"column":11,"offset":600},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":590},"end":{"line":29,"column":11,"offset":600},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter size of array: 3\n\nEnter 3 elements =\n 1 2 3\nThe sum of array elements = 6","position":{"start":{"line":30,"column":1,"offset":602},"end":{"line":36,"column":4,"offset":695},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":37,"column":4,"offset":700},"end":{"line":37,"column":22,"offset":718},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":697},"end":{"line":37,"column":22,"offset":718},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"16. Write a C++ program compute the sum of all elements in an array using pointers.","position":{"start":{"line":38,"column":5,"offset":724},"end":{"line":38,"column":88,"offset":807},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":720},"end":{"line":38,"column":88,"offset":807},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program compute the sum of all elements in an array using pointers.\n#include <iostream>\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    int a[10000];\n    int i,n, sum = 0;\n    int *p;\n    cout<<(\"Enter size of array: \");\n    cin>>n;\n\n    cout<<\"\\nEnter \"<<n <<\" elements =\\n \";\n\n    for (i = 0; i < n; i++)\n        cin>>a[i];\n\n    p = a;\n\n    for (i = 0; i < 10; i++)\n    {\n        sum = sum + *p;\n        p++;\n    }\n\n    cout<<\"The sum of array elements = \"<<sum;\n}","position":{"start":{"line":39,"column":1,"offset":809},"end":{"line":68,"column":4,"offset":1357},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":69,"column":5,"offset":1363},"end":{"line":69,"column":11,"offset":1369},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1359},"end":{"line":69,"column":11,"offset":1369},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Enter size of array: 3\n\nEnter 3 elements =\n 1 2 3\nThe sum of array elements = 6","position":{"start":{"line":70,"column":1,"offset":1371},"end":{"line":76,"column":4,"offset":1464},"indent":[1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program compute the sum of all elements in an array using pointers.\",\"category\":\"Pointer Program Index\",\"tags\":[\"#c\",\"#c++\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":79,"column":1,"offset":1468},"end":{"line":79,"column":253,"offset":1720},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":79,"column":253,"offset":1720}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program compute the sum of all elements in an array using pointers.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"16. Write a C program compute the sum of all elements in an array using pointers.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program compute the sum of all elements in an array using pointers.\\n#include<stdio.h>\\nvoid main() {\\n   int a[10000];\\n   int i,n, sum = 0;\\n   int *p;\\n   printf(\\\"Enter size of array: \\\");\\n   scanf(\\\"%d\\\", &n);\\n\\n   printf(\\\"\\\\nEnter %d elements =\\\\n \\\",n);\\n\\n   for (i = 0; i < n; i++)\\n      scanf(\\\"%d\\\", &a[i]);\\n\\n   p = a;\\n\\n   for (i = 0; i < 10; i++) {\\n      sum = sum + *p;\\n      p++;\\n   }\\n\\n   printf(\\\"The sum of array elements = %d\\\", sum);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter size of array: 3\\n\\nEnter 3 elements =\\n 1 2 3\\nThe sum of array elements = 6\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"16. Write a C++ program compute the sum of all elements in an array using pointers.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program compute the sum of all elements in an array using pointers.\\n#include <iostream>\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint main()\\n{\\n    int a[10000];\\n    int i,n, sum = 0;\\n    int *p;\\n    cout<<(\\\"Enter size of array: \\\");\\n    cin>>n;\\n\\n    cout<<\\\"\\\\nEnter \\\"<<n <<\\\" elements =\\\\n \\\";\\n\\n    for (i = 0; i < n; i++)\\n        cin>>a[i];\\n\\n    p = a;\\n\\n    for (i = 0; i < 10; i++)\\n    {\\n        sum = sum + *p;\\n        p++;\\n    }\\n\\n    cout<<\\\"The sum of array elements = \\\"<<sum;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter size of array: 3\\n\\nEnter 3 elements =\\n 1 2 3\\nThe sum of array elements = 6\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program compute the sum of all elements in an array using pointers.\",\n  \"category\": \"Pointer Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`16. Write a C program compute the sum of all elements in an array using pointers.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program compute the sum of all elements in an array using pointers.\n#include<stdio.h>\nvoid main() {\n   int a[10000];\n   int i,n, sum = 0;\n   int *p;\n   printf(\"Enter size of array: \");\n   scanf(\"%d\", &n);\n\n   printf(\"\\\\nEnter %d elements =\\\\n \",n);\n\n   for (i = 0; i < n; i++)\n      scanf(\"%d\", &a[i]);\n\n   p = a;\n\n   for (i = 0; i < 10; i++) {\n      sum = sum + *p;\n      p++;\n   }\n\n   printf(\"The sum of array elements = %d\", sum);\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter size of array: 3\n\nEnter 3 elements =\n 1 2 3\nThe sum of array elements = 6\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`16. Write a C++ program compute the sum of all elements in an array using pointers.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program compute the sum of all elements in an array using pointers.\n#include <iostream>\n#include <iostream>\n#include <string.h>\nusing namespace std;\nint main()\n{\n    int a[10000];\n    int i,n, sum = 0;\n    int *p;\n    cout<<(\"Enter size of array: \");\n    cin>>n;\n\n    cout<<\"\\\\nEnter \"<<n <<\" elements =\\\\n \";\n\n    for (i = 0; i < n; i++)\n        cin>>a[i];\n\n    p = a;\n\n    for (i = 0; i < 10; i++)\n    {\n        sum = sum + *p;\n        p++;\n    }\n\n    cout<<\"The sum of array elements = \"<<sum;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Enter size of array: 3\n\nEnter 3 elements =\n 1 2 3\nThe sum of array elements = 6\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}