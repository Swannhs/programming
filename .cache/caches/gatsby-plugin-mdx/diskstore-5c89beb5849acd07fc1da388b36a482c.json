{"expireTime":9007200883706346000,"key":"gatsby-plugin-mdx-entire-payload-e737c1871621b352c6e236ffaf44307b--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"25. Write a C program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":364,"offset":386},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":364,"offset":386},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\n#include<stdio.h>\nstruct Emp{\n    char name[100];\n    struct date{\n    int day;\n    int month;\n    int year;\n    }joinDate;\n};\nvoid details(struct Emp emp){\nprintf(\"emp name : %s\\n\",emp.name);\n}\nint main(){\n    struct Emp emp[3]={\"Tushar\",12,5,2021,\"Imran\",11,1,2015,\"Arafat\",1,1,2010};\n    /*\n    //take input from user\n    printf(\"Enter emp info\\n\");\n    for(int i=0;i<3;i++)\n    {\n        printf(\"Enter Emp Name : \");\n        fgets(emp[i].name,sizeof(emp[i].name),stdin);\n        printf(\"enter joining date (input formate dd-mm-yy ex 12-4-21 )\\n\");\n        scanf(\"%d-%d-%d\",&emp[i].joinDate.day,&emp[i].joinDate.month,&emp[i].joinDate.year);\n        getchar();\n    }\n    */\n    int day,month,year;\n    printf(\"enter current date: input formate dd-mm-yy ex 12-4-21 \\n\");\n    scanf(\"%d-%d-%d\",&day,&month,&year);\n    for(int i=0;i<3;i++)\n    {\n        if(year-emp[i].joinDate.year>3)\n        {\n            details(emp[i]);\n            continue;\n        }\n         if(year-emp[i].joinDate.year==3){\n            if(emp[i].joinDate.month>month)\n            {\n                details(emp[i]);\n                continue;\n            }\n            if(emp[i].joinDate.month==month)\n            {\n                if(emp[i].joinDate.day>day)\n                {\n                    details(emp[i]);\n                    continue;\n                }\n            }\n        }\n    }\n}","position":{"start":{"line":4,"column":1,"offset":388},"end":{"line":59,"column":4,"offset":2177},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":60,"column":5,"offset":2183},"end":{"line":60,"column":11,"offset":2189},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2179},"end":{"line":60,"column":11,"offset":2189},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter current date: input formate dd-mm-yy ex 12-4-21\n12 5 2021\nemp name : Imran\nemp name : Arafat","position":{"start":{"line":61,"column":1,"offset":2191},"end":{"line":66,"column":4,"offset":2302},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":68,"column":4,"offset":2309},"end":{"line":68,"column":22,"offset":2327},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2306},"end":{"line":68,"column":22,"offset":2327},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"25. Write a C++ program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.","position":{"start":{"line":69,"column":5,"offset":2333},"end":{"line":69,"column":366,"offset":2694},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2329},"end":{"line":69,"column":366,"offset":2694},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nstruct Emp{\n    char name[100];\n    struct date{\n    int day;\n    int month;\n    int year;\n    }joinDate;\n};\nvoid details(struct Emp emp){\nprintf(\"emp name : %s\\n\",emp.name);\n}\nint main(){\n    struct Emp emp[3]={\"Tushar\",12,5,2021,\"Imran\",11,1,2015,\"Arafat\",1,1,2010};\n    /*\n    //take input from user\n    cout << \"Enter emp info\\n\";\n    for(int i=0;i<3;i++)\n    {\n        cout << \"Enter Emp Name : \";\n        fgets(emp[i].name,sizeof(emp[i].name),stdin);\n        cout << \"enter joining date (input formate dd-mm-yy ex 12-4-21 )\\n\";\n        cin >> emp[i].joinDate.day >> emp[i].joinDate.month >> emp[i].joinDate.year;\n        getchar();\n    }\n    */\n    int day,month,year;\n    cout << \"enter current date: input formate dd-mm-yy ex 12-4-21 \\n\";\n    cin >> day >> month >> year;\n    for(int i=0;i<3;i++)\n    {\n        if(year-emp[i].joinDate.year>3)\n        {\n            details(emp[i]);\n            continue;\n        }\n         if(year-emp[i].joinDate.year==3){\n            if(emp[i].joinDate.month>month)\n            {\n                details(emp[i]);\n                continue;\n            }\n            if(emp[i].joinDate.month==month)\n            {\n                if(emp[i].joinDate.day>day)\n                {\n                    details(emp[i]);\n                    continue;\n                }\n            }\n        }\n    }\n}","position":{"start":{"line":70,"column":1,"offset":2696},"end":{"line":128,"column":4,"offset":4517},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":129,"column":5,"offset":4523},"end":{"line":129,"column":11,"offset":4529},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":4519},"end":{"line":129,"column":11,"offset":4529},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"enter current date: input formate dd-mm-yy ex 12-4-21\n12 5 2021\nemp name : Imran\nemp name : Arafat","position":{"start":{"line":130,"column":1,"offset":4531},"end":{"line":135,"column":4,"offset":4642},"indent":[1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\",\"category\":\"Structure And Union Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":138,"column":1,"offset":4646},"end":{"line":138,"column":543,"offset":5188},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":138,"column":543,"offset":5188}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"25. Write a C program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\\n#include<stdio.h>\\nstruct Emp{\\n    char name[100];\\n    struct date{\\n    int day;\\n    int month;\\n    int year;\\n    }joinDate;\\n};\\nvoid details(struct Emp emp){\\nprintf(\\\"emp name : %s\\\\n\\\",emp.name);\\n}\\nint main(){\\n    struct Emp emp[3]={\\\"Tushar\\\",12,5,2021,\\\"Imran\\\",11,1,2015,\\\"Arafat\\\",1,1,2010};\\n    /*\\n    //take input from user\\n    printf(\\\"Enter emp info\\\\n\\\");\\n    for(int i=0;i<3;i++)\\n    {\\n        printf(\\\"Enter Emp Name : \\\");\\n        fgets(emp[i].name,sizeof(emp[i].name),stdin);\\n        printf(\\\"enter joining date (input formate dd-mm-yy ex 12-4-21 )\\\\n\\\");\\n        scanf(\\\"%d-%d-%d\\\",&emp[i].joinDate.day,&emp[i].joinDate.month,&emp[i].joinDate.year);\\n        getchar();\\n    }\\n    */\\n    int day,month,year;\\n    printf(\\\"enter current date: input formate dd-mm-yy ex 12-4-21 \\\\n\\\");\\n    scanf(\\\"%d-%d-%d\\\",&day,&month,&year);\\n    for(int i=0;i<3;i++)\\n    {\\n        if(year-emp[i].joinDate.year>3)\\n        {\\n            details(emp[i]);\\n            continue;\\n        }\\n         if(year-emp[i].joinDate.year==3){\\n            if(emp[i].joinDate.month>month)\\n            {\\n                details(emp[i]);\\n                continue;\\n            }\\n            if(emp[i].joinDate.month==month)\\n            {\\n                if(emp[i].joinDate.day>day)\\n                {\\n                    details(emp[i]);\\n                    continue;\\n                }\\n            }\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter current date: input formate dd-mm-yy ex 12-4-21\\n12 5 2021\\nemp name : Imran\\nemp name : Arafat\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"25. Write a C++ program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\\n\\n#include<iostream>\\n#include <string.h>\\nusing namespace std;\\nstruct Emp{\\n    char name[100];\\n    struct date{\\n    int day;\\n    int month;\\n    int year;\\n    }joinDate;\\n};\\nvoid details(struct Emp emp){\\nprintf(\\\"emp name : %s\\\\n\\\",emp.name);\\n}\\nint main(){\\n    struct Emp emp[3]={\\\"Tushar\\\",12,5,2021,\\\"Imran\\\",11,1,2015,\\\"Arafat\\\",1,1,2010};\\n    /*\\n    //take input from user\\n    cout << \\\"Enter emp info\\\\n\\\";\\n    for(int i=0;i<3;i++)\\n    {\\n        cout << \\\"Enter Emp Name : \\\";\\n        fgets(emp[i].name,sizeof(emp[i].name),stdin);\\n        cout << \\\"enter joining date (input formate dd-mm-yy ex 12-4-21 )\\\\n\\\";\\n        cin >> emp[i].joinDate.day >> emp[i].joinDate.month >> emp[i].joinDate.year;\\n        getchar();\\n    }\\n    */\\n    int day,month,year;\\n    cout << \\\"enter current date: input formate dd-mm-yy ex 12-4-21 \\\\n\\\";\\n    cin >> day >> month >> year;\\n    for(int i=0;i<3;i++)\\n    {\\n        if(year-emp[i].joinDate.year>3)\\n        {\\n            details(emp[i]);\\n            continue;\\n        }\\n         if(year-emp[i].joinDate.year==3){\\n            if(emp[i].joinDate.month>month)\\n            {\\n                details(emp[i]);\\n                continue;\\n            }\\n            if(emp[i].joinDate.month==month)\\n            {\\n                if(emp[i].joinDate.day>day)\\n                {\\n                    details(emp[i]);\\n                    continue;\\n                }\\n            }\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter current date: input formate dd-mm-yy ex 12-4-21\\n12 5 2021\\nemp name : Imran\\nemp name : Arafat\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\",\n  \"category\": \"Structure And Union Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`25. Write a C program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\n#include<stdio.h>\nstruct Emp{\n    char name[100];\n    struct date{\n    int day;\n    int month;\n    int year;\n    }joinDate;\n};\nvoid details(struct Emp emp){\nprintf(\"emp name : %s\\\\n\",emp.name);\n}\nint main(){\n    struct Emp emp[3]={\"Tushar\",12,5,2021,\"Imran\",11,1,2015,\"Arafat\",1,1,2010};\n    /*\n    //take input from user\n    printf(\"Enter emp info\\\\n\");\n    for(int i=0;i<3;i++)\n    {\n        printf(\"Enter Emp Name : \");\n        fgets(emp[i].name,sizeof(emp[i].name),stdin);\n        printf(\"enter joining date (input formate dd-mm-yy ex 12-4-21 )\\\\n\");\n        scanf(\"%d-%d-%d\",&emp[i].joinDate.day,&emp[i].joinDate.month,&emp[i].joinDate.year);\n        getchar();\n    }\n    */\n    int day,month,year;\n    printf(\"enter current date: input formate dd-mm-yy ex 12-4-21 \\\\n\");\n    scanf(\"%d-%d-%d\",&day,&month,&year);\n    for(int i=0;i<3;i++)\n    {\n        if(year-emp[i].joinDate.year>3)\n        {\n            details(emp[i]);\n            continue;\n        }\n         if(year-emp[i].joinDate.year==3){\n            if(emp[i].joinDate.month>month)\n            {\n                details(emp[i]);\n                continue;\n            }\n            if(emp[i].joinDate.month==month)\n            {\n                if(emp[i].joinDate.day>day)\n                {\n                    details(emp[i]);\n                    continue;\n                }\n            }\n        }\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter current date: input formate dd-mm-yy ex 12-4-21\n12 5 2021\nemp name : Imran\nemp name : Arafat\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`25. Write a C++ program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program There is a structure called employee that holds information like employee code, name, date of joining. Write a program to create an array of the structure and enter some data into it. Then ask the user to enter current date. Display the names of those employees whose tenure is 3 or more than 3 years according to the given current date.\n\n#include<iostream>\n#include <string.h>\nusing namespace std;\nstruct Emp{\n    char name[100];\n    struct date{\n    int day;\n    int month;\n    int year;\n    }joinDate;\n};\nvoid details(struct Emp emp){\nprintf(\"emp name : %s\\\\n\",emp.name);\n}\nint main(){\n    struct Emp emp[3]={\"Tushar\",12,5,2021,\"Imran\",11,1,2015,\"Arafat\",1,1,2010};\n    /*\n    //take input from user\n    cout << \"Enter emp info\\\\n\";\n    for(int i=0;i<3;i++)\n    {\n        cout << \"Enter Emp Name : \";\n        fgets(emp[i].name,sizeof(emp[i].name),stdin);\n        cout << \"enter joining date (input formate dd-mm-yy ex 12-4-21 )\\\\n\";\n        cin >> emp[i].joinDate.day >> emp[i].joinDate.month >> emp[i].joinDate.year;\n        getchar();\n    }\n    */\n    int day,month,year;\n    cout << \"enter current date: input formate dd-mm-yy ex 12-4-21 \\\\n\";\n    cin >> day >> month >> year;\n    for(int i=0;i<3;i++)\n    {\n        if(year-emp[i].joinDate.year>3)\n        {\n            details(emp[i]);\n            continue;\n        }\n         if(year-emp[i].joinDate.year==3){\n            if(emp[i].joinDate.month>month)\n            {\n                details(emp[i]);\n                continue;\n            }\n            if(emp[i].joinDate.month==month)\n            {\n                if(emp[i].joinDate.day>day)\n                {\n                    details(emp[i]);\n                    continue;\n                }\n            }\n        }\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`enter current date: input formate dd-mm-yy ex 12-4-21\n12 5 2021\nemp name : Imran\nemp name : Arafat\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}