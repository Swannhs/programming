{"expireTime":9007200883706345000,"key":"gatsby-plugin-mdx-entire-payload-01550c71ea15c670533364b981108e78--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a C program to count the digits of a given number using recursion.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":80,"offset":102},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":80,"offset":102},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to count the digits of a given number using recursion.\n#include<stdio.h>\nint main(){\n    int one,two;\n    printf(\"GCD of Two numbers\\nEnter first number : \");\n    scanf(\"%d\", &one);\n    printf(\"Enter second number : \");\n    scanf(\"%d\", &two);\n    int ans=0;\n    if(one>two)\n    {\n       ans= gcd(one,two);\n    }\n    else{\n       ans= gcd(two,one);\n    }\n    printf(\"%d\",ans);\n}\nint gcd(int one,int two){\n    if(one%two==0)\n    {\n        return two;\n    }\n    else{\n        gcd(two,one%two);\n    }\n}","position":{"start":{"line":4,"column":1,"offset":104},"end":{"line":32,"column":4,"offset":659},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":33,"column":5,"offset":665},"end":{"line":33,"column":11,"offset":671},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":661},"end":{"line":33,"column":11,"offset":671},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"GCD of Two numbers\nEnter first number : 3\nEnter second number : 4\n1","position":{"start":{"line":34,"column":1,"offset":673},"end":{"line":39,"column":4,"offset":753},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":40,"column":4,"offset":758},"end":{"line":40,"column":22,"offset":776},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":755},"end":{"line":40,"column":22,"offset":776},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a C++ program to count the digits of a given number using recursion.","position":{"start":{"line":41,"column":5,"offset":782},"end":{"line":41,"column":82,"offset":859},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":778},"end":{"line":41,"column":82,"offset":859},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to count the digits of a given number using recursion.\n\n#include<iostream>\nusing namespace std;\n#include<stdio.h>\nint main(){\n    int one,two;\n    cout << \"GCD of Two numbers\\nEnter first number : \";\n    cin >> one;\n    cout << \"Enter second number : \";\n    cin >> two;\n    int ans=0;\n    if(one>two)\n    {\n       ans= gcd(one,two);\n    }\n    else{\n       ans= gcd(two,one);\n    }\n    cout << ans;\n}\nint gcd(int one,int two){\n    if(one%two==0)\n    {\n        return two;\n    }\n    else{\n        gcd(two,one%two);\n    }\n}","position":{"start":{"line":42,"column":1,"offset":861},"end":{"line":73,"column":4,"offset":1443},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":74,"column":5,"offset":1449},"end":{"line":74,"column":11,"offset":1455},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1445},"end":{"line":74,"column":11,"offset":1455},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"GCD of Two numbers\nEnter first number : 3\nEnter second number : 4\n1","position":{"start":{"line":75,"column":1,"offset":1457},"end":{"line":80,"column":4,"offset":1537},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":82,"column":4,"offset":1544},"end":{"line":82,"column":23,"offset":1563},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":1541},"end":{"line":82,"column":23,"offset":1563},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"7. Write a Java program to count the digits of a given number using recursion.","position":{"start":{"line":83,"column":5,"offset":1569},"end":{"line":83,"column":83,"offset":1647},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1565},"end":{"line":83,"column":83,"offset":1647},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to count the digits of a given number using recursion.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int one,two;\n        System.out.println(\"GCD of Two numbers\\nEnter first number : \");\n        one = z.nextInt();\n        System.out.println(\"Enter second number : \");\n        two = z.nextInt();\n        int ans=0;\n        if(one>two)\n        {\n           ans= gcd(one,two);\n        }\n        else{\n           ans= gcd(two,one);\n        }\n        System.out.println(ans);\n    }\n    static int gcd(int one,int two){\n        if(one%two==0)\n        {\n            return two;\n        }\n        else{\n            gcd(two,one%two);\n        }\n    }\n\n}","position":{"start":{"line":84,"column":1,"offset":1649},"end":{"line":116,"column":4,"offset":2458},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":117,"column":5,"offset":2464},"end":{"line":117,"column":11,"offset":2470},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":2460},"end":{"line":117,"column":11,"offset":2470},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"GCD of Two numbers\nEnter first number : 3\nEnter second number : 4\n1","position":{"start":{"line":118,"column":1,"offset":2472},"end":{"line":123,"column":4,"offset":2552},"indent":[1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to count the digits of a given number using recursion.\",\"category\":\"Recursion Function Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":126,"column":1,"offset":2556},"end":{"line":126,"column":259,"offset":2814},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":126,"column":259,"offset":2814}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to count the digits of a given number using recursion.\",\n  \"category\": \"Recursion Function Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"7. Write a C program to count the digits of a given number using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to count the digits of a given number using recursion.\\n#include<stdio.h>\\nint main(){\\n    int one,two;\\n    printf(\\\"GCD of Two numbers\\\\nEnter first number : \\\");\\n    scanf(\\\"%d\\\", &one);\\n    printf(\\\"Enter second number : \\\");\\n    scanf(\\\"%d\\\", &two);\\n    int ans=0;\\n    if(one>two)\\n    {\\n       ans= gcd(one,two);\\n    }\\n    else{\\n       ans= gcd(two,one);\\n    }\\n    printf(\\\"%d\\\",ans);\\n}\\nint gcd(int one,int two){\\n    if(one%two==0)\\n    {\\n        return two;\\n    }\\n    else{\\n        gcd(two,one%two);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"GCD of Two numbers\\nEnter first number : 3\\nEnter second number : 4\\n1\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"7. Write a C++ program to count the digits of a given number using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to count the digits of a given number using recursion.\\n\\n#include<iostream>\\nusing namespace std;\\n#include<stdio.h>\\nint main(){\\n    int one,two;\\n    cout << \\\"GCD of Two numbers\\\\nEnter first number : \\\";\\n    cin >> one;\\n    cout << \\\"Enter second number : \\\";\\n    cin >> two;\\n    int ans=0;\\n    if(one>two)\\n    {\\n       ans= gcd(one,two);\\n    }\\n    else{\\n       ans= gcd(two,one);\\n    }\\n    cout << ans;\\n}\\nint gcd(int one,int two){\\n    if(one%two==0)\\n    {\\n        return two;\\n    }\\n    else{\\n        gcd(two,one%two);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"GCD of Two numbers\\nEnter first number : 3\\nEnter second number : 4\\n1\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"7. Write a Java program to count the digits of a given number using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to count the digits of a given number using recursion.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int one,two;\\n        System.out.println(\\\"GCD of Two numbers\\\\nEnter first number : \\\");\\n        one = z.nextInt();\\n        System.out.println(\\\"Enter second number : \\\");\\n        two = z.nextInt();\\n        int ans=0;\\n        if(one>two)\\n        {\\n           ans= gcd(one,two);\\n        }\\n        else{\\n           ans= gcd(two,one);\\n        }\\n        System.out.println(ans);\\n    }\\n    static int gcd(int one,int two){\\n        if(one%two==0)\\n        {\\n            return two;\\n        }\\n        else{\\n            gcd(two,one%two);\\n        }\\n    }\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"GCD of Two numbers\\nEnter first number : 3\\nEnter second number : 4\\n1\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to count the digits of a given number using recursion.\",\n  \"category\": \"Recursion Function Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`7. Write a C program to count the digits of a given number using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to count the digits of a given number using recursion.\n#include<stdio.h>\nint main(){\n    int one,two;\n    printf(\"GCD of Two numbers\\\\nEnter first number : \");\n    scanf(\"%d\", &one);\n    printf(\"Enter second number : \");\n    scanf(\"%d\", &two);\n    int ans=0;\n    if(one>two)\n    {\n       ans= gcd(one,two);\n    }\n    else{\n       ans= gcd(two,one);\n    }\n    printf(\"%d\",ans);\n}\nint gcd(int one,int two){\n    if(one%two==0)\n    {\n        return two;\n    }\n    else{\n        gcd(two,one%two);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`GCD of Two numbers\nEnter first number : 3\nEnter second number : 4\n1\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`7. Write a C++ program to count the digits of a given number using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to count the digits of a given number using recursion.\n\n#include<iostream>\nusing namespace std;\n#include<stdio.h>\nint main(){\n    int one,two;\n    cout << \"GCD of Two numbers\\\\nEnter first number : \";\n    cin >> one;\n    cout << \"Enter second number : \";\n    cin >> two;\n    int ans=0;\n    if(one>two)\n    {\n       ans= gcd(one,two);\n    }\n    else{\n       ans= gcd(two,one);\n    }\n    cout << ans;\n}\nint gcd(int one,int two){\n    if(one%two==0)\n    {\n        return two;\n    }\n    else{\n        gcd(two,one%two);\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`GCD of Two numbers\nEnter first number : 3\nEnter second number : 4\n1\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`7. Write a Java program to count the digits of a given number using recursion.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to count the digits of a given number using recursion.\nimport java.util.Scanner;\npublic class Funycode {\n    public static void main(String[] args) {\n        Scanner z = new Scanner(System.in);\n        int one,two;\n        System.out.println(\"GCD of Two numbers\\\\nEnter first number : \");\n        one = z.nextInt();\n        System.out.println(\"Enter second number : \");\n        two = z.nextInt();\n        int ans=0;\n        if(one>two)\n        {\n           ans= gcd(one,two);\n        }\n        else{\n           ans= gcd(two,one);\n        }\n        System.out.println(ans);\n    }\n    static int gcd(int one,int two){\n        if(one%two==0)\n        {\n            return two;\n        }\n        else{\n            gcd(two,one%two);\n        }\n    }\n\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`GCD of Two numbers\nEnter first number : 3\nEnter second number : 4\n1\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}