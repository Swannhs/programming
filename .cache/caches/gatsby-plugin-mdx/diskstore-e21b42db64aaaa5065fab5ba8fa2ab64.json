{"expireTime":9007200883706587000,"key":"gatsby-plugin-mdx-entire-payload-2f1f0d04b06dac0aa8ee7314094ea413--undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"C Implementation","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":20,"offset":21},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":20,"offset":21},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Write a C program to show the simple structure of a function.","position":{"start":{"line":3,"column":5,"offset":27},"end":{"line":3,"column":69,"offset":91},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":69,"offset":91},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C program to show the simple structure of a function.\n#include<stdio.h>\n\nvoid introduction()\n{\n    printf(\"Hi\\n\");\n    printf(\"I am Funycode\");\n}\n\nint main()\n{\n    introduction();\n    return 0;\n}","position":{"start":{"line":4,"column":1,"offset":93},"end":{"line":19,"column":4,"offset":322},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":20,"column":5,"offset":328},"end":{"line":20,"column":11,"offset":334},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":324},"end":{"line":20,"column":11,"offset":334},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Hi\nI am Funycode","position":{"start":{"line":21,"column":1,"offset":336},"end":{"line":24,"column":4,"offset":363},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C++ Implementation","position":{"start":{"line":26,"column":4,"offset":370},"end":{"line":26,"column":22,"offset":388},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":367},"end":{"line":26,"column":22,"offset":388},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Write a C++ program to show the simple structure of a function.","position":{"start":{"line":27,"column":5,"offset":394},"end":{"line":27,"column":71,"offset":460},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":390},"end":{"line":27,"column":71,"offset":460},"indent":[]}},{"type":"code","lang":"c","meta":null,"value":"//Write a C++ program to show the simple structure of a function.\n\n#include<iostream>\nusing namespace std;\nvoid introduction()\n{\n    cout << \"Hi\\n\";\n    cout << \"I am Funycode\\n\";\n}\nint main()\n{\n    introduction();\n    return 0;\n}","position":{"start":{"line":28,"column":1,"offset":462},"end":{"line":43,"column":4,"offset":716},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":44,"column":5,"offset":722},"end":{"line":44,"column":11,"offset":728},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":718},"end":{"line":44,"column":11,"offset":728},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Hi\nI am Funycode","position":{"start":{"line":45,"column":1,"offset":730},"end":{"line":48,"column":4,"offset":757},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Java Implementation","position":{"start":{"line":50,"column":4,"offset":764},"end":{"line":50,"column":23,"offset":783},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":761},"end":{"line":50,"column":23,"offset":783},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1. Write a Java program to show the simple structure of a function.","position":{"start":{"line":51,"column":5,"offset":789},"end":{"line":51,"column":72,"offset":856},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":785},"end":{"line":51,"column":72,"offset":856},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a Java program to show the simple structure of a function.\npublic class Funycode {\n    satic void introduction()\n    {\n        System.out.println(\"Hi\");\n        System.out.println(\"I am Funycode\");\n    }\n    public static void main(String[] args) {\n        introduction();\n    }\n}","position":{"start":{"line":52,"column":1,"offset":858},"end":{"line":64,"column":4,"offset":1168},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Output","position":{"start":{"line":65,"column":5,"offset":1174},"end":{"line":65,"column":11,"offset":1180},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1170},"end":{"line":65,"column":11,"offset":1180},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"input 3 4 5\noutput 12","position":{"start":{"line":66,"column":1,"offset":1182},"end":{"line":69,"column":4,"offset":1214},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Write a C/C++/Java program to show the simple structure of a function.\",\"category\":\"Function Program Index\",\"tags\":[\"#c\",\"#c++\",\"#java\",\"#tutorial\"],\"date\":\"2020-04-16T00:00:00.000Z\",\"thumbnailText\":\"Index\"}","position":{"start":{"line":72,"column":1,"offset":1218},"end":{"line":72,"column":246,"offset":1463},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":72,"column":246,"offset":1463}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to show the simple structure of a function.\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"1. Write a C program to show the simple structure of a function.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to show the simple structure of a function.\\n#include<stdio.h>\\n\\nvoid introduction()\\n{\\n    printf(\\\"Hi\\\\n\\\");\\n    printf(\\\"I am Funycode\\\");\\n}\\n\\nint main()\\n{\\n    introduction();\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Hi\\nI am Funycode\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"1. Write a C++ program to show the simple structure of a function.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to show the simple structure of a function.\\n\\n#include<iostream>\\nusing namespace std;\\nvoid introduction()\\n{\\n    cout << \\\"Hi\\\\n\\\";\\n    cout << \\\"I am Funycode\\\\n\\\";\\n}\\nint main()\\n{\\n    introduction();\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Hi\\nI am Funycode\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"1. Write a Java program to show the simple structure of a function.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to show the simple structure of a function.\\npublic class Funycode {\\n    satic void introduction()\\n    {\\n        System.out.println(\\\"Hi\\\");\\n        System.out.println(\\\"I am Funycode\\\");\\n    }\\n    public static void main(String[] args) {\\n        introduction();\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"input 3 4 5\\noutput 12\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to show the simple structure of a function.\",\n  \"category\": \"Function Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`C Implementation`}</h2>\n    <h3>{`1. Write a C program to show the simple structure of a function.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C program to show the simple structure of a function.\n#include<stdio.h>\n\nvoid introduction()\n{\n    printf(\"Hi\\\\n\");\n    printf(\"I am Funycode\");\n}\n\nint main()\n{\n    introduction();\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Hi\nI am Funycode\n`}</code></pre>\n    <h2>{`C++ Implementation`}</h2>\n    <h3>{`1. Write a C++ program to show the simple structure of a function.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-c\"\n      }}>{`//Write a C++ program to show the simple structure of a function.\n\n#include<iostream>\nusing namespace std;\nvoid introduction()\n{\n    cout << \"Hi\\\\n\";\n    cout << \"I am Funycode\\\\n\";\n}\nint main()\n{\n    introduction();\n    return 0;\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Hi\nI am Funycode\n`}</code></pre>\n    <h2>{`Java Implementation`}</h2>\n    <h3>{`1. Write a Java program to show the simple structure of a function.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a Java program to show the simple structure of a function.\npublic class Funycode {\n    satic void introduction()\n    {\n        System.out.println(\"Hi\");\n        System.out.println(\"I am Funycode\");\n    }\n    public static void main(String[] args) {\n        introduction();\n    }\n}\n`}</code></pre>\n    <h3>{`Output`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`input 3 4 5\noutput 12\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}