{"data":{"post":{"slug":"/the-distance-between-two-cities-in-km-is-input-through-the-keyboard-write-a-program-to-convert-and-print-this-distance-in-meters-feet-inches-and-centimeters","title":"The distance between two cities (in km.) is input through the keyboard. Write a program to convert and print this distance in meters, feet, inches and centimeters.","date":"16.04.2020","tags":[{"name":"basic","slug":"basic"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The distance between two cities (in km.) is input through the keyboard. Write a program to convert and print this distance in meters, feet, inches and centimeters.\",\n  \"category\": \"Basic Declaration & Expression Index\",\n  \"tags\": [\"basic\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"Program-18: The distance between two cities (in km.) is input through the keyboard. Write a program to convert and print this distance in meters, feet, inches and centimeters.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"/*The distance between two cities (in km.) is input through the keyboard. Write a C program to convert and print this distance in meters, feet, inches and centimeters.*/\\n#include<stdio.h>\\nvoid main()\\n{\\n    int a;\\n    float b,c,d,e;\\n    scanf(\\\"%d\\\",&a);\\n    b=a*1000;\\n    c=b*100;\\n    d=c*0.032;\\n    e=d*12;\\n    printf(\\\"meter=%f Centimeter=%f Feet=%f Inches=%f\\\",b,c,d,e);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"1000\\nMeter:=1000000.0\\nCentimeter=1.0E8\\nFeet=3200000.0\\nInches=3.84E7\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"Program-18: The distance between two cities (in km.) is input through the keyboard. Write a C++ program to convert and print this distance in meters, feet, inches and centimeters.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"/*The distance between two cities (in km.) is input through the keyboard. Write a C++ program to convert and print this distance in meters, feet, inches and centimeters.*/\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int a;\\n    double b,c,d,e;\\n    cin>>a;\\n    b=a*1000;\\n    c=b*100;\\n    d=c*0.032;\\n    e=d*12;\\n    cout<<\\\"Meter:\\\"<<b<<endl;\\n    cout<<\\\"Centimeter:\\\"<<c<<endl;\\n    cout<<\\\"Feet:\\\"<<d<<endl;\\n    cout<<\\\"Inches:\\\"<<e;\\n    return 0;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"1000\\nMeter:=1000000.0\\nCentimeter=1.0E8\\nFeet=3200000.0\\nInches=3.84E7\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"Program-18: The distance between two cities (in km.) is input through the keyboard. Write a Java program to convert and print this distance in meters, feet, inches and centimeters.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"/*The distance between two cities (in km.) is input through the keyboard. Write a Java program to convert and print this distance in meters, feet, inches and centimeters.*/\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        int a;\\n        double b,c,d,e;\\n        Scanner z=new Scanner(System.in);\\n        a=z.nextInt();\\n        b=a*1000;\\n        c=b*100;\\n        d=c*0.032;\\n        e=d*12;\\n        System.out.println(\\\"Meter:=\\\"+b);\\n        System.out.println(\\\"Centimeter=\\\"+c);\\n        System.out.println(\\\"Feet=\\\"+d);\\n        System.out.println(\\\"Inches\\\"+e);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"1000\\nMeter:=1000000.0\\nCentimeter=1.0E8\\nFeet=3200000.0\\nInches3.84E7\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation Program-18: The distance between two cities (in km.) is input through the keyboard. Write a program to convert and printâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/the-distance-between-two-cities-in-km-is-input-through-the-keyboard-write-a-program-to-convert-and-print-this-distance-in-meters-feet-inches-and-centimeters","formatString":"DD.MM.YYYY"}}