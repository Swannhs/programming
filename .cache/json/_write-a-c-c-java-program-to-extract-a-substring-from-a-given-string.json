{"data":{"post":{"slug":"/write-a-c-c-java-program-to-extract-a-substring-from-a-given-string","title":"Write a C/C++/Java program to extract a substring from a given string.","date":"16.04.2020","tags":[{"name":"string","slug":"string"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to extract a substring from a given string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"20. Write a C program to extract a substring from a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to extract a substring from a given string.\\n#include <stdio.h>\\n#include <string.h>\\n#include<stdlib.h>\\nint main()\\n{\\n    char a[50],b[50];\\n    int index,num,i,l;\\n    printf(\\\"enter the string \\\");\\n    gets(a);\\n    printf(\\\"enter start of index and number of characters to extract \\\");\\n    scanf(\\\"%d%d\\\",&index,&num);\\n    l=strlen(a);\\n    if(index+num>l)\\n    {\\n        printf(\\\"invalid\\\");\\n        exit(0);\\n    }\\n    for(i=0; i<num; i++)\\n        b[i]=a[index+i];\\n\\n\\n    b[i]='\\\\0';\\n    printf(\\\"extracted string is:%s\\\",b);\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter the string hello\\nenter start of index and number of characters to extract 1 2\\nextracted string is:el\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"20. Write a C++ program to extract a substring from a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to extract a substring from a given string.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint  main()\\n{\\n    char a[50],b[50];\\n    int index,num,i,l;\\n    cout << \\\"enter the string \\\";\\n    gets(a);\\n    cout << \\\"enter start of index and number of characters to extract\\\";\\n    scanf(\\\"%d%d\\\",&index,&num);\\n    l=strlen(a);\\n    if(index+num>l)\\n    {\\n        cout << \\\"invalid\\\");\\n        exit(0);\\n    }\\n    for(i=0; i<num; i++)\\n        b[i]=a[index+i];\\n    b[i]='\\\\0';\\n    cout << \\\"extracted string is:\\\"<<b;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter the string hello\\nenter start of index and number of characters to extract 1 2\\nextracted string is:el\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"20. Write a Java program to extract a substring from a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to extract a substring from a given string.\\nimport java.util.Scanner;\\n\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        System.out.println(\\\"Enter a string: \\\");\\n        String str, result = \\\"\\\";\\n        int index, num;\\n        str = z.nextLine();\\n        System.out.println(\\\"enter start of index and number of characters to extract \\\");\\n        index = z.nextInt();\\n        num = z.nextInt();\\n        if (index + num > str.length()) {\\n            System.out.println(\\\"Invalid\\\");\\n            System.exit(0);\\n        }\\n        for (int i = 0; i < num; i++) {\\n            result += str.charAt(i);\\n        }\\n        System.out.println(\\\"Extracted string is: \\\" + result);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"enter the string hello\\nenter start of index and number of characters to extract 1 2\\nextracted string is:el\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation 20. Write a C program to extract a substring from a given string. Output C++ Implementation 20. Write a C++ program toâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-program-to-extract-a-substring-from-a-given-string","formatString":"DD.MM.YYYY"}}