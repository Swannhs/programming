{"data":{"post":{"slug":"/write-a-c-c-java-to-print-the-array-elements-using-recursion","title":"Write a C/C++/Java to print the array elements using recursion.","date":"16.04.2020","tags":[{"name":"recursion","slug":"recursion"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java to print the array elements using recursion.\",\n  \"category\": \"Recursion Function Index\",\n  \"tags\": [\"recursion\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"4. Write a C to print the array elements using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C to print the array elements using recursion.\\n#include<stdio.h>\\nint main(){\\n    int k[]={1,2,3,4,5};\\n    arrayPrint(sizeof(k)/sizeof(int),k,0);\\n}\\nint arrayPrint(int length,int k[],int i){\\n    if(length<=i){\\n        return 0;\\n    }\\n    printf(\\\"%d\\\",k[i]);\\n    arrayPrint(length,k,++i);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"12345\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"4. Write a C++ to print the array elements using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ to print the array elements using recursion.\\n\\n#include<iostream>\\nusing namespace std;\\nint main(){\\n    int k[]={1,2,3,4,5};\\n    arrayPrint(sizeof(k)/sizeof(int),k,0);\\n}\\nint arrayPrint(int length,int k[],int i){\\n    if(length<=i){\\n        return 0;\\n    }\\n    cout << k[i];\\n    arrayPrint(length,k,++i);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"12345\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"4. Write a Java to print the array elements using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java to print the array elements using recursion.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n      Scanner z = new Scanner(System.in);\\n      int k[]={1,2,3,4,5};\\n      arrayPrint(sizeof(k)/sizeof(int),k,0);\\n    }\\n    static int febo(int n){\\n      if(length<=i){\\n          return 0;\\n      }\\n      System.out.printf(\\\" \\\" + k[i]);\\n      arrayPrint(length,k,++i);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"12345\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation 4. Write a C to print the array elements using recursion. Output C++ Implementation 4. Write a C++ to print the arrayâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-to-print-the-array-elements-using-recursion","formatString":"DD.MM.YYYY"}}