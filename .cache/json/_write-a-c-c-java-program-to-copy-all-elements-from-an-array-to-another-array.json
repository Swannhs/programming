{"data":{"post":{"slug":"/write-a-c-c-java-program-to-copy-all-elements-from-an-array-to-another-array","title":"Write a C/C++/Java program to copy all elements from an array to another array.","date":"16.04.2020","tags":[{"name":"#c","slug":"c"},{"name":"#c++","slug":"c"},{"name":"#java","slug":"java"},{"name":"#tutorial","slug":"tutorial"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to copy all elements from an array to another array.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"10. Write a C program to copy all elements from an array to another array.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to copy all elements from an array to another array.\\n#include <stdio.h>\\nvoid main()\\n{\\n    int arr1[10], arr2[10],i;\\n    printf(\\\"Input 10 elements in the array :\\\\n\\\");\\n       for(i=0;i<10;i++)\\n        {\\n          scanf(\\\"%d\\\",&arr1[i]);\\n        }\\n    for(i=0; i<10; i++)\\n    {\\n        arr2[i] = arr1[i];\\n    }\\n    printf(\\\"\\\\nThe elements stored in the first array are :\\\\n\\\");\\n    for(i=0; i<10; i++)\\n    {\\n        printf(\\\"% d\\\", arr1[i]);\\n    }\\n    printf(\\\"\\\\n\\\\nThe elements copied into the second array are :\\\\n\\\");\\n    for(i=0; i<10; i++)\\n    {\\n        printf(\\\"% d\\\", arr2[i]);\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input 10 elements in the array :\\n1 2 3 4 5 6 7 8 9 10\\n\\nThe elements stored in the first array are :\\n 1 2 3 4 5 6 7 8 9 10\\n\\nThe elements copied into the second array are :\\n 1 2 3 4 5 6 7 8 9 10\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"10. Write a C++ program to copy all elements from an array to another array.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to copy all elements from an array to another array.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n    int i,arr[10];\\n    cout<<\\\"Input 10 elements in the array :\\\\n\\\";\\n    for(i=0; i<10; i++)\\n    {\\n       cin>>arr[i];\\n    }\\n    cout<<\\\"\\\\nElements in array are: \\\";\\n    for(i=0; i<10; i++)\\n    {\\n        cout<<arr[i]<<\\\" \\\";\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input 10 elements in the array :\\n1 2 3 4 5 6 7 8 9 10\\n\\nThe elements stored in the first array are :\\n 1 2 3 4 5 6 7 8 9 10\\n\\nThe elements copied into the second array are :\\n 1 2 3 4 5 6 7 8 9 10\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"10. Write a Java program to copy all elements from an array to another array.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to copy all elements from an array to another array.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        int arr[]=new int [10];\\n        int i;\\n\\n        System.out.println(\\\"Input 10 elements in the array :\\\\n\\\");\\n        for(i=0; i<10; i++)\\n        {\\n           arr[i]=z.nextInt();\\n        }\\n        System.out.println(\\\"\\\\nElements in array are: \\\");\\n        for(i=0; i<10; i++)\\n        {\\n            System.out.println(arr[i]+\\\" \\\");\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input 10 elements in the array :\\n1 2 3 4 5 6 7 8 9 10\\n\\nThe elements stored in the first array are :\\n 1 2 3 4 5 6 7 8 9 10\\n\\nThe elements copied into the second array are :\\n 1 2 3 4 5 6 7 8 9 10\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation 10. Write a C program to copy all elements from an array to another array. Output C++ Implementation 10. Write a Câ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-program-to-copy-all-elements-from-an-array-to-another-array","formatString":"DD.MM.YYYY"}}