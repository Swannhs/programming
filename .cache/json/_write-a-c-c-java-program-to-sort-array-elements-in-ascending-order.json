{"data":{"post":{"slug":"/write-a-c-c-java-program-to-sort-array-elements-in-ascending-order","title":"Write a C/C++/Java program to sort array elements in ascending order.","date":"16.04.2020","tags":[{"name":"#c","slug":"c"},{"name":"#c++","slug":"c"},{"name":"#java","slug":"java"},{"name":"#tutorial","slug":"tutorial"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to sort array elements in ascending order.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"22. Write a C program to sort array elements in ascending order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to sort array elements in ascending order.\\n#include <stdio.h>\\nint main()\\n{\\n   int i, j, a, arr[10];\\n   printf(\\\"Enter 10 elements- \\\\n\\\");\\n   for (i = 0; i < 10; i++)\\n   {\\n     scanf(\\\"%d\\\", &arr[i]);\\n   }\\n   for (i = 0; i < 10; ++i)\\n   {\\n     for (j = i + 1; j < 10; ++j)\\n     {\\n        if (arr[i] > arr[j])\\n        {\\n           a =  arr[i];\\n           arr[i] = arr[j];\\n           arr[j] = a;\\n        }\\n      }\\n   }\\n   printf(\\\"The numbers arranged in ascending order are given below: \\\\n\\\");\\n   for (i = 0; i < 10; ++i)\\n      printf(\\\"%d\\\\n\\\", arr[i]);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 10 elements-\\n4\\n5\\n3\\n2\\n1\\n5\\n6\\n8\\n7\\n6\\nThe numbers arranged in ascending order are given below:\\n1\\n2\\n3\\n4\\n5\\n5\\n6\\n6\\n7\\n8\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"22. Write a C++ program to sort array elements in ascending order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to sort array elements in ascending order.\\n\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int i, j, a, arr[10];\\n    cout<<\\\"Enter 10 elements- \\\\n\\\";\\n    for (i = 0; i < 10; i++)\\n    {\\n        cin>>arr[i];\\n    }\\n    for (i = 0; i < 10; ++i)\\n    {\\n        for (j = i + 1; j < 10; ++j)\\n        {\\n            if (arr[i] > arr[j])\\n            {\\n                a =  arr[i];\\n                arr[i] = arr[j];\\n                arr[j] = a;\\n            }\\n        }\\n    }\\n    cout<<\\\"The numbers arranged in ascending order are given below: \\\\n\\\";\\n    for (i = 0; i < 10; ++i)\\n        cout<<arr[i]<<\\\"  \\\";\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 10 elements-\\n4\\n5\\n3\\n2\\n1\\n5\\n6\\n8\\n7\\n6\\nThe numbers arranged in ascending order are given below:\\n1\\n2\\n3\\n4\\n5\\n5\\n6\\n6\\n7\\n8\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"22. Write a Java program to sort array elements in ascending order.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to sort array elements in ascending order.\\n\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        int i, j, a, arr[]=new int [10];\\n        System.out.println(\\\"Enter 10 elements- \\\\n\\\");\\n        for (i = 0; i < 10; i++)\\n        {\\n            arr[i]=z.nextInt();\\n        }\\n        for (i = 0; i < 10; ++i)\\n        {\\n            for (j = i + 1; j < 10; ++j)\\n            {\\n                if (arr[i] > arr[j])\\n                {\\n                    a =  arr[i];\\n                    arr[i] = arr[j];\\n                    arr[j] = a;\\n                }\\n            }\\n        }\\n        System.out.println(\\\"The numbers arranged in ascending order are given below: \\\\n\\\");\\n        for (i = 0; i < 10; ++i)\\n             System.out.println(arr[i]+\\\"  \\\");\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 10 elements-\\n4\\n5\\n3\\n2\\n1\\n5\\n6\\n8\\n7\\n6\\nThe numbers arranged in ascending order are given below:\\n1\\n2\\n3\\n4\\n5\\n5\\n6\\n6\\n7\\n8\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation 22. Write a C program to sort array elements in ascending order. Output C++ Implementation 22. Write a C++ program to sortâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-program-to-sort-array-elements-in-ascending-order","formatString":"DD.MM.YYYY"}}