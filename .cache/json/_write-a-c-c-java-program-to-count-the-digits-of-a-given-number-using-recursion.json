{"data":{"post":{"slug":"/write-a-c-c-java-program-to-count-the-digits-of-a-given-number-using-recursion","title":"Write a C/C++/Java program to count the digits of a given number using recursion.","date":"16.04.2020","tags":[{"name":"recursion","slug":"recursion"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to count the digits of a given number using recursion.\",\n  \"category\": \"Recursion Function Index\",\n  \"tags\": [\"recursion\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"5. Write a C program to count the digits of a given number using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to count the digits of a given number using recursion.\\n#include<stdio.h>\\nint main(){\\n    int n;\\n    printf(\\\"Enter a Number : \\\");\\n    scanf(\\\"%d\\\", &n);\\n    int k=digitcount(n);\\n    printf(\\\"Number of digits : \\\");\\n    printf(\\\"%d\\\",k);\\n}\\nint digitcount(int n){\\n    if(n==0)\\n    {\\n        return 0;\\n    }\\n    return  1+digitcount(n/10);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a Number : 5\\nNumber of digits : 1\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"5. Write a C++ program to count the digits of a given number using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to count the digits of a given number using recursion.\\n\\n#include<iostream>\\nusing namespace std;\\nint main(){\\n    int n;\\n    cout << \\\"Enter a Number : \\\";\\n    cin >> n;\\n    int k=digitcount(n);\\n    cout << \\\"Number of digits : \\\";\\n    cin >> k;\\n}\\nint digitcount(int n){\\n    if(n==0)\\n    {\\n        return 0;\\n    }\\n    return  1+digitcount(n/10);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a Number : 5\\nNumber of digits : 1\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"5. Write a Java program to count the digits of a given number using recursion.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to count the digits of a given number using recursion.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z = new Scanner(System.in);\\n        int n;\\n        System.out.println(\\\"Enter a Number : \\\");\\n        n = z.nextInt();\\n        int k=digitcount(n);\\n        System.out.println(\\\"Number of digits : \\\");\\n        System.out.println(k);\\n    }\\n    static int digitcount(int n){\\n        if(n==0)\\n        {\\n            return 0;\\n        }\\n        return  1+digitcount(n/10);\\n    }\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter a Number : 5\\nNumber of digits : 1\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation 5. Write a C program to count the digits of a given number using recursion. Output C++ Implementation 5. Write a Câ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-program-to-count-the-digits-of-a-given-number-using-recursion","formatString":"DD.MM.YYYY"}}