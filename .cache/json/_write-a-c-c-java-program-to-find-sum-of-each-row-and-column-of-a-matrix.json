{"data":{"post":{"slug":"/write-a-c-c-java-program-to-find-sum-of-each-row-and-column-of-a-matrix","title":"Write a C/C++/Java program to find sum of each row and column of a matrix.","date":"16.04.2020","tags":[{"name":"array","slug":"array"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find sum of each row and column of a matrix.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"array\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"33. Write a C program to find sum of each row and column of a matrix.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to find sum of each row and column of a matrix.\\n#include <stdio.h>\\nvoid main ()\\n{\\n    int array[3][3],i,j,sum=0;\\n    printf(\\\"Enter 9 co-efficients of the matrix-\\\\n\\\");\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            scanf(\\\"%d\\\", &array[i][j]);\\n        }\\n    }\\n    printf(\\\"The given matrix is \\\\n\\\");\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            printf(\\\" %d\\\", array[i][j]);\\n        }\\n        printf(\\\"\\\\n\\\");\\n    }\\n\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            sum = sum + array[i][j] ;\\n        }\\n\\n        printf(\\\"Sum of the %d row is = %d\\\\n\\\", i, sum);\\n        sum = 0;\\n\\n    }\\n    sum = 0;\\n    for (j = 0; j < 3; ++j)\\n    {\\n        for (i = 0; i < 3; ++i)\\n        {\\n            sum = sum + array[i][j];\\n        }\\n\\n        printf(\\\"Sum of the %d column is = %d\\\\n\\\", j, sum);\\n        sum = 0;\\n\\n    }\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 9 co-efficients of the matrix-\\n1 2 3 4 5 4 3 2 1\\nThe given matrix is\\n 1 2 3\\n 4 5 4\\n 3 2 1\\nSum of the 0 row is = 6\\nSum of the 1 row is = 13\\nSum of the 2 row is = 6\\nSum of the 0 column is = 8\\nSum of the 1 column is = 9\\nSum of the 2 column is = 8\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"33. Write a C++ program to find sum of each row and column of a matrix.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find sum of each row and column of a matrix.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n    int array[3][3],i,j,sum=0;\\n    cout << \\\"Enter 9 co-efficients of the matrix-\\\\n\\\";\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            cin >> array[i][j];\\n        }\\n    }\\n    cout << \\\"The given matrix is \\\\n\\\";\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            cout << \\\"\\\\t\\\" << arr1[i][j];\\n        }\\n        cout << \\\"\\\\n\\\";\\n    }\\n\\n    for (i = 0; i < 3; ++i)\\n    {\\n        for (j = 0; j < 3; ++j)\\n        {\\n            sum = sum + array[i][j] ;\\n        }\\n\\n        cout << \\\"Sum of the \\\" << i << \\\" row is = \\\" << sum << endl);\\n        sum = 0;\\n\\n    }\\n    sum = 0;\\n    for (j = 0; j < 3; ++j)\\n    {\\n        for (i = 0; i < 3; ++i)\\n        {\\n            sum = sum + array[i][j];\\n        }\\n\\n        cout << \\\"Sum of the \\\" << j << \\\" row is = \\\" << sum << endl);\\n        sum = 0;\\n\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 9 co-efficients of the matrix-\\n1 2 3 4 5 4 3 2 1\\nThe given matrix is\\n 1 2 3\\n 4 5 4\\n 3 2 1\\nSum of the 0 row is = 6\\nSum of the 1 row is = 13\\nSum of the 2 row is = 6\\nSum of the 0 column is = 8\\nSum of the 1 column is = 9\\nSum of the 2 column is = 8\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"33. Write a Java program to find sum of each row and column of a matrix.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to find sum of each row and column of a matrix.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n          Scanner z=new Scanner(System.in);\\n          int array[][]= new int[3][3],i,j,sum=0;\\n          System.out.printf(\\\"Enter 9 co-efficients of the matrix-\\\\n\\\");\\n          for (i = 0; i < 3; ++i)\\n          {\\n              for (j = 0; j < 3; ++j)\\n              {\\n                  array[i][j] = z.nextInt();\\n              }\\n          }\\n          System.out.printf(\\\"The given matrix is \\\\n\\\");\\n          for (i = 0; i < 3; ++i)\\n          {\\n              for (j = 0; j < 3; ++j)\\n              {\\n                  System.out.printf(\\\"\\\\t\\\"+array[i][j]);\\n              }\\n              System.out.printf(\\\"\\\\n\\\");\\n          }\\n\\n          for (i = 0; i < 3; ++i)\\n          {\\n              for (j = 0; j < 3; ++j)\\n              {\\n                  sum = sum + array[i][j] ;\\n              }\\n\\n              System.out.println(\\\"Sum of the \\\" + i + \\\" row is = \\\"+ sum);\\n              sum = 0;\\n          }\\n          sum = 0;\\n          for (j = 0; j < 3; ++j)\\n          {\\n              for (i = 0; i < 3; ++i)\\n              {\\n                  sum = sum + array[i][j];\\n              }\\n\\n              System.out.println(\\\"Sum of the \\\" + j + \\\" column is = \\\"+sum);\\n              sum = 0;\\n          }\\n      }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 9 co-efficients of the matrix-\\n1 2 3 4 5 4 3 2 1\\nThe given matrix is\\n 1 2 3\\n 4 5 4\\n 3 2 1\\nSum of the 0 row is = 6\\nSum of the 1 row is = 13\\nSum of the 2 row is = 6\\nSum of the 0 column is = 8\\nSum of the 1 column is = 9\\nSum of the 2 column is = 8\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation 33. Write a C program to find sum of each row and column of a matrix. Output C++ Implementation 33. Write a C++ program toâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-program-to-find-sum-of-each-row-and-column-of-a-matrix","formatString":"DD.MM.YYYY"}}