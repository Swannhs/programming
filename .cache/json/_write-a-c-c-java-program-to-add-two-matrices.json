{"data":{"post":{"slug":"/write-a-c-c-java-program-to-add-two-matrices","title":"Write a C/C++/Java program to add two matrices.","date":"16.04.2020","tags":[{"name":"array","slug":"array"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to add two matrices.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"array\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"26. Write a C program to add two matrices.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to add two matrices.\\n#include <stdio.h>\\n\\nvoid main() {\\n  int arr1[3][3], brr1[3][3], crr1[3][3], i, j;\\n  printf(\\\"Input elements in the first matrix :\\\\n\\\");\\n  for (i = 0; i < 3; i++) {\\n    for (j = 0; j < 3; j++) {\\n      printf(\\\"element - [%d],[%d] : \\\", i, j);\\n      scanf(\\\"%d\\\", & arr1[i][j]);\\n    }\\n  }\\n  printf(\\\"Input elements in the second matrix :\\\\n\\\");\\n  for (i = 0; i < 3; i++) {\\n    for (j = 0; j < 3; j++) {\\n      printf(\\\"element - [%d],[%d] : \\\", i, j);\\n      scanf(\\\"%d\\\", & brr1[i][j]);\\n    }\\n  }\\n  printf(\\\"\\\\nThe First matrix is :\\\\n\\\");\\n  for (i = 0; i < 3; i++) {\\n    printf(\\\"\\\\n\\\");\\n    for (j = 0; j < 3; j++)\\n      printf(\\\"%d\\\\t\\\", arr1[i][j]);\\n  }\\n  printf(\\\"\\\\nThe Second matrix is :\\\\n\\\");\\n  for (i = 0; i < 3; i++) {\\n    printf(\\\"\\\\n\\\");\\n    for (j = 0; j < 3; j++)\\n      printf(\\\"%d\\\\t\\\", brr1[i][j]);\\n  }\\n  for (i = 0; i < 3; i++)\\n    for (j = 0; j < 3; j++)\\n      crr1[i][j] = arr1[i][j] + brr1[i][j];\\n  printf(\\\"\\\\nThe Addition of two matrix is : \\\\n\\\");\\n  for (i = 0; i < 3; i++) {\\n    printf(\\\"\\\\n\\\");\\n    for (j = 0; j < 3; j++)\\n      printf(\\\"%d\\\\t\\\", crr1[i][j]);\\n  }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the first matrix :\\nelement - [0],[0] : 1 2 3\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\\nelement - [0],[0] : 9 8 7\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\\nelement - [2],[1] : element - [2],[2] :\\nThe First matrix is :\\n\\n1       2       3\\n4       5       6\\n7       8       9\\nThe Second matrix is :\\n\\n9       8       7\\n6       5       4\\n3       2       1\\nThe Addition of two matrix is :\\n\\n10      10      10\\n10      10      10\\n10      10      10\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"26. Write a C++ program to add two matrices.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to add two matrices.\\n\\n  int arr1[3][3], brr1[3][3], crr1[3][3], i, j;\\n  cout << \\\"Input elements in the first matrix :\\\\n\\\";\\n  for (i = 0; i < 3; i++) {\\n    for (j = 0; j < 3; j++) {\\n  cout << \\\"element - : \\\" << i << j;\\n      cin >> arr1[i][j];\\n    }\\n  }\\n  cout << \\\"Input elements in the second matrix :\\\\n\\\");\\n  for (i = 0; i < 3; i++) {\\n    for (j = 0; j < 3; j++) {\\n  cout << \\\"element - [%d],[%d] : \\\", i, j);\\n      cin >> brr1[i][j];\\n    }\\n  }\\n  cout << \\\"\\\\nThe First matrix is :\\\\n\\\";\\n  for (i = 0; i < 3; i++) {\\n  cout << \\\"\\\\n\\\");\\n    for (j = 0; j < 3; j++)\\n      cout << \\\"   \\\" << arr1[i][j];\\n  }\\n  cout << \\\"\\\\nThe Second matrix is :\\\\n\\\";\\n  for (i = 0; i < 3; i++) {\\n  cout << \\\"\\\\n\\\";\\n    for (j = 0; j < 3; j++)\\n      cout << \\\"   \\\" << brr1[i][j];\\n  }\\n  for (i = 0; i < 3; i++)\\n    for (j = 0; j < 3; j++)\\n      crr1[i][j] = arr1[i][j] + brr1[i][j];\\n  cout << \\\"\\\\nThe Addition of two matrix is : \\\\n\\\";\\n  for (i = 0; i < 3; i++) {\\n    cout << \\\"\\\\n\\\";\\n    for (j = 0; j < 3; j++)\\n  cout << \\\"   \\\" << crr1[i][j];\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the first matrix :\\nelement - [0],[0] : 1 2 3\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\\nelement - [0],[0] : 9 8 7\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\\nelement - [2],[1] : element - [2],[2] :\\nThe First matrix is :\\n\\n1       2       3\\n4       5       6\\n7       8       9\\nThe Second matrix is :\\n\\n9       8       7\\n6       5       4\\n3       2       1\\nThe Addition of two matrix is :\\n\\n10      10      10\\n10      10      10\\n10      10      10\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"26. Write a Java program to add two matrices.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to add two matrices.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        int arr1[3][3],brr1[3][3],crr1[3][3],i,j;\\n        System.out.println(\\\"Input elements in the first matrix :\\\\n\\\");\\n             for(i=0;i<3;i++)\\n              {\\n                  for(j=0;j<3;j++)\\n                  {\\n                     System.out.println(\\\"element - : \\\"+i + \\\" \\\" +j);\\n                     arr1[i][j] = z.nextInt();\\n                  }\\n              }\\n             System.out.println(\\\"Input elements in the second matrix :\\\\n\\\");\\n             for(i=0;i<3;i++)\\n              {\\n                  for(j=0;j<3;j++)\\n                  {\\n                     System.out.println(\\\"element - : \\\"+ i + \\\" \\\" +j);\\n                     brr1[i][j] = z.nextInt();\\n                  }\\n              }\\n         System.out.println(\\\"\\\\nThe First matrix is :\\\\n\\\");\\n        for(i=0;i<3;i++)\\n          {\\n            System.out.println(\\\"\\\\n\\\");\\n            for(j=0;j<3;j++)\\n                 System.out.println(\\\"\\\\t\\\"+arr1[i][j]);\\n          }\\n        System.out.println(\\\"\\\\nThe Second matrix is :\\\\n\\\");\\n        for(i=0;i<3;i++)\\n          {\\n            System.out.println(\\\"\\\\n\\\");\\n            for(j=0;j<3;j++)\\n            System.out.println(\\\"\\\\t\\\"+brr1[i][j]);\\n          }\\n         for(i=0;i<3;i++)\\n             for(j=0;j<3;j++)\\n                  crr1[i][j]=arr1[i][j]+brr1[i][j];\\n         System.out.println(\\\"\\\\nThe Addition of two matrix is : \\\\n\\\");\\n         for(i=0;i<3;i++){\\n              System.out.println(\\\"\\\\n\\\");\\n             for(j=0;j<3;j++)\\n                  System.out.println(\\\"\\\\t\\\"+crr1[i][j]);\\n         }\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input elements in the first matrix :\\nelement - [0],[0] : 1 2 3\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 4 5 6\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 7 8 9\\nelement - [2],[1] : element - [2],[2] : Input elements in the second matrix :\\nelement - [0],[0] : 9 8 7\\nelement - [0],[1] : element - [0],[2] : element - [1],[0] : 6 5 4\\nelement - [1],[1] : element - [1],[2] : element - [2],[0] : 3 2 1\\nelement - [2],[1] : element - [2],[2] :\\nThe First matrix is :\\n\\n1       2       3\\n4       5       6\\n7       8       9\\nThe Second matrix is :\\n\\n9       8       7\\n6       5       4\\n3       2       1\\nThe Addition of two matrix is :\\n\\n10      10      10\\n10      10      10\\n10      10      10\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation 26. Write a C program to add two matrices. Output C++ Implementation 26. Write a C++ program to add two matrices. Outputâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-program-to-add-two-matrices","formatString":"DD.MM.YYYY"}}