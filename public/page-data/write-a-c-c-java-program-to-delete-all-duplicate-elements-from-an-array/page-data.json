{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/write-a-c-c-java-program-to-delete-all-duplicate-elements-from-an-array","result":{"data":{"post":{"slug":"/write-a-c-c-java-program-to-delete-all-duplicate-elements-from-an-array","title":"Write a C/C++/Java program to delete all duplicate elements from an array.","date":"16.04.2020","tags":[{"name":"#c","slug":"c"},{"name":"#c++","slug":"c"},{"name":"#java","slug":"java"},{"name":"#tutorial","slug":"tutorial"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to delete all duplicate elements from an array.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"16. Write a C program to delete all duplicate elements from an array.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to delete all duplicate elements from an array.\\n\\n#include <stdio.h>\\nint main()\\n{\\n  int arr[10], brr[10], count = 0, i, j;\\n  printf(\\\"Enter 10 elements of an array-\\\\n\\\");\\n  for ( i= 0; i <10; i++)\\n    scanf(\\\"%d\\\", &arr[i]);\\n  for (i = 0; i <10; i++)\\n  {\\n    for (j = 0; j < count; j++)\\n    {\\n      if(arr[i] == brr[j])\\n        break;\\n    }\\n    if (j == count)\\n    {\\n      brr[count] = arr[i];\\n      count++;\\n    }\\n  }\\n  printf(\\\"Array obtained after removing duplicate elements:\\\\n\\\");\\n  for (i = 0; i < count; i++)\\n    printf(\\\"%d\\\\n\\\", brr[i]);\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 10 elements of an array-\\n4\\n5\\n3\\n2\\n5\\n6\\n7\\n8\\n2\\n1\\nArray obtained after removing duplicate elements:\\n4\\n5\\n3\\n2\\n6\\n7\\n8\\n1\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"16. Write a C++ program to delete all duplicate elements from an array.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to delete all duplicate elements from an array.\\n\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int arr[10], brr[10], c= 0, i, j;\\n    cout<<\\\"Enter 10 elements of an array-\\\\n\\\";\\n    for ( i= 0; i <10; i++)\\n        cin>>arr[i];\\n    for (i = 0; i <10; i++)\\n    {\\n        for (j = 0; j < c; j++)\\n        {\\n            if(arr[i] == brr[j])\\n                break;\\n        }\\n        if (j == c)\\n        {\\n            brr[c] = arr[i];\\n            c++;\\n        }\\n    }\\n    cout<<\\\"Array obtained after removing duplicate elements:\\\\n\\\";\\n    for (i = 0; i < c; i++)\\n        cout<<brr[i]<<\\\"  \\\";\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 10 elements of an array-\\n4\\n5\\n3\\n2\\n5\\n6\\n7\\n8\\n2\\n1\\nArray obtained after removing duplicate elements:\\n4\\n5\\n3\\n2\\n6\\n7\\n8\\n1\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"16. Write a Java program to delete all duplicate elements from an array.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to delete all duplicate elements from an array.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        int arr[]=new int[10],brr[]=new int[10],i,j,c=0,m=1;\\n        System.out.println(\\\"Enter 10 elements of an array-\\\\n\\\");\\n        for ( i= 0; i <10; i++)\\n            arr[i]=z.nextInt();\\n        for (i = 0; i <10; i++)\\n        {\\n            for (j = 0; j < c; j++)\\n            {\\n                if(arr[i] == brr[j])\\n                    break;\\n            }\\n            if (j == c)\\n            {\\n                brr[c] = arr[i];\\n                c++;\\n            }\\n        }\\n        System.out.println(\\\"Array obtained after removing duplicate elements:\\\\n\\\");\\n        for (i = 0; i < c; i++)\\n            System.out.println(brr[i]+\\\"  \\\");\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter 10 elements of an array-\\n4\\n5\\n3\\n2\\n5\\n6\\n7\\n8\\n2\\n1\\nArray obtained after removing duplicate elements:\\n4\\n5\\n3\\n2\\n6\\n7\\n8\\n1\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation 16. Write a C program to delete all duplicate elements from an array. Output C++ Implementation 16. Write a C++ program toâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-program-to-delete-all-duplicate-elements-from-an-array","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}