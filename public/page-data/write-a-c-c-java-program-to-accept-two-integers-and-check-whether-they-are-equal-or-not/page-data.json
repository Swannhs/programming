{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/write-a-c-c-java-program-to-accept-two-integers-and-check-whether-they-are-equal-or-not","result":{"data":{"post":{"slug":"/write-a-c-c-java-program-to-accept-two-integers-and-check-whether-they-are-equal-or-not","title":"Write a C/C++/Java program to accept two integers and check whether they are equal or not.","date":"16.04.2020","tags":[{"name":"#c","slug":"c"},{"name":"#c++","slug":"c"},{"name":"#java","slug":"java"},{"name":"#tutorial","slug":"tutorial"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to accept two integers and check whether they are equal or not.\",\n  \"category\": \"If-Else Index\",\n  \"tags\": [\"#c\", \"#c++\", \"#java\", \"#tutorial\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"Program-1: Write a C++ program to accept two integers and check whether they are equal or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"/*Write a C program to accept two integers and check whether they are equal or not.*/\\n#include<stdio.h>\\nint main()\\n{\\n    int a,b;\\n    printf(\\\"Input Two Integer\\\");\\n    scanf(\\\"%d %d\\\",&a,&b);\\n    if(a==b)\\n        printf(\\\"They are Equal\\\");\\n    else\\n        printf(\\\"They are not Equal\\\");\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input Two Integer\\n5\\n8\\nThey are not Equal\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"Program-1: Write a C++ program to accept two integers and check whether they are equal or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"/*Write a C++ program to accept two integers and check whether they are equal or not.*/\\n#include<iostream>\\nusing namespace std;\\nint main()\\n{\\n    int a,b;\\n    cout<<\\\"input two integer-\\\\n\\\";\\n    cin>>a>>b;\\n    if(a==b)\\n        cout<<\\\"They are Equal\\\";\\n    else\\n        cout<<\\\"They are not Equal\\\";\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input Two Integer\\n5\\n8\\nThey are not Equal\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"Program-1: Write a java program to accept two integers and check whether they are equal or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"/*Write a java program to accept two integers and check whether they are equal or not.*/\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n\\n        Scanner z=new Scanner(System.in);\\n        int a,b;\\n        System.out.println(\\\"Input Two Integer\\\");\\n        a=z.nextInt();\\n        b=z.nextInt();\\n        if(a==b)\\n            System.out.println(\\\"They are Equal\\\");\\n        else\\n            System.out.println(\\\"They are not Equal\\\");\\n\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input Two Integer\\n5\\n8\\nThey are not Equal\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation Program-1: Write a C++ program to accept two integers and check whether they are equal or not. Output C++ Implementationâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-program-to-accept-two-integers-and-check-whether-they-are-equal-or-not","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}