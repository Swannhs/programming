{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/write-a-c-c-java-program-to-check-whether-two-matrices-are-equal-or-not","result":{"data":{"post":{"slug":"/write-a-c-c-java-program-to-check-whether-two-matrices-are-equal-or-not","title":"Write a C/C++/Java program to check whether two matrices are equal or not.","date":"16.04.2020","tags":[{"name":"array","slug":"array"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to check whether two matrices are equal or not.\",\n  \"category\": \"Array Program Index\",\n  \"tags\": [\"array\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"30. Write a C program to check whether two matrices are equal or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to check whether two matrices are equal or not.\\n#include <stdio.h>\\nint main()\\n{\\n   int arr1[50][50], brr1[50][50],i, j, r1, c1, r2, c2, a =1;\\n   printf(\\\"Input Rows and Columns of the 1st matrix :\\\\n\\\");\\n   scanf(\\\"%d %d\\\", &r1, &c1);\\n\\n   printf(\\\"Input Rows and Columns of the 2nd matrix :\\\\n\\\");\\n   scanf(\\\"%d %d\\\", &r2,&c2);\\n     printf(\\\"Input elements in the first matrix :\\\\n\\\");\\n       for(i=0;i<r1;i++)\\n        {\\n            for(j=0;j<c1;j++)\\n            {\\n               printf(\\\"element - [%d],[%d] : \\\",i,j);\\n               scanf(\\\"%d\\\",&arr1[i][j]);\\n            }\\n        }\\n       printf(\\\"Input elements in the second matrix :\\\\n\\\");\\n       for(i=0;i<r2;i++)\\n        {\\n            for(j=0;j<c2;j++)\\n            {\\n               printf(\\\"element - [%d],[%d] : \\\",i,j);\\n               scanf(\\\"%d\\\",&brr1[i][j]);\\n            }\\n        }\\n      printf(\\\"The first matrix is :\\\\n\\\");\\n     for(i=0;i<r1;i++)\\n     {\\n       for(j=0;j<c1 ;j++)\\n         printf(\\\" %d \\\",arr1[i][j]);\\n        printf(\\\"\\\\n\\\");\\n     }\\n     printf(\\\"The second matrix is :\\\\n\\\");\\n     for(i=0;i<r2;i++)\\n     {\\n       for(j=0;j<c2 ;j++)\\n         printf(\\\" %d \\\",brr1[i][j]);\\n        printf(\\\"\\\\n\\\");\\n     }\\n   if(r1 == r2 && c1 == c2)\\n   {\\n        printf(\\\"The Matrices can be compared. \\\\n\\\");\\n        for(i=0; i<r1; i++)\\n        {\\n             for(j=0; j<c2; j++)\\n             {\\n            if(arr1[i][j] != brr1[i][j])\\n            {\\n                   a = 0;\\n                   break;\\n            }\\n             }\\n          }\\n    }\\n    else\\n    {  printf(\\\"The Matrices Cannot be compared :\\\\n\\\");\\n       exit(1);\\n    }\\n    if(a == 1 )\\n    printf(\\\"Two matrices are equal.\\\");\\n    else\\n    printf(\\\"But,two matrices are not equal.\\\");\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input Rows and Columns of the 1st matrix :\\n2 2\\nInput Rows and Columns of the 2nd matrix :\\n2 2\\nInput elements in the first matrix :\\nelement - [0],[0] : 1\\nelement - [0],[1] : 2\\nelement - [1],[0] : 3\\nelement - [1],[1] : 4\\nInput elements in the second matrix :\\nelement - [0],[0] : 5\\nelement - [0],[1] : 6\\nelement - [1],[0] : 7\\nelement - [1],[1] : 8\\nThe first matrix is :\\n 1  2\\n 3  4\\nThe second matrix is :\\n 5  6\\n 7  8\\nThe Matrices can be compared.\\nBut,two matrices are not equal.\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"30. Write a C++ program to check whether two matrices are equal or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to check whether two matrices are equal or not.\\n\\n#include <iostream>\\nusing namespace std;\\nint  main()\\n{\\n   int arr1[50][50], brr1[50][50],i, j, r1, c1, r2, c2, a =1;\\n   cout << \\\"Input Rows and Columns of the 1st matrix :\\\\n\\\";\\n   scanf(\\\"%d %d\\\", &r1, &c1);\\n   cout << \\\"Input Rows and Columns of the 2nd matrix :\\\\n\\\";\\n   cin >> r2 >> c2;\\n     cout << \\\"Input elements in the first matrix :\\\\n\\\";\\n       for(i=0;i<r1;i++)\\n        {\\n            for(j=0;j<c1;j++)\\n            {\\n               cout << \\\"element -  : [\\\" << i << \\\"][\\\" << j <<\\\"]\\\";\\n               cin >> arr1[i][j];\\n            }\\n        }\\n       cout << \\\"Input elements in the second matrix :\\\\n\\\";\\n       for(i=0;i<r2;i++)\\n        {\\n            for(j=0;j<c2;j++)\\n            {\\n               cout << \\\"element -  : [\\\" << i << \\\"][\\\" << j <<\\\"]\\\";\\n               cin >> brr1[i][j];\\n            }\\n        }\\n     cout << \\\"The first matrix is :\\\\n\\\";\\n     for(i=0;i<r1;i++)\\n     {\\n       for(j=0;j<c1 ;j++)\\n         cout << \\\" \\\" << arr1[i][j] << \\\" \\\";\\n       cout << \\\"\\\\n\\\";\\n     }\\n     cout << \\\"The second matrix is :\\\\n\\\";\\n     for(i=0;i<r2;i++)\\n     {\\n       for(j=0;j<c2 ;j++)\\n         cout << \\\" \\\" << brr1[i][j] << \\\" \\\";\\n        cout << \\\"\\\\n\\\";\\n     }\\n    if(r1 == r2 && c1 == c2)\\n    {\\n        cout << \\\"The Matrices can be compared. \\\\n\\\";\\n        for(i=0; i<r1; i++)\\n        {\\n            for(j=0; j<c2; j++)\\n            {\\n            if(arr1[i][j] != brr1[i][j])\\n            {\\n                   a = 0;\\n                   break;\\n            }\\n            }\\n          }\\n    }\\n    else\\n    {  cout << \\\"The Matrices Cannot be compared :\\\\n\\\";\\n       exit(1);\\n    }\\n    if(a == 1 )\\n    cout << \\\"Two matrices are equal.\\\";\\n    else\\n    cout << \\\"But,two matrices are not equal.\\\";\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input Rows and Columns of the 1st matrix :\\n2 2\\nInput Rows and Columns of the 2nd matrix :\\n2 2\\nInput elements in the first matrix :\\nelement - [0],[0] : 1\\nelement - [0],[1] : 2\\nelement - [1],[0] : 3\\nelement - [1],[1] : 4\\nInput elements in the second matrix :\\nelement - [0],[0] : 5\\nelement - [0],[1] : 6\\nelement - [1],[0] : 7\\nelement - [1],[1] : 8\\nThe first matrix is :\\n 1  2\\n 3  4\\nThe second matrix is :\\n 5  6\\n 7  8\\nThe Matrices can be compared.\\nBut,two matrices are not equal.\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"30. Write a Java program to check whether two matrices are equal or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to check whether two matrices are equal or not.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n           Scanner z=new Scanner(System.in);\\n           int arr1[][]= new int[3][3],brr1[][] = new int[3][3],i, j, r1, c1, r2, c2, a =1;\\n           System.out.println(\\\"Input Rows and Columns of the 1st matrix :\\\\n\\\");\\n           r1 = z.nextInt();\\n           c1 = z.nextInt();\\n           System.out.println(\\\"Input Rows and Columns of the 2nd matrix :\\\\n\\\");\\n           r2 = z.nextInt();\\n           c2 = z.nextInt();\\n             System.out.println(\\\"Input elements in the first matrix :\\\\n\\\");\\n               for(i=0;i<r1;i++)\\n                {\\n                    for(j=0;j<c1;j++)\\n                    {\\n                       System.out.println(\\\"element - : \\\"+\\\"[\\\"+i+\\\"]\\\"+\\\"[\\\"+j+\\\"]\\\");\\n                       arr1[i][j] = z.nextInt();\\n                    }\\n                }\\n               System.out.println(\\\"Input elements in the second matrix :\\\\n\\\");\\n               for(i=0;i<r2;i++)\\n                {\\n                    for(j=0;j<c2;j++)\\n                    {\\n                       System.out.println(\\\"element - : \\\"+\\\"[\\\"+i+\\\"]\\\"+\\\"[\\\"+j+\\\"]\\\");\\n                       brr1[i][j] = z.nextInt();\\n                    }\\n                }\\n              System.out.println(\\\"The first matrix is :\\\\n\\\");\\n             for(i=0;i<r1;i++)\\n             {\\n               for(j=0;j<c1 ;j++)\\n                 System.out.printf(\\\" \\\"+arr1[i][j]+\\\" \\\");\\n                System.out.printf(\\\"\\\\n\\\");\\n             }\\n             System.out.println(\\\"The second matrix is :\\\\n\\\");\\n             for(i=0;i<r2;i++)\\n             {\\n               for(j=0;j<c2 ;j++)\\n                 System.out.printf(\\\" \\\"+brr1[i][j]+\\\" \\\");\\n                System.out.printf(\\\"\\\\n\\\");\\n             }\\n           if(r1 == r2 && c1 == c2)\\n           {\\n                System.out.println(\\\"The Matrices can be compared. \\\\n\\\");\\n                for(i=0; i<r1; i++)\\n                {\\n                     for(j=0; j<c2; j++)\\n                     {\\n                        if(arr1[i][j] != brr1[i][j])\\n                        {\\n                               a = 0;\\n                               break;\\n                        }\\n                     }\\n                  }\\n            }\\n            else\\n            {\\n               System.out.println(\\\"The Matrices Cannot be compared :\\\\n\\\");\\n               System.exit(1);\\n            }\\n            if(a == 1 )\\n              System.out.println(\\\"Two matrices are equal.\\\");\\n            else\\n              System.out.println(\\\"But,two matrices are not equal.\\\");\\n      }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Input Rows and Columns of the 1st matrix :\\n2 2\\nInput Rows and Columns of the 2nd matrix :\\n2 2\\nInput elements in the first matrix :\\nelement - [0],[0] : 1\\nelement - [0],[1] : 2\\nelement - [1],[0] : 3\\nelement - [1],[1] : 4\\nInput elements in the second matrix :\\nelement - [0],[0] : 5\\nelement - [0],[1] : 6\\nelement - [1],[0] : 7\\nelement - [1],[1] : 8\\nThe first matrix is :\\n 1  2\\n 3  4\\nThe second matrix is :\\n 5  6\\n 7  8\\nThe Matrices can be compared.\\nBut,two matrices are not equal.\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation 30. Write a C program to check whether two matrices are equal or not. Output C++ Implementation 30. Write a C++ program to…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-program-to-check-whether-two-matrices-are-equal-or-not","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}