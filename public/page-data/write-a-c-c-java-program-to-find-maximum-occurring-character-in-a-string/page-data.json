{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/write-a-c-c-java-program-to-find-maximum-occurring-character-in-a-string","result":{"data":{"post":{"slug":"/write-a-c-c-java-program-to-find-maximum-occurring-character-in-a-string","title":"Write a C/C++/Java program to find maximum occurring character in a string.","date":"16.04.2020","tags":[{"name":"string","slug":"string"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Write a C/C++/Java program to find maximum occurring character in a string.\",\n  \"category\": \"String Index\",\n  \"tags\": [\"string\"],\n  \"date\": \"2020-04-16T00:00:00.000Z\",\n  \"thumbnailText\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"C Implementation\"), mdx(\"h3\", null, \"17. Write a C program to find maximum occurring character in a string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C program to find maximum occurring character in a string.\\n#include <stdio.h>\\n#include <string.h>\\nint main()\\n{\\n    char a[100];\\n    int i,j,count=0,maxcount=0;\\n    char maxcharacter;\\n    gets(a);\\n    for(i=0;i<strlen(a);i++)\\n    {\\n        count=0;\\n        for(j=0;j<strlen(a);j++)\\n    {\\n        if(a[i]==a[j])\\n          count++;\\n    }\\n    if(maxcount<count)\\n    {\\n        maxcount=count;\\n        maxcharacter=a[i];\\n    }\\n    }\\n\\n    printf(\\\"the maximum character is:%c\\\",maxcharacter);\\n\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter  the string : Hello from funycode\\nstring has  3 words\\n\")), mdx(\"h2\", null, \"C++ Implementation\"), mdx(\"h3\", null, \"17. Write a C++ program to find maximum occurring character in a string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-c\"\n  }, \"//Write a C++ program to find maximum occurring character in a string.\\n\\n#include <iostream>\\n#include <string.h>\\nusing namespace std;\\nint  main()\\n{\\n    char a[100];\\n    int i,j,count=0,maxcount=0;\\n    char maxcharacter;\\n    gets(a);\\n    for(i=0;i<strlen(a);i++)\\n    {\\n          count=0;\\n          for(j=0;j<strlen(a);j++)\\n          {\\n              if(a[i]==a[j])\\n                count++;\\n          }\\n          if(maxcount<count)\\n          {\\n              maxcount=count;\\n              maxcharacter=a[i];\\n          }\\n    }\\n\\n    cout << \\\"the maximum character is: \\\" << maxcharacter;\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter  the string : Hello from funycode\\nstring has  3 words\\n\")), mdx(\"h2\", null, \"Java Implementation\"), mdx(\"h3\", null, \"17. Write a Java program to find maximum occurring character in a string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a Java program to find maximum occurring character in a string.\\nimport java.util.Scanner;\\npublic class Funycode {\\n    public static void main(String[] args) {\\n        Scanner z=new Scanner(System.in);\\n        System.out.println(\\\"Enter a string: \\\");\\n        String str, word = \\\"\\\";\\n        int i,w=0;\\n        str = z.nextLine();\\n        for(i = str.length()-1; i >= 0; i --){\\n            if(str.charAt(i)==32)\\n            w++;\\n        }\\n        if(i>0)\\n          w++;\\n        System.out.println(\\\"string has \\\" + w + \\\" words\\\");\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Output\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Enter  the string : Hello from funycode\\nstring has  3 words\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"C Implementation 17. Write a C program to find maximum occurring character in a string. Output C++ Implementation 17. Write a C++ program toâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/write-a-c-c-java-program-to-find-maximum-occurring-character-in-a-string","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["2744905544","3090400250","318001574"]}